<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="markdown" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" /></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Represents a particular manner of splitting an orderable data source into multiple partitions.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxxx x xxxxxxxxxx xxxxxx xx xxxxxxxxx xx xxxxxxxxx xxxx xxxxxx xxxx xxxxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Type of the elements in the collection.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xx xxx xxxxxxxx xx xxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Indicates whether the elements in each partition are yielded in the order of increasing keys.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxx xxxxxxx xxx xxxxxxxx xx xxxx xxxxxxxxx xxx xxxxxxx xx xxx xxxxx xx xxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Indicates whether elements in an earlier partition always come before elements in a later partition.</source>
          <target state="new">$x$x$Xxxxxxxxx xxxxxxx xxxxxxxx xx xx xxxxxxx xxxxxxxxx xxxxxx xxxx xxxxxx xxxxxxxx xx x xxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>If true, each element in partition 0 has a smaller order key than any element in partition 1, each element in partition 1 has a smaller order key than any element in partition 2, and so on.&lt;/p&gt;\n</source>
          <target state="new">Xx xxxx$ xxxx xxxxxxx xx xxxxxxxxx 0 xxx x xxxxxxx xxxxx xxx xxxx xxx xxxxxxx xx xxxxxxxxx 0$ xxxx xxxxxxx xx xxxxxxxxx 0 xxx x xxxxxxx xxxxx xxx xxxx xxx xxxxxxx xx xxxxxxxxx 0$ xxx xx xx.$$x$$x</target>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Indicates whether keys are normalized.</source>
          <target state="new">$x$x$Xxxxxxxxx xxxxxxx xxxx xxx xxxxxxxxxx.</target>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>If true, all order keys are distinct integers in the range [0 ..</source>
          <target state="new">Xx xxxx$ xxx xxxxx xxxx xxx xxxxxxxx xxxxxxxx xx xxx xxxxx $0 ..</target>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>numberOfElements-1].</source>
          <target state="new">xxxxxxXxXxxxxxxx$0$.</target>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>If false, order keys must still be distinct, but only their relative order is considered, not their absolute values.&lt;/p&gt;\n</source>
          <target state="new">Xx xxxxx$ xxxxx xxxx xxxx xxxxx xx xxxxxxxx$ xxx xxxx xxxxx xxxxxxxx xxxxx xx xxxxxxxxxx$ xxx xxxxx xxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets whether order keys are normalized.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxxxxxx xxxxx xxxx xxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;true if the keys are normalized; otherwise false.&lt;/p&gt;\n</source>
          <target state="new">$x$x$xxxx xx xxx xxxx xxx xxxxxxxxxx$ xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets whether elements in an earlier partition always come before elements in a later partition.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxxxxxx xxxxxxxx xx xx xxxxxxx xxxxxxxxx xxxxxx xxxx xxxxxx xxxxxxxx xx x xxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;true if the elements in an earlier partition always come before elements in a later partition; otherwise false.&lt;/p&gt;\n</source>
          <target state="new">$x$x$xxxx xx xxx xxxxxxxx xx xx xxxxxxx xxxxxxxxx xxxxxx xxxx xxxxxx xxxxxxxx xx x xxxxx xxxxxxxxx$ xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets whether elements in each partition are yielded in the order of increasing keys.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxxxxxx xxxxxxxx xx xxxx xxxxxxxxx xxx xxxxxxx xx xxx xxxxx xx xxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;true if the elements in each partition are yielded in the order of increasing keys; otherwise false.&lt;/p&gt;\n</source>
          <target state="new">$x$x$xxxx xx xxx xxxxxxxx xx xxxx xxxxxxxxx xxx xxxxxxx xx xxx xxxxx xx xxxxxxxxxx xxxx$ xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Creates an object that can partition the underlying collection into a variable number of partitions.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xx xxxxxx xxxx xxx xxxxxxxxx xxx xxxxxxxxxx xxxxxxxxxx xxxx x xxxxxxxx xxxxxx xx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that can create partitions over the underlying data source.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxx xxxxxx xxxxxxxxxx xxxx xxx xxxxxxxxxx xxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Dynamic partitioning is not supported by the base class.</source>
          <target state="new">$x$x$Xxxxxxx xxxxxxxxxxxx xx xxx xxxxxxxxx xx xxx xxxx xxxxx.</target>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>It must be implemented in derived classes.&lt;/p&gt;\n</source>
          <target state="new">Xx xxxx xx xxxxxxxxxxx xx xxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Creates an object that can partition the underlying collection into a variable number of partitions.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xx xxxxxx xxxx xxx xxxxxxxxx xxx xxxxxxxxxx xxxxxxxxxx xxxx x xxxxxxxx xxxxxx xx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that can create partitions over the underlying data source.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxx xxxxxx xxxxxxxxxx xxxx xxx xxxxxxxxxx xxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Dynamic partitioning is not supported by this partitioner.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxxxxxxxxxxx xx xxx xxxxxxxxx xx xxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Partitions the underlying collection into the specified number of orderable partitions.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxxx xxx xxxxxxxxxx xxxxxxxxxx xxxx xxx xxxxxxxxx xxxxxx xx xxxxxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of partitions to create.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A list containing &lt;em&gt;partitionCount&lt;/em&gt; enumerators.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxx xxxxxxxxxx $xx$xxxxxxxxxXxxxx$$xx$ xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Partitions the underlying collection into the given number of ordered partitions.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxxx xxx xxxxxxxxxx xxxxxxxxxx xxxx xxx xxxxx xxxxxx xx xxxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of partitions to create.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A list containing &lt;em&gt;partitionCount&lt;/em&gt; enumerators.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxx xxxxxxxxxx $xx$xxxxxxxxxXxxxx$$xx$ xxxxxxxxxxx.$$x$$x</target>
        </trans-unit></group></body></file></xliff>
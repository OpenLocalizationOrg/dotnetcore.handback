<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="markdown" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" /></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts a base data type to another base data type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx x xxxx xxxx xxxx xx xxxxxxx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns an object of the specified type and whose value is equivalent to the specified object.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xx xxxxxx xx xxx xxxxxxxxx xxxx xxx xxxxx xxxxx xx xxxxxxxxxx xx xxx xxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of object to return.</source>
          <target state="new">$x$x$Xxx xxxx xx xxxxxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object whose type is &lt;em&gt;conversionType&lt;/em&gt; and whose value is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;A null reference (&lt;strong&gt;Nothing&lt;/strong&gt; in Visual Basic), if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt; and &lt;em&gt;conversionType&lt;/em&gt; is not a value type.</source>
          <target state="new">$x$x$Xx xxxxxx xxxxx xxxx xx $xx$xxxxxxxxxxXxxx$$xx$ xxx xxxxx xxxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$X xxxx xxxxxxxxx $$xxxxxx$Xxxxxxx$$xxxxxx$ xx Xxxxxx Xxxxx$$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$ xxx $xx$xxxxxxxxxxXxxx$$xx$ xx xxx x xxxxx xxxx.</target>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in a format recognized by &lt;em&gt;conversionType&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx x xxxxxx xxxxxxxxxx xx $xx$xxxxxxxxxxXxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; represents a number that is out of the range of &lt;em&gt;conversionType&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxxxxxxxx x xxxxxx xxxx xx xxx xx xxx xxxxx xx $xx$xxxxxxxxxxXxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;conversionType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxxxxxXxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns an object of the specified type whose value is equivalent to the specified object.</source>
          <target state="new">$x$x$Xxxxxxx xx xxxxxx xx xxx xxxxxxxxx xxxx xxxxx xxxxx xx xxxxxxxxxx xx xxx xxxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>A parameter supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">X xxxxxxxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of object to return.</source>
          <target state="new">$x$x$Xxx xxxx xx xxxxxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in a format for &lt;em&gt;conversionType&lt;/em&gt; recognized by &lt;em&gt;provider&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx x xxxxxx xxx $xx$xxxxxxxxxxXxxx$$xx$ xxxxxxxxxx xx $xx$xxxxxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; represents a number that is out of the range of &lt;em&gt;conversionType&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxxxxxxxx x xxxxxx xxxx xx xxx xx xxx xxxxx xx $xx$xxxxxxxxxxXxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;conversionType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxxxxxXxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns an object of the specified type whose value is equivalent to the specified object.</source>
          <target state="new">$x$x$Xxxxxxx xx xxxxxx xx xxx xxxxxxxxx xxxx xxxxx xxxxx xx xxxxxxxxxx xx xxx xxxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>A parameter supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">X xxxxxxxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of object to return.</source>
          <target state="new">$x$x$Xxx xxxx xx xxxxxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in a format for the &lt;em&gt;typeCode&lt;/em&gt; type recognized by &lt;em&gt;provider&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx x xxxxxx xxx xxx $xx$xxxxXxxx$$xx$ xxxx xxxxxxxxxx xx $xx$xxxxxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; represents a number that is out of the range of the &lt;em&gt;typeCode&lt;/em&gt; type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxxxxxxxx x xxxxxx xxxx xx xxx xx xxx xxxxx xx xxx $xx$xxxxXxxx$$xx$ xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;typeCode&lt;/em&gt; is invalid.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx xxxxxxx.</target>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts a subset of a Unicode character array, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.</source>
          <target state="new">$x$x$Xxxxxxxx x xxxxxx xx x Xxxxxxx xxxxxxxxx xxxxx$ xxxxx xxxxxxx xxxxxx xxxx xx xxxx$00 xxxxxx$ xx xx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx xxxxx.</target>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>Parameters specify the subset in the input array and the number of elements to convert.&lt;/p&gt;\n</source>
          <target state="new">Xxxxxxxxxx xxxxxxx xxx xxxxxx xx xxx xxxxx xxxxx xxx xxx xxxxxx xx xxxxxxxx xx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A Unicode character array.</source>
          <target state="new">$x$x$X Xxxxxxx xxxxxxxxx xxxxx.</target>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A position within &lt;em&gt;inArray&lt;/em&gt;.</source>
          <target state="new">$x$x$X xxxxxxxx xxxxxx $xx$xxXxxxx$$xx$.</target>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in &lt;em&gt;inArray&lt;/em&gt; to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx $xx$xxXxxxx$$xx$ xx xxxxxxx.</target>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of 8-bit unsigned integers equivalent to &lt;em&gt;length&lt;/em&gt; elements at position &lt;em&gt;offset&lt;/em&gt; in &lt;em&gt;inArray&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxx xx 0$xxx xxxxxxxx xxxxxxxx xxxxxxxxxx xx $xx$xxxxxx$$xx$ xxxxxxxx xx xxxxxxxx $xx$xxxxxx$$xx$ xx $xx$xxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;inArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxXxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;offset&lt;/em&gt; or &lt;em&gt;length&lt;/em&gt; is less than 0.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;offset&lt;/em&gt; plus &lt;em&gt;length&lt;/em&gt; indicates a position not within &lt;em&gt;inArray&lt;/em&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx $xx$xxxxxx$$xx$ xx xxxx xxxx 0.$$x$$x$x$$xx$ $$x$$x$x$$x$xx$xxxxxx$$xx$ xxxx $xx$xxxxxx$$xx$ xxxxxxxxx x xxxxxxxx xxx xxxxxx $xx$xxXxxxx$$xx$.</target>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The length of &lt;em&gt;inArray&lt;/em&gt;, ignoring white-space characters, is not zero or a multiple of 4.</source>
          <target state="new">$x$x$Xxx xxxxxx xx $xx$xxXxxxx$$xx$$ xxxxxxxx xxxxx$xxxxx xxxxxxxxxx$ xx xxx xxxx xx x xxxxxxxx xx 0.</target>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The format of &lt;em&gt;inArray&lt;/em&gt; is invalid.</source>
          <target state="new">$$x$$x$x$$xx$$$x$$x$x$Xxx xxxxxx xx $xx$xxXxxxx$$xx$ xx xxxxxxx.</target>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;inArray&lt;/em&gt; contains a non-base-64 character, more than two padding characters, or a non-white-space character among the padding characters.</source>
          <target state="new">$xx$xxXxxxx$$xx$ xxxxxxxx x xxx$xxxx$00 xxxxxxxxx$ xxxx xxxx xxx xxxxxxx xxxxxxxxxx$ xx x xxx$xxxxx$xxxxx xxxxxxxxx xxxxx xxx xxxxxxx xxxxxxxxxx.</target>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string, which encodes binary data as base-64 digits, to an equivalent 8-bit unsigned integer array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx$ xxxxx xxxxxxx xxxxxx xxxx xx xxxx$00 xxxxxx$ xx xx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of 8-bit unsigned integers that is equivalent to &lt;em&gt;s&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxx xx 0$xxx xxxxxxxx xxxxxxxx xxxx xx xxxxxxxxxx xx $xx$x$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;s&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$x$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The length of &lt;em&gt;s&lt;/em&gt;, ignoring white-space characters, is not zero or a multiple of 4.</source>
          <target state="new">$x$x$Xxx xxxxxx xx $xx$x$$xx$$ xxxxxxxx xxxxx$xxxxx xxxxxxxxxx$ xx xxx xxxx xx x xxxxxxxx xx 0.</target>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The format of &lt;em&gt;s&lt;/em&gt; is invalid.</source>
          <target state="new">$$x$$x$x$$xx$$$x$$x$x$Xxx xxxxxx xx $xx$x$$xx$ xx xxxxxxx.</target>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>&lt;em&gt;s&lt;/em&gt; contains a non-base-64 character, more than two padding characters, or a non-white space-character among the padding characters.&lt;/p&gt;\n</source>
          <target state="new">$xx$x$$xx$ xxxxxxxx x xxx$xxxx$00 xxxxxxxxx$ xxxx xxxx xxx xxxxxxx xxxxxxxxxx$ xx x xxx$xxxxx xxxxx$xxxxxxxxx xxxxx xxx xxxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts a subset of an 8-bit unsigned integer array to an equivalent subset of a Unicode character array encoded with base-64 digits.</source>
          <target state="new">$x$x$Xxxxxxxx x xxxxxx xx xx 0$xxx xxxxxxxx xxxxxxx xxxxx xx xx xxxxxxxxxx xxxxxx xx x Xxxxxxx xxxxxxxxx xxxxx xxxxxxx xxxx xxxx$00 xxxxxx.</target>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>Parameters specify the subsets as offsets in the input and output arrays, and the number of elements in the input array to convert.&lt;/p&gt;\n</source>
          <target state="new">Xxxxxxxxxx xxxxxxx xxx xxxxxxx xx xxxxxxx xx xxx xxxxx xxx xxxxxx xxxxxx$ xxx xxx xxxxxx xx xxxxxxxx xx xxx xxxxx xxxxx xx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An input array of 8-bit unsigned integers.</source>
          <target state="new">$x$x$Xx xxxxx xxxxx xx 0$xxx xxxxxxxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A position within &lt;em&gt;inArray&lt;/em&gt;.</source>
          <target state="new">$x$x$X xxxxxxxx xxxxxx $xx$xxXxxxx$$xx$.</target>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements of &lt;em&gt;inArray&lt;/em&gt; to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx $xx$xxXxxxx$$xx$ xx xxxxxxx.</target>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An output array of Unicode characters.</source>
          <target state="new">$x$x$Xx xxxxxx xxxxx xx Xxxxxxx xxxxxxxxxx.</target>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A position within &lt;em&gt;outArray&lt;/em&gt;.</source>
          <target state="new">$x$x$X xxxxxxxx xxxxxx $xx$xxxXxxxx$$xx$.</target>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer containing the number of bytes in &lt;em&gt;outArray&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxxxxxxxx xxx xxxxxx xx xxxxx xx $xx$xxxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;inArray&lt;/em&gt; or &lt;em&gt;outArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxXxxxx$$xx$ xx $xx$xxxXxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;offsetIn&lt;/em&gt;, &lt;em&gt;offsetOut&lt;/em&gt;, or &lt;em&gt;length&lt;/em&gt; is negative.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;offsetIn&lt;/em&gt; plus &lt;em&gt;length&lt;/em&gt; is greater than the length of &lt;em&gt;inArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;offsetOut&lt;/em&gt; plus the number of elements to return is greater than the length of &lt;em&gt;outArray&lt;/em&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxxxXx$$xx$$ $xx$xxxxxxXxx$$xx$$ xx $xx$xxxxxx$$xx$ xx xxxxxxxx.$$x$$x$x$$xx$ $$x$$x$x$$x$xx$xxxxxxXx$$xx$ xxxx $xx$xxxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxXxxxx$$xx$.$$x$$x$x$$xx$ $$x$$x$x$$x$xx$xxxxxxXxx$$xx$ xxxx xxx xxxxxx xx xxxxxxxx xx xxxxxx xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxXxxxx$$xx$.</target>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xx xxxxx xx 0$xxx xxxxxxxx xxxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx xxxx xx xxxxxxx xxxx xxxx$00 xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="173" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of 8-bit unsigned integers.</source>
          <target state="new">$x$x$Xx xxxxx xx 0$xxx xxxxxxxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="174" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="175" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation, in base 64, of the contents of &lt;em&gt;inArray&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx$ xx xxxx 00$ xx xxx xxxxxxxx xx $xx$xxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="176" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;inArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxXxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="177" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="178" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts a subset of an array of 8-bit unsigned integers to its equivalent string representation that is encoded with base-64 digits.</source>
          <target state="new">$x$x$Xxxxxxxx x xxxxxx xx xx xxxxx xx 0$xxx xxxxxxxx xxxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx xxxx xx xxxxxxx xxxx xxxx$00 xxxxxx.</target>
        </trans-unit><trans-unit id="179" translate="yes" xml:space="preserve">
          <source>Parameters specify the subset as an offset in the input array, and the number of elements in the array to convert.&lt;/p&gt;\n</source>
          <target state="new">Xxxxxxxxxx xxxxxxx xxx xxxxxx xx xx xxxxxx xx xxx xxxxx xxxxx$ xxx xxx xxxxxx xx xxxxxxxx xx xxx xxxxx xx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="180" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of 8-bit unsigned integers.</source>
          <target state="new">$x$x$Xx xxxxx xx 0$xxx xxxxxxxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="181" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="182" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An offset in &lt;em&gt;inArray&lt;/em&gt;.</source>
          <target state="new">$x$x$Xx xxxxxx xx $xx$xxXxxxx$$xx$.</target>
        </trans-unit><trans-unit id="183" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="184" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements of &lt;em&gt;inArray&lt;/em&gt; to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx $xx$xxXxxxx$$xx$ xx xxxxxxx.</target>
        </trans-unit><trans-unit id="185" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="186" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation in base 64 of &lt;em&gt;length&lt;/em&gt; elements of &lt;em&gt;inArray&lt;/em&gt;, starting at position &lt;em&gt;offset&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx xxxx 00 xx $xx$xxxxxx$$xx$ xxxxxxxx xx $xx$xxXxxxx$$xx$$ xxxxxxxx xx xxxxxxxx $xx$xxxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="187" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;inArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxXxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="188" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="189" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;offset&lt;/em&gt; or &lt;em&gt;length&lt;/em&gt; is negative.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;offset&lt;/em&gt; plus &lt;em&gt;length&lt;/em&gt; is greater than the length of &lt;em&gt;inArray&lt;/em&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx $xx$xxxxxx$$xx$ xx xxxxxxxx.$$x$$x$x$$xx$ $$x$$x$x$$x$xx$xxxxxx$$xx$ xxxx $xx$xxxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxXxxxx$$xx$.</target>
        </trans-unit><trans-unit id="190" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="191" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified Boolean value; no actual conversion is performed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxx$ xx xxxxxx xxxxxxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="192" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Boolean value to return.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="193" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="194" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is returned unchanged.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="195" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit unsigned integer to an equivalent Boolean value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx Xxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="196" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="197" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="198" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;value&lt;/em&gt; is not zero; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$xxxxx$$xx$ xx xxx xxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="199" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified decimal number to an equivalent Boolean value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxxx xxxxxx xx xx xxxxxxxxxx Xxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="200" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="201" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="202" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;value&lt;/em&gt; is not zero; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$xxxxx$$xx$ xx xxx xxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="203" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified double-precision floating-point number to an equivalent Boolean value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx Xxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="204" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The double-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="205" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="206" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;value&lt;/em&gt; is not zero; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$xxxxx$$xx$ xx xxx xxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="207" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit signed integer to an equivalent Boolean value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx Xxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="208" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="209" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="210" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;value&lt;/em&gt; is not zero; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$xxxxx$$xx$ xx xxx xxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="211" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit signed integer to an equivalent Boolean value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx Xxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="212" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="213" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="214" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;value&lt;/em&gt; is not zero; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$xxxxx$$xx$ xx xxx xxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="215" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit signed integer to an equivalent Boolean value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx Xxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="216" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="217" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="218" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;value&lt;/em&gt; is not zero; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$xxxxx$$xx$ xx xxx xxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="219" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of a specified object to an equivalent Boolean value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx x xxxxxxxxx xxxxxx xx xx xxxxxxxxxx Xxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="220" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to an equivalent Boolean value, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx xx xxxxxxxxxx Xxxxxxx xxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="221" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="222" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="223" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit signed integer to an equivalent Boolean value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx Xxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="224" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="225" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="226" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;value&lt;/em&gt; is not zero; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$xxxxx$$xx$ xx xxx xxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="227" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified single-precision floating-point number to an equivalent Boolean value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx Xxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="228" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The single-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="229" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="230" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;value&lt;/em&gt; is not zero; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$xxxxx$$xx$ xx xxx xxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="231" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a logical value to its Boolean equivalent.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxxx xxxxx xx xxx Xxxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="232" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a logical value to its Boolean equivalent, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxxx xxxxx xx xxx Xxxxxxx xxxxxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="233" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="234" translate="yes" xml:space="preserve">
          <source>This parameter is ignored.&lt;/p&gt;\n</source>
          <target state="new">Xxxx xxxxxxxxx xx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="235" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit unsigned integer to an equivalent Boolean value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx Xxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="236" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="237" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="238" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;value&lt;/em&gt; is not zero; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$xxxxx$$xx$ xx xxx xxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="239" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit unsigned integer to an equivalent Boolean value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx Xxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="240" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="241" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="242" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;value&lt;/em&gt; is not zero; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$xxxxx$$xx$ xx xxx xxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="243" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit unsigned integer to an equivalent Boolean value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx Xxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="244" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="245" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="246" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;value&lt;/em&gt; is not zero; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$xxxxx$$xx$ xx xxx xxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="247" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified Boolean value to the equivalent 8-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxx xx xxx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="248" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Boolean value to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="249" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="250" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number 1 if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;; otherwise, 0.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx 0 xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxxxxxxxx$ 0.$$x$$x</target>
        </trans-unit><trans-unit id="251" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified 8-bit unsigned integer; no actual conversion is performed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx 0$xxx xxxxxxxx xxxxxxx$ xx xxxxxx xxxxxxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="252" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit unsigned integer to return.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxxxx xxxxxxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="253" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="254" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is returned unchanged.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="255" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified Unicode character to the equivalent 8-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="256" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Unicode character to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="257" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="258" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="259" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified decimal number to an equivalent 8-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxxx xxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="260" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="261" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="262" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 8-bit unsigned integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 0$xxx xxxxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="263" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="264" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified double-precision floating-point number to an equivalent 8-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="265" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The double-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="266" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="267" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 8-bit unsigned integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 0$xxx xxxxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="268" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="269" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit signed integer to an equivalent 8-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="270" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="271" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="272" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="273" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit signed integer to an equivalent 8-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="274" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="275" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="276" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="277" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit signed integer to an equivalent 8-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="278" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="279" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="280" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="281" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to an 8-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx xx 0$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="282" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="283" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to an 8-bit unsigned integer, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx xx 0$xxx xxxxxxxx xxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="284" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="285" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="286" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="287" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit signed integer to an equivalent 8-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="288" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit signed integer to be converted.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxx xxxxxxx xx xx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="289" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="290" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="291" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified single-precision floating-point number to an equivalent 8-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="292" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A single-precision floating-point number.</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="293" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="294" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 8-bit unsigned integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 0$xxx xxxxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="295" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="296" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent 8-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="297" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="298" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="299" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="300" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxx xxx xxxxxxx xx xx xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxx xx xxxxxx $0 xxxxxxx 0$.</target>
        </trans-unit><trans-unit id="301" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="302" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent 8-bit unsigned integer, using specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx$ xxxxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="303" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="304" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="305" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="306" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="307" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="308" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxx xxx xxxxxxx xx xx xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxx xx xxxxxx $0 xxxxxxx 0$.</target>
        </trans-unit><trans-unit id="309" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="310" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the string representation of a number in a specified base to an equivalent 8-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx x xxxxxxxxx xxxx xx xx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="311" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="312" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="313" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base of the number in &lt;em&gt;value&lt;/em&gt;, which must be 2, 8, 10, or 16.</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xxxxx xxxx xx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="314" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="315" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit unsigned integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="316" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;fromBase&lt;/em&gt; is not 2, 8, 10, or 16.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx xxx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="317" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</source>
          <target state="new">$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$$ xxxxx xxxxxxxxxx x xxx$xxxx 00 xxxxxxxx xxxxxx$ xx xxxxxxxx xxxx x xxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="318" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="319" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; contains a character that is not a valid digit in the base specified by &lt;em&gt;fromBase&lt;/em&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxxxxxx x xxxxxxxxx xxxx xx xxx x xxxxx xxxxx xx xxx xxxx xxxxxxxxx xx $xx$xxxxXxxx$$xx$.</target>
        </trans-unit><trans-unit id="320" translate="yes" xml:space="preserve">
          <source>The exception message indicates that there are no digits to convert if the first character in &lt;em&gt;value&lt;/em&gt; is invalid; otherwise, the message indicates that &lt;em&gt;value&lt;/em&gt; contains invalid trailing characters.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxxxx xxxxxxx xxxxxxxxx xxxx xxxxx xxx xx xxxxxx xx xxxxxxx xx xxx xxxxx xxxxxxxxx xx $xx$xxxxx$$xx$ xx xxxxxxx$ xxxxxxxxx$ xxx xxxxxxx xxxxxxxxx xxxx $xx$xxxxx$$xx$ xxxxxxxx xxxxxxx xxxxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="321" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit unsigned integer to an equivalent 8-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="322" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="323" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="324" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="325" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="326" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="327" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="328" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="329" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="330" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="331" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="332" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="333" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit unsigned integer to its equivalent Unicode character.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx Xxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="334" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="335" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="336" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A Unicode character that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X Xxxxxxx xxxxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="337" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit signed integer to its equivalent Unicode character.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx Xxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="338" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="339" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="340" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A Unicode character that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X Xxxxxxx xxxxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="341" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit signed integer to its equivalent Unicode character.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx Xxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="342" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="343" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="344" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A Unicode character that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X Xxxxxxx xxxxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="345" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit signed integer to its equivalent Unicode character.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx Xxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="346" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="347" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="348" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A Unicode character that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X Xxxxxxx xxxxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="349" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to a Unicode character.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx x Xxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="350" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is a null string.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx x xxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="351" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to its equivalent Unicode character, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx xxx xxxxxxxxxx Xxxxxxx xxxxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="352" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="353" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="354" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is a null string.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx x xxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="355" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit signed integer to its equivalent Unicode character.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx Xxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="356" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="357" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="358" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A Unicode character that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X Xxxxxxx xxxxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="359" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the first character of a specified string to a Unicode character.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xxxxxxxxx xx x xxxxxxxxx xxxxxx xx x Xxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="360" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string of length 1.</source>
          <target state="new">$x$x$X xxxxxx xx xxxxxx 0.</target>
        </trans-unit><trans-unit id="361" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="362" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A Unicode character that is equivalent to the first and only character in &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X Xxxxxxx xxxxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxx xxx xxxx xxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="363" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="364" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="365" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The length of &lt;em&gt;value&lt;/em&gt; is not 1.</source>
          <target state="new">$x$x$Xxx xxxxxx xx $xx$xxxxx$$xx$ xx xxx 0.</target>
        </trans-unit><trans-unit id="366" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="367" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the first character of a specified string to a Unicode character, using specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xxxxxxxxx xx x xxxxxxxxx xxxxxx xx x Xxxxxxx xxxxxxxxx$ xxxxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="368" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string of length 1 or &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$X xxxxxx xx xxxxxx 0 xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="369" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="370" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="371" translate="yes" xml:space="preserve">
          <source>This parameter is ignored.&lt;/p&gt;\n</source>
          <target state="new">Xxxx xxxxxxxxx xx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="372" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A Unicode character that is equivalent to the first and only character in &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X Xxxxxxx xxxxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxx xxx xxxx xxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="373" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="374" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="375" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The length of &lt;em&gt;value&lt;/em&gt; is not 1.</source>
          <target state="new">$x$x$Xxx xxxxxx xx $xx$xxxxx$$xx$ xx xxx 0.</target>
        </trans-unit><trans-unit id="376" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="377" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit unsigned integer to its equivalent Unicode character.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx Xxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="378" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="379" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="380" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A Unicode character that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X Xxxxxxx xxxxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="381" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit unsigned integer to its equivalent Unicode character.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx Xxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="382" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="383" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="384" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A Unicode character that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X Xxxxxxx xxxxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="385" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit unsigned integer to its equivalent Unicode character.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx Xxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="386" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="387" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="388" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A Unicode character that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X Xxxxxxx xxxxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="389" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not a valid date and time value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx x xxxxx xxxx xxx xxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="390" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="391" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="392" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not a valid date and time value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx x xxxxx xxxx xxx xxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="393" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a date and time to an equivalent date and time value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxx xxx xxxx xx xx xxxxxxxxxx xxxx xxx xxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="394" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of a date and time.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx x xxxx xxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="395" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not a properly formatted date and time string.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx x xxxxxxxx xxxxxxxxx xxxx xxx xxxx xxxxxx.</target>
        </trans-unit><trans-unit id="396" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="397" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent date and time, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx xxxx xxx xxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="398" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains a date and time to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx x xxxx xxx xxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="399" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="400" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="401" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="402" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not a properly formatted date and time string.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx x xxxxxxxx xxxxxxxxx xxxx xxx xxxx xxxxxx.</target>
        </trans-unit><trans-unit id="403" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="404" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified Boolean value to the equivalent decimal number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxx xx xxx xxxxxxxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="405" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Boolean value to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="406" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="407" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number 1 if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;; otherwise, 0.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx 0 xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxxxxxxxx$ 0.$$x$$x</target>
        </trans-unit><trans-unit id="408" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit unsigned integer to the equivalent decimal number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="409" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="410" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="411" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The decimal number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="412" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified decimal number; no actual conversion is performed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx xxxxxxx xxxxxx$ xx xxxxxx xxxxxxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="413" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A decimal number.</source>
          <target state="new">$x$x$X xxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="414" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="415" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is returned unchanged.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="416" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified double-precision floating-point number to an equivalent decimal number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="417" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The double-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="418" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="419" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A decimal number that is equivalent to &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">$x$x$X xxxxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="420" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="421" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit signed integer to an equivalent decimal number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="422" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="423" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="424" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A decimal number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="425" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit signed integer to an equivalent decimal number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="426" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="427" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="428" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A decimal number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="429" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit signed integer to an equivalent decimal number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="430" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="431" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="432" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A decimal number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="433" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to an equivalent decimal number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx xx xxxxxxxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="434" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A decimal number that is equivalent to &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="435" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to an equivalent decimal number, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx xx xxxxxxxxxx xxxxxxx xxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="436" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="437" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="438" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A decimal number that is equivalent to &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="439" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit signed integer to the equivalent decimal number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="440" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="441" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="442" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A decimal number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="443" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified single-precision floating-point number to the equivalent decimal number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxx xxxxxxxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="444" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The single-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="445" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="446" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A decimal number that is equivalent to &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">$x$x$X xxxxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="447" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="448" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent decimal number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="449" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains a number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx x xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="450" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="451" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A decimal number that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxxx xxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="452" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not a number in a valid format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx x xxxxxx xx x xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="453" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent decimal number, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx xxxxxxx xxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="454" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains a number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx x xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="455" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="456" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="457" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="458" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A decimal number that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxxx xxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="459" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not a number in a valid format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx x xxxxxx xx x xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="460" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit unsigned integer to an equivalent decimal number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="461" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="462" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="463" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The decimal number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="464" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit unsigned integer to an equivalent decimal number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="465" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="466" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="467" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A decimal number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="468" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit unsigned integer to an equivalent decimal number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="469" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="470" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="471" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A decimal number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="472" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified Boolean value to the equivalent double-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxx xx xxx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="473" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Boolean value to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="474" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="475" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number 1 if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;; otherwise, 0.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx 0 xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxxxxxxxx$ 0.$$x$$x</target>
        </trans-unit><trans-unit id="476" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit unsigned integer to the equivalent double-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="477" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="478" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="479" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The double-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="480" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified decimal number to an equivalent double-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxxx xxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="481" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The decimal number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="482" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="483" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A double-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="484" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified double-precision floating-point number; no actual conversion is performed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx$ xx xxxxxx xxxxxxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="485" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The double-precision floating-point number to return.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="486" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="487" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is returned unchanged.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="488" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit signed integer to an equivalent double-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="489" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="490" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="491" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A double-precision floating-point number equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="492" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit signed integer to an equivalent double-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="493" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="494" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="495" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A double-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="496" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit signed integer to an equivalent double-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="497" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="498" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="499" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A double-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="500" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to a double-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx x xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="501" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A double-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="502" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to an double-precision floating-point number, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx xx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="503" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="504" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="505" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A double-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="506" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit signed integer to the equivalent double-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="507" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="508" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="509" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="510" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified single-precision floating-point number to an equivalent double-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="511" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The single-precision floating-point number.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="512" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="513" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A double-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="514" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent double-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="515" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="516" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="517" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A double-precision floating-point number that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="518" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not a number in a valid format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx x xxxxxx xx x xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="519" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent double-precision floating-point number, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="520" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="521" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="522" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="523" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="524" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A double-precision floating-point number that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="525" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not a number in a valid format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx x xxxxxx xx x xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="526" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit unsigned integer to the equivalent double-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="527" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="528" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="529" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A double-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="530" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit unsigned integer to an equivalent double-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="531" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="532" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="533" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A double-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="534" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit unsigned integer to an equivalent double-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="535" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="536" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="537" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A double-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="538" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified Boolean value to the equivalent 16-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="539" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Boolean value to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="540" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="541" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number 1 if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;; otherwise, 0.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx 0 xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxxxxxxxx$ 0.$$x$$x</target>
        </trans-unit><trans-unit id="542" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="543" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="544" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="545" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="546" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified Unicode character to the equivalent 16-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="547" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Unicode character to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="548" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="549" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="550" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="551" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified decimal number to an equivalent 16-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="552" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The decimal number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="553" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="554" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 16-bit signed integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="555" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="556" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified double-precision floating-point number to an equivalent 16-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="557" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The double-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="558" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="559" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 16-bit signed integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="560" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="561" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified 16-bit signed integer; no actual conversion is performed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx$ xx xxxxxx xxxxxxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="562" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer to return.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="563" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="564" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is returned unchanged.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="565" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit signed integer to an equivalent 16-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="566" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="567" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="568" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer equivalent of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="569" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit signed integer to an equivalent 16-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="570" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="571" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="572" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="573" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to a 16-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx x 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="574" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="575" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to a 16-bit signed integer, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx x 00$xxx xxxxxx xxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="576" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="577" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="578" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="579" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit signed integer to the equivalent 16-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="580" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="581" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="582" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 8-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="583" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified single-precision floating-point number to an equivalent 16-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="584" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The single-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="585" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="586" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 16-bit signed integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="587" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="588" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent 16-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="589" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="590" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="591" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit signed integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="592" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxx xxx xxxxxxx xx xx xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxx xx xxxxxx $0 xxxxxxx 0$.</target>
        </trans-unit><trans-unit id="593" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="594" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent 16-bit signed integer, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="595" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="596" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="597" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="598" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="599" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit signed integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="600" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxx xxx xxxxxxx xx xx xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxx xx xxxxxx $0 xxxxxxx 0$.</target>
        </trans-unit><trans-unit id="601" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="602" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the string representation of a number in a specified base to an equivalent 16-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx x xxxxxxxxx xxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="603" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="604" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="605" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base of the number in &lt;em&gt;value&lt;/em&gt;, which must be 2, 8, 10, or 16.</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xxxxx xxxx xx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="606" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="607" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit signed integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="608" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;fromBase&lt;/em&gt; is not 2, 8, 10, or 16.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx xxx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="609" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, which represents a non-base 10 signed number, is prefixed with a negative sign.</source>
          <target state="new">$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$$ xxxxx xxxxxxxxxx x xxx$xxxx 00 xxxxxx xxxxxx$ xx xxxxxxxx xxxx x xxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="610" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="611" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; contains a character that is not a valid digit in the base specified by &lt;em&gt;fromBase&lt;/em&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxxxxxx x xxxxxxxxx xxxx xx xxx x xxxxx xxxxx xx xxx xxxx xxxxxxxxx xx $xx$xxxxXxxx$$xx$.</target>
        </trans-unit><trans-unit id="612" translate="yes" xml:space="preserve">
          <source>The exception message indicates that there are no digits to convert if the first character in &lt;em&gt;value&lt;/em&gt; is invalid; otherwise, the message indicates that &lt;em&gt;value&lt;/em&gt; contains invalid trailing characters.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxxxx xxxxxxx xxxxxxxxx xxxx xxxxx xxx xx xxxxxx xx xxxxxxx xx xxx xxxxx xxxxxxxxx xx $xx$xxxxx$$xx$ xx xxxxxxx$ xxxxxxxxx$ xxx xxxxxxx xxxxxxxxx xxxx $xx$xxxxx$$xx$ xxxxxxxx xxxxxxx xxxxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="613" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit unsigned integer to the equivalent 16-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="614" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="615" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="616" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="617" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="618" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="619" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="620" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="621" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="622" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="623" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="624" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="625" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified Boolean value to the equivalent 32-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="626" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Boolean value to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="627" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="628" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number 1 if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;; otherwise, 0.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx 0 xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxxxxxxxx$ 0.$$x$$x</target>
        </trans-unit><trans-unit id="629" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="630" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="631" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="632" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="633" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified Unicode character to the equivalent 32-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="634" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Unicode character to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="635" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="636" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="637" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified decimal number to an equivalent 32-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="638" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The decimal number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="639" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="640" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 32-bit signed integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="641" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="642" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified double-precision floating-point number to an equivalent 32-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="643" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The double-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="644" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="645" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 32-bit signed integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="646" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="647" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit signed integer to an equivalent 32-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="648" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="649" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="650" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="651" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified 32-bit signed integer; no actual conversion is performed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx$ xx xxxxxx xxxxxxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="652" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer to return.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="653" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="654" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is returned unchanged.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="655" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit signed integer to an equivalent 32-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="656" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="657" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="658" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="659" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to a 32-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx x 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="660" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="661" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in an appropriate format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx xx xxxxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="662" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to a 32-bit signed integer, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx x 00$xxx xxxxxx xxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="663" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="664" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="665" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="666" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in an appropriate format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx xx xxxxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="667" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit signed integer to the equivalent 32-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="668" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="669" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="670" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 8-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="671" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified single-precision floating-point number to an equivalent 32-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="672" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The single-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="673" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="674" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 32-bit signed integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="675" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="676" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent 32-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="677" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="678" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="679" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="680" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxx xxx xxxxxxx xx xx xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxx xx xxxxxx $0 xxxxxxx 0$.</target>
        </trans-unit><trans-unit id="681" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="682" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent 32-bit signed integer, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="683" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="684" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="685" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="686" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="687" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="688" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxx xxx xxxxxxx xx xx xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxx xx xxxxxx $0 xxxxxxx 0$.</target>
        </trans-unit><trans-unit id="689" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="690" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the string representation of a number in a specified base to an equivalent 32-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx x xxxxxxxxx xxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="691" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="692" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="693" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base of the number in &lt;em&gt;value&lt;/em&gt;, which must be 2, 8, 10, or 16.</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xxxxx xxxx xx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="694" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="695" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="696" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;fromBase&lt;/em&gt; is not 2, 8, 10, or 16.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx xxx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="697" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, which represents a non-base 10 signed number, is prefixed with a negative sign.</source>
          <target state="new">$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$$ xxxxx xxxxxxxxxx x xxx$xxxx 00 xxxxxx xxxxxx$ xx xxxxxxxx xxxx x xxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="698" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="699" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; contains a character that is not a valid digit in the base specified by &lt;em&gt;fromBase&lt;/em&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxxxxxx x xxxxxxxxx xxxx xx xxx x xxxxx xxxxx xx xxx xxxx xxxxxxxxx xx $xx$xxxxXxxx$$xx$.</target>
        </trans-unit><trans-unit id="700" translate="yes" xml:space="preserve">
          <source>The exception message indicates that there are no digits to convert if the first character in &lt;em&gt;value&lt;/em&gt; is invalid; otherwise, the message indicates that &lt;em&gt;value&lt;/em&gt; contains invalid trailing characters.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxxxx xxxxxxx xxxxxxxxx xxxx xxxxx xxx xx xxxxxx xx xxxxxxx xx xxx xxxxx xxxxxxxxx xx $xx$xxxxx$$xx$ xx xxxxxxx$ xxxxxxxxx$ xxx xxxxxxx xxxxxxxxx xxxx $xx$xxxxx$$xx$ xxxxxxxx xxxxxxx xxxxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="701" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="702" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="703" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="704" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="705" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit unsigned integer to an equivalent 32-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="706" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="707" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="708" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="709" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="710" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="711" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="712" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="713" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified Boolean value to the equivalent 64-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="714" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Boolean value to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="715" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="716" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number 1 if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;; otherwise, 0.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx 0 xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxxxxxxxx$ 0.$$x$$x</target>
        </trans-unit><trans-unit id="717" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="718" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="719" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="720" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="721" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified Unicode character to the equivalent 64-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="722" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Unicode character to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="723" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="724" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="725" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified decimal number to an equivalent 64-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="726" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The decimal number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="727" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="728" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 64-bit signed integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="729" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="730" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified double-precision floating-point number to an equivalent 64-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="731" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The double-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="732" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="733" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 64-bit signed integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="734" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="735" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit signed integer to an equivalent 64-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="736" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="737" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="738" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="739" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit signed integer to an equivalent 64-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="740" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="741" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="742" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="743" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified 64-bit signed integer; no actual conversion is performed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx$ xx xxxxxx xxxxxxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="744" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer.</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="745" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="746" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is returned unchanged.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="747" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to a 64-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx x 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="748" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="749" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in an appropriate format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx xx xxxxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="750" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to a 64-bit signed integer, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx x 00$xxx xxxxxx xxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="751" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="752" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="753" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="754" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in an appropriate format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx xx xxxxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="755" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit signed integer to the equivalent 64-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="756" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="757" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="758" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="759" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified single-precision floating-point number to an equivalent 64-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="760" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The single-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="761" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="762" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 64-bit signed integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="763" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="764" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent 64-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="765" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains a number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx x xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="766" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="767" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="768" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxx xxx xxxxxxx xx xx xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxx xx xxxxxx $0 xxxxxxx 0$.</target>
        </trans-unit><trans-unit id="769" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="770" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent 64-bit signed integer, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="771" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="772" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="773" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="774" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="775" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="776" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxx xxx xxxxxxx xx xx xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxx xx xxxxxx $0 xxxxxxx 0$.</target>
        </trans-unit><trans-unit id="777" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="778" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the string representation of a number in a specified base to an equivalent 64-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx x xxxxxxxxx xxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="779" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="780" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="781" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base of the number in &lt;em&gt;value&lt;/em&gt;, which must be 2, 8, 10, or 16.</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xxxxx xxxx xx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="782" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="783" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="784" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;fromBase&lt;/em&gt; is not 2, 8, 10, or 16.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx xxx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="785" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, which represents a non-base 10 signed number, is prefixed with a negative sign.</source>
          <target state="new">$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$$ xxxxx xxxxxxxxxx x xxx$xxxx 00 xxxxxx xxxxxx$ xx xxxxxxxx xxxx x xxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="786" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="787" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; contains a character that is not a valid digit in the base specified by &lt;em&gt;fromBase&lt;/em&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxxxxxx x xxxxxxxxx xxxx xx xxx x xxxxx xxxxx xx xxx xxxx xxxxxxxxx xx $xx$xxxxXxxx$$xx$.</target>
        </trans-unit><trans-unit id="788" translate="yes" xml:space="preserve">
          <source>The exception message indicates that there are no digits to convert if the first character in &lt;em&gt;value&lt;/em&gt; is invalid; otherwise, the message indicates that &lt;em&gt;value&lt;/em&gt; contains invalid trailing characters.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxxxx xxxxxxx xxxxxxxxx xxxx xxxxx xxx xx xxxxxx xx xxxxxxx xx xxx xxxxx xxxxxxxxx xx $xx$xxxxx$$xx$ xx xxxxxxx$ xxxxxxxxx$ xxx xxxxxxx xxxxxxxxx xxxx $xx$xxxxx$$xx$ xxxxxxxx xxxxxxx xxxxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="789" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="790" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="791" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="792" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="793" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="794" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="795" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="796" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="797" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit unsigned integer to an equivalent 64-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="798" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="799" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="800" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="801" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified Boolean value to the equivalent 8-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxx xx xxx xxxxxxxxxx 0$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="802" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Boolean value to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="803" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="804" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number 1 if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;; otherwise, 0.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx 0 xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxxxxxxxx$ 0.$$x$$x</target>
        </trans-unit><trans-unit id="805" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit unsigned integer to the equivalent 8-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx 0$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="806" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="807" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="808" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="809" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified Unicode character to the equivalent 8-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxx xxxxxxxxxx 0$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="810" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Unicode character to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="811" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="812" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="813" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified decimal number to an equivalent 8-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxxx xxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="814" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The decimal number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="815" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="816" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 8-bit signed integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 0$xxx xxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="817" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="818" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified double-precision floating-point number to an equivalent 8-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="819" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The double-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="820" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="821" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 8-bit signed integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 0$xxx xxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="822" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="823" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit signed integer to the equivalent 8-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx 0$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="824" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="825" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="826" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="827" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit signed integer to an equivalent 8-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="828" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="829" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="830" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="831" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit signed integer to an equivalent 8-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="832" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="833" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="834" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="835" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to an 8-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx xx 0$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="836" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="837" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in an appropriate format.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx xx xxxxxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="838" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="839" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to an 8-bit signed integer, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx xx 0$xxx xxxxxx xxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="840" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="841" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="842" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="843" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in an appropriate format.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx xx xxxxxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="844" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="845" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified 8-bit signed integer; no actual conversion is performed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx 0$xxx xxxxxx xxxxxxx$ xx xxxxxx xxxxxxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="846" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit signed integer to return.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxx xxxxxxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="847" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="848" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is returned unchanged.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="849" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified single-precision floating-point number to an equivalent 8-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="850" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The single-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="851" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="852" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 8-bit signed integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 0$xxx xxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="853" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="854" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent 8-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="855" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="856" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="857" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit signed integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if value is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx xxxxx xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="858" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxx xxx xxxxxxx xx xx xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxx xx xxxxxx $0 xxxxxxx 0$.</target>
        </trans-unit><trans-unit id="859" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="860" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent 8-bit signed integer, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxx xxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="861" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="862" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="863" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="864" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="865" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="866" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="867" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="868" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxx xxx xxxxxxx xx xx xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxx xx xxxxxx $0 xxxxxxx 0$.</target>
        </trans-unit><trans-unit id="869" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="870" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the string representation of a number in a specified base to an equivalent 8-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx x xxxxxxxxx xxxx xx xx xxxxxxxxxx 0$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="871" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="872" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="873" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base of the number in &lt;em&gt;value&lt;/em&gt;, which must be 2, 8, 10, or 16.</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xxxxx xxxx xx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="874" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="875" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit signed integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="876" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;fromBase&lt;/em&gt; is not 2, 8, 10, or 16.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx xxx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="877" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, which represents a non-base 10 signed number, is prefixed with a negative sign.</source>
          <target state="new">$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$$ xxxxx xxxxxxxxxx x xxx$xxxx 00 xxxxxx xxxxxx$ xx xxxxxxxx xxxx x xxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="878" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="879" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; contains a character that is not a valid digit in the base specified by &lt;em&gt;fromBase&lt;/em&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxxxxxx x xxxxxxxxx xxxx xx xxx x xxxxx xxxxx xx xxx xxxx xxxxxxxxx xx $xx$xxxxXxxx$$xx$.</target>
        </trans-unit><trans-unit id="880" translate="yes" xml:space="preserve">
          <source>The exception message indicates that there are no digits to convert if the first character in &lt;em&gt;value&lt;/em&gt; is invalid; otherwise, the message indicates that &lt;em&gt;value&lt;/em&gt; contains invalid trailing characters.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxxxx xxxxxxx xxxxxxxxx xxxx xxxxx xxx xx xxxxxx xx xxxxxxx xx xxx xxxxx xxxxxxxxx xx $xx$xxxxx$$xx$ xx xxxxxxx$ xxxxxxxxx$ xxx xxxxxxx xxxxxxxxx xxxx $xx$xxxxx$$xx$ xxxxxxxx xxxxxxx xxxxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="881" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit unsigned integer to the equivalent 8-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx 0$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="882" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="883" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="884" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="885" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit unsigned integer to an equivalent 8-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="886" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="887" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="888" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="889" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit unsigned integer to an equivalent 8-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx 0$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="890" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="891" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="892" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="893" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified Boolean value to the equivalent single-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxx xx xxx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="894" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Boolean value to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="895" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="896" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number 1 if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;; otherwise, 0.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx 0 xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxxxxxxxx$ 0.$$x$$x</target>
        </trans-unit><trans-unit id="897" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit unsigned integer to the equivalent single-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="898" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="899" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="900" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A single-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="901" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified decimal number to an equivalent single-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxxx xxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="902" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The decimal number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="903" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="904" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A single-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is rounded using rounding to nearest.</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxx xxxxx xxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="905" translate="yes" xml:space="preserve">
          <source>For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxx$ xxxx xxxxxxx xx xxx xxxxxxxx$ xxx xxxxx 0.000 xxxxxxx 0.00 xxx xxx xxxxx 0.000 xxxxxxx 0.00.$$x$$x</target>
        </trans-unit><trans-unit id="906" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified double-precision floating-point number to an equivalent single-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="907" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The double-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="908" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="909" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A single-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is rounded using rounding to nearest.</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxx xxxxx xxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="910" translate="yes" xml:space="preserve">
          <source>For example, when rounded to two decimals, the value 2.345 becomes 2.34 and the value 2.355 becomes 2.36.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxx$ xxxx xxxxxxx xx xxx xxxxxxxx$ xxx xxxxx 0.000 xxxxxxx 0.00 xxx xxx xxxxx 0.000 xxxxxxx 0.00.$$x$$x</target>
        </trans-unit><trans-unit id="911" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit signed integer to an equivalent single-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="912" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="913" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="914" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A single-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="915" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit signed integer to an equivalent single-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="916" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="917" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="918" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A single-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="919" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit signed integer to an equivalent single-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="920" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="921" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="922" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A single-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="923" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to a single-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx x xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="924" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A single-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="925" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in an appropriate format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx xx xxxxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="926" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to an single-precision floating-point number, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx xx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="927" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="928" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="929" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A single-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="930" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in an appropriate format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx xx xxxxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="931" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit signed integer to the equivalent single-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="932" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="933" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="934" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An 8-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx 0$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="935" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified single-precision floating-point number; no actual conversion is performed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx$ xx xxxxxx xxxxxxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="936" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The single-precision floating-point number to return.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="937" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="938" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is returned unchanged.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="939" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent single-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="940" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="941" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="942" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A single-precision floating-point number that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="943" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not a number in a valid format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx x xxxxxx xx x xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="944" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent single-precision floating-point number, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="945" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="946" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="947" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="948" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="949" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A single-precision floating-point number that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="950" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not a number in a valid format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx x xxxxxx xx x xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="951" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit unsigned integer to the equivalent single-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="952" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="953" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="954" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A single-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="955" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit unsigned integer to an equivalent single-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="956" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="957" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="958" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A single-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="959" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit unsigned integer to an equivalent single-precision floating-point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="960" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="961" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="962" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A single-precision floating-point number that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="963" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified Boolean value to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="964" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Boolean value to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="965" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="966" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="967" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified Boolean value to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="968" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Boolean value to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="969" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="970" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An instance of an object.</source>
          <target state="new">$x$x$Xx xxxxxxxx xx xx xxxxxx.</target>
        </trans-unit><trans-unit id="971" translate="yes" xml:space="preserve">
          <source>This parameter is ignored.&lt;/p&gt;\n</source>
          <target state="new">Xxxx xxxxxxxxx xx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="972" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="973" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit unsigned integer to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="974" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="975" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="976" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="977" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="978" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="979" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="980" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="981" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="982" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="983" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of an 8-bit unsigned integer to its equivalent string representation in a specified base.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xx 0$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="984" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="985" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="986" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base of the return value, which must be 2, 8, 10, or 16.</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxx xxxxx$ xxxxx xxxx xx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="987" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="988" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt; in base &lt;em&gt;toBase&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$ xx xxxx $xx$xxXxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="989" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;toBase&lt;/em&gt; is not 2, 8, 10, or 16.</source>
          <target state="new">$x$x$$x$xx$xxXxxx$$xx$ xx xxx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="990" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="991" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified Unicode character to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="992" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Unicode character to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="993" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="994" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="995" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified Unicode character to its equivalent string representation, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="996" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Unicode character to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="997" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="998" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="999" translate="yes" xml:space="preserve">
          <source>This parameter is ignored.</source>
          <target state="new">Xxxx xxxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1000" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1001" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1002" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The date and time value to convert.</source>
          <target state="new">$x$x$Xxx xxxx xxx xxxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1003" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1004" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1005" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The date and time value to convert.</source>
          <target state="new">$x$x$Xxx xxxx xxx xxxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1006" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1007" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1008" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1009" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1010" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified decimal number to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxxx xxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1011" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The decimal number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1012" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1013" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1014" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified decimal number to its equivalent string representation, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxxx xxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1015" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The decimal number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1016" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1017" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1018" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1019" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1020" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified double-precision floating-point number to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1021" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The double-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1022" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1023" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1024" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified double-precision floating-point number to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1025" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The double-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1026" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1027" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1028" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1029" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1030" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit signed integer to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1031" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1032" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1033" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1034" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1035" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1036" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1037" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1038" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1039" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1040" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of a 16-bit signed integer to its equivalent string representation in a specified base.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx x 00$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1041" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1042" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1043" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base of the return value, which must be 2, 8, 10, or 16.</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxx xxxxx$ xxxxx xxxx xx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="1044" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1045" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt; in base &lt;em&gt;toBase&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$ xx xxxx $xx$xxXxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1046" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;toBase&lt;/em&gt; is not 2, 8, 10, or 16.</source>
          <target state="new">$x$x$$x$xx$xxXxxx$$xx$ xx xxx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="1047" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1048" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit signed integer to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1049" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1050" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1051" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1052" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1053" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1054" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1055" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1056" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1057" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1058" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of a 32-bit signed integer to its equivalent string representation in a specified base.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx x 00$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1059" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1060" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1061" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base of the return value, which must be 2, 8, 10, or 16.</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxx xxxxx$ xxxxx xxxx xx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="1062" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1063" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt; in base &lt;em&gt;toBase&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$ xx xxxx $xx$xxXxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1064" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;toBase&lt;/em&gt; is not 2, 8, 10, or 16.</source>
          <target state="new">$x$x$$x$xx$xxXxxx$$xx$ xx xxx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="1065" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1066" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit signed integer to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1067" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1068" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1069" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1070" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1071" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1072" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1073" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1074" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1075" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1076" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of a 64-bit signed integer to its equivalent string representation in a specified base.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx x 00$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1077" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1078" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1079" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base of the return value, which must be 2, 8, 10, or 16.</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxx xxxxx$ xxxxx xxxx xx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="1080" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1081" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt; in base &lt;em&gt;toBase&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$ xx xxxx $xx$xxXxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1082" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;toBase&lt;/em&gt; is not 2, 8, 10, or 16.</source>
          <target state="new">$x$x$$x$xx$xxXxxx$$xx$ xx xxx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="1083" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1084" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1085" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies the value to convert, or &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxx xxxxx xx xxxxxxx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="1086" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1087" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to its equivalent string representation using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1088" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies the value to convert, or &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxx xxxxx xx xxxxxxx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="1089" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1090" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1091" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1092" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit signed integer to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1093" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1094" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1095" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1096" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit signed integer to its equivalent string representation, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1097" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1098" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1099" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1100" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1101" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1102" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified single-precision floating-point number to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1103" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The single-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1104" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1105" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1106" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified single-precision floating-point number to its equivalent string representation, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1107" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The single-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1108" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1109" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1110" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1111" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1112" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit unsigned integer to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1113" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1114" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1115" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1116" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1117" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1118" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1119" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1120" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1121" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1122" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit unsigned integer to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1123" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1124" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1125" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1126" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1127" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1128" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1129" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1130" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1131" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1132" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit unsigned integer to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1133" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1134" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1135" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1136" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit unsigned integer to its equivalent string representation, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1137" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1138" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1139" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1140" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1141" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1142" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified Boolean value to the equivalent 16-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1143" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Boolean value to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1144" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1145" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number 1 if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;; otherwise, 0.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx 0 xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxxxxxxxx$ 0.$$x$$x</target>
        </trans-unit><trans-unit id="1146" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit unsigned integer to the equivalent 16-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1147" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1148" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1149" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1150" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified Unicode character to the equivalent 16-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1151" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Unicode character to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1152" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1153" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit unsigned integer equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1154" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified decimal number to an equivalent 16-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1155" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The decimal number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1156" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1157" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 16-bit unsigned integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="1158" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="1159" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified double-precision floating-point number to an equivalent 16-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1160" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The double-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1161" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1162" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 16-bit unsigned integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="1163" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="1164" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit signed integer to the equivalent 16-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1165" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1166" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1167" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1168" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is less than zero.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx.</target>
        </trans-unit><trans-unit id="1169" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1170" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit signed integer to an equivalent 16-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1171" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1172" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1173" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1174" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit signed integer to an equivalent 16-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1175" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1176" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1177" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1178" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to a 16-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx x 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1179" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="1180" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in an appropriate format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx xx xxxxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1181" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to a 16-bit unsigned integer, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx x 00$xxx xxxxxxxx xxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1182" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1183" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1184" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="1185" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in an appropriate format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx xx xxxxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1186" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit signed integer to the equivalent 16-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1187" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1188" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1189" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1190" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is less than zero.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx.</target>
        </trans-unit><trans-unit id="1191" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1192" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified single-precision floating-point number to an equivalent 16-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1193" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The single-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1194" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1195" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 16-bit unsigned integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="1196" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="1197" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent 16-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1198" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1199" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1200" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit unsigned integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="1201" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxx xxx xxxxxxx xx xx xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxx xx xxxxxx $0 xxxxxxx 0$.</target>
        </trans-unit><trans-unit id="1202" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1203" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent 16-bit unsigned integer, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1204" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1205" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1206" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1207" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1208" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit unsigned integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="1209" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxx xxx xxxxxxx xx xx xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxx xx xxxxxx $0 xxxxxxx 0$.</target>
        </trans-unit><trans-unit id="1210" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1211" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the string representation of a number in a specified base to an equivalent 16-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx x xxxxxxxxx xxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1212" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1213" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1214" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base of the number in &lt;em&gt;value&lt;/em&gt;, which must be 2, 8, 10, or 16.</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xxxxx xxxx xx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="1215" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1216" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit unsigned integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="1217" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;fromBase&lt;/em&gt; is not 2, 8, 10, or 16.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx xxx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="1218" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</source>
          <target state="new">$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$$ xxxxx xxxxxxxxxx x xxx$xxxx 00 xxxxxxxx xxxxxx$ xx xxxxxxxx xxxx x xxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="1219" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1220" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; contains a character that is not a valid digit in the base specified by &lt;em&gt;fromBase&lt;/em&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxxxxxx x xxxxxxxxx xxxx xx xxx x xxxxx xxxxx xx xxx xxxx xxxxxxxxx xx $xx$xxxxXxxx$$xx$.</target>
        </trans-unit><trans-unit id="1221" translate="yes" xml:space="preserve">
          <source>The exception message indicates that there are no digits to convert if the first character in &lt;em&gt;value&lt;/em&gt; is invalid; otherwise, the message indicates that &lt;em&gt;value&lt;/em&gt; contains invalid trailing characters.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxxxx xxxxxxx xxxxxxxxx xxxx xxxxx xxx xx xxxxxx xx xxxxxxx xx xxx xxxxx xxxxxxxxx xx $xx$xxxxx$$xx$ xx xxxxxxx$ xxxxxxxxx$ xxx xxxxxxx xxxxxxxxx xxxx $xx$xxxxx$$xx$ xxxxxxxx xxxxxxx xxxxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1222" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified 16-bit unsigned integer; no actual conversion is performed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx$ xx xxxxxx xxxxxxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1223" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit unsigned integer to return.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="1224" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1225" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is returned unchanged.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1226" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit unsigned integer to an equivalent 16-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1227" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1228" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1229" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1230" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit unsigned integer to an equivalent 16-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1231" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1232" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1233" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1234" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified Boolean value to the equivalent 32-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1235" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Boolean value to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1236" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1237" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number 1 if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;; otherwise, 0.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx 0 xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxxxxxxxx$ 0.$$x$$x</target>
        </trans-unit><trans-unit id="1238" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit unsigned integer to the equivalent 32-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1239" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1240" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1241" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1242" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified Unicode character to the equivalent 32-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1243" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Unicode character to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1244" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1245" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1246" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified decimal number to an equivalent 32-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1247" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The decimal number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1248" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1249" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 32-bit unsigned integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="1250" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="1251" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified double-precision floating-point number to an equivalent 32-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1252" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The double-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1253" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1254" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 32-bit unsigned integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="1255" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="1256" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit signed integer to the equivalent 32-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1257" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1258" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1259" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1260" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is less than zero.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx.</target>
        </trans-unit><trans-unit id="1261" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1262" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit signed integer to an equivalent 32-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1263" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1264" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1265" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1266" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is less than zero.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx.</target>
        </trans-unit><trans-unit id="1267" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1268" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit signed integer to an equivalent 32-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1269" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1270" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1271" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1272" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to a 32-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx x 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1273" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="1274" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in an appropriate format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx xx xxxxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1275" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to a 32-bit unsigned integer, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx x 00$xxx xxxxxxxx xxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1276" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1277" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1278" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="1279" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in an appropriate format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx xx xxxxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1280" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit signed integer to the equivalent 32-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1281" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1282" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1283" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1284" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is less than zero.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx.</target>
        </trans-unit><trans-unit id="1285" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1286" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified single-precision floating-point number to an equivalent 32-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1287" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The single-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1288" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1289" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 32-bit unsigned integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="1290" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="1291" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent 32-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1292" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1293" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1294" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit unsigned integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="1295" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxx xxx xxxxxxx xx xx xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxx xx xxxxxx $0 xxxxxxx 0$.</target>
        </trans-unit><trans-unit id="1296" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1297" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent 32-bit unsigned integer, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1298" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1299" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1300" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1301" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1302" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit unsigned integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="1303" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxx xxx xxxxxxx xx xx xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxx xx xxxxxx $0 xxxxxxx 0$.</target>
        </trans-unit><trans-unit id="1304" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1305" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the string representation of a number in a specified base to an equivalent 32-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx x xxxxxxxxx xxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1306" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1307" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1308" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base of the number in &lt;em&gt;value&lt;/em&gt;, which must be 2, 8, 10, or 16.</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xxxxx xxxx xx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="1309" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1310" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit unsigned integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="1311" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;fromBase&lt;/em&gt; is not 2, 8, 10, or 16.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx xxx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="1312" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</source>
          <target state="new">$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$$ xxxxx xxxxxxxxxx x xxx$xxxx 00 xxxxxxxx xxxxxx$ xx xxxxxxxx xxxx x xxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="1313" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1314" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; contains a character that is not a valid digit in the base specified by &lt;em&gt;fromBase&lt;/em&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxxxxxx x xxxxxxxxx xxxx xx xxx x xxxxx xxxxx xx xxx xxxx xxxxxxxxx xx $xx$xxxxXxxx$$xx$.</target>
        </trans-unit><trans-unit id="1315" translate="yes" xml:space="preserve">
          <source>The exception message indicates that there are no digits to convert if the first character in &lt;em&gt;value&lt;/em&gt; is invalid; otherwise, the message indicates that &lt;em&gt;value&lt;/em&gt; contains invalid trailing characters.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxxxx xxxxxxx xxxxxxxxx xxxx xxxxx xxx xx xxxxxx xx xxxxxxx xx xxx xxxxx xxxxxxxxx xx $xx$xxxxx$$xx$ xx xxxxxxx$ xxxxxxxxx$ xxx xxxxxxx xxxxxxxxx xxxx $xx$xxxxx$$xx$ xxxxxxxx xxxxxxx xxxxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1316" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit unsigned integer to the equivalent 32-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1317" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1318" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1319" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1320" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified 32-bit unsigned integer; no actual conversion is performed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx$ xx xxxxxx xxxxxxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1321" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit unsigned integer to return.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="1322" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1323" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is returned unchanged.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1324" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit unsigned integer to an equivalent 32-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1325" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1326" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1327" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1328" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified Boolean value to the equivalent 64-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1329" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Boolean value to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1330" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1331" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number 1 if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;true&lt;/strong&gt;; otherwise, 0.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx 0 xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxxxxxxxx$ 0.$$x$$x</target>
        </trans-unit><trans-unit id="1332" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit unsigned integer to the equivalent 64-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1333" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1334" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1335" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1336" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified Unicode character to the equivalent 64-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1337" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The Unicode character to convert.</source>
          <target state="new">$x$x$Xxx Xxxxxxx xxxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1338" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1339" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1340" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified decimal number to an equivalent 64-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1341" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The decimal number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1342" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1343" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 64-bit unsigned integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="1344" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="1345" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified double-precision floating-point number to an equivalent 64-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1346" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The double-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1347" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1348" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 64-bit unsigned integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="1349" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="1350" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit signed integer to the equivalent 64-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1351" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1352" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1353" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1354" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is less than zero.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx.</target>
        </trans-unit><trans-unit id="1355" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1356" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit signed integer to an equivalent 64-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1357" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1358" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1359" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1360" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is less than zero.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx.</target>
        </trans-unit><trans-unit id="1361" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1362" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 64-bit signed integer to an equivalent 64-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1363" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1364" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1365" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1366" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is less than zero.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx.</target>
        </trans-unit><trans-unit id="1367" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1368" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to a 64-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx x 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1369" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="1370" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in an appropriate format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx xx xxxxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1371" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified object to a 64-bit unsigned integer, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx xx x 00$xxx xxxxxxxx xxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1372" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1373" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1374" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;, or zero if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxx xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="1375" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is not in an appropriate format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx xx xx xxxxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1376" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 8-bit signed integer to the equivalent 64-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 0$xxx xxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1377" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-bit signed integer to convert.</source>
          <target state="new">$x$x$Xxx 0$xxx xxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1378" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1379" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1380" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is less than zero.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx.</target>
        </trans-unit><trans-unit id="1381" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1382" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified single-precision floating-point number to an equivalent 64-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1383" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The single-precision floating-point number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1384" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1385" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, rounded to the nearest 64-bit unsigned integer.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$$ xxxxxxx xx xxx xxxxxxx 00$xxx xxxxxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="1386" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is halfway between two whole numbers, the even number is returned; that is, 4.5 is converted to 4, and 5.5 is converted to 6.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx$ xxx xxxx xxxxxx xx xxxxxxxx$ xxxx xx$ 0.0 xx xxxxxxxxx xx 0$ xxx 0.0 xx xxxxxxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="1387" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent 64-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1388" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1389" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1390" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="1391" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxx xxx xxxxxxx xx xx xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxx xx xxxxxx $0 xxxxxxx 0$.</target>
        </trans-unit><trans-unit id="1392" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1393" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified string representation of a number to an equivalent 64-bit unsigned integer, using the specified culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx$ xxxxx xxx xxxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1394" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1395" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1396" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="1397" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1398" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit unsigned integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="1399" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; does not consist of an optional sign followed by a sequence of digits (0 through 9).</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxx xxx xxxxxxx xx xx xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxx xx xxxxxx $0 xxxxxxx 0$.</target>
        </trans-unit><trans-unit id="1400" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1401" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the string representation of a number in a specified base to an equivalent 64-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxx xxxxxxxxxxxxxx xx x xxxxxx xx x xxxxxxxxx xxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1402" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string that contains the number to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxx xxxxxxxx xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1403" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1404" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The base of the number in &lt;em&gt;value&lt;/em&gt;, which must be 2, 8, 10, or 16.</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xxxxx xxxx xx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="1405" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1406" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit unsigned integer that is equivalent to the number in &lt;em&gt;value&lt;/em&gt;, or 0 (zero) if &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$$ xx 0 $xxxx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="1407" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;fromBase&lt;/em&gt; is not 2, 8, 10, or 16.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx xxx 0$ 0$ 00$ xx 00.</target>
        </trans-unit><trans-unit id="1408" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt;, which represents a non-base 10 unsigned number, is prefixed with a negative sign.</source>
          <target state="new">$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$$ xxxxx xxxxxxxxxx x xxx$xxxx 00 xxxxxxxx xxxxxx$ xx xxxxxxxx xxxx x xxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="1409" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1410" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; contains a character that is not a valid digit in the base specified by &lt;em&gt;fromBase&lt;/em&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxxxxxxx x xxxxxxxxx xxxx xx xxx x xxxxx xxxxx xx xxx xxxx xxxxxxxxx xx $xx$xxxxXxxx$$xx$.</target>
        </trans-unit><trans-unit id="1411" translate="yes" xml:space="preserve">
          <source>The exception message indicates that there are no digits to convert if the first character in &lt;em&gt;value&lt;/em&gt; is invalid; otherwise, the message indicates that &lt;em&gt;value&lt;/em&gt; contains invalid trailing characters.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxxxx xxxxxxx xxxxxxxxx xxxx xxxxx xxx xx xxxxxx xx xxxxxxx xx xxx xxxxx xxxxxxxxx xx $xx$xxxxx$$xx$ xx xxxxxxx$ xxxxxxxxx$ xxx xxxxxxx xxxxxxxxx xxxx $xx$xxxxx$$xx$ xxxxxxxx xxxxxxx xxxxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1412" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 16-bit unsigned integer to the equivalent 64-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xxx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1413" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 16-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1414" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1415" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1416" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of the specified 32-bit unsigned integer to an equivalent 64-bit unsigned integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xx xx xxxxxxxxxx 00$xxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1417" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 32-bit unsigned integer to convert.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="1418" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1419" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit unsigned integer that is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="1420" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified 64-bit unsigned integer; no actual conversion is performed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx$ xx xxxxxx xxxxxxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="1421" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 64-bit unsigned integer to return.</source>
          <target state="new">$x$x$Xxx 00$xxx xxxxxxxx xxxxxxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="1422" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="1423" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is returned unchanged.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit></group></body></file></xliff>
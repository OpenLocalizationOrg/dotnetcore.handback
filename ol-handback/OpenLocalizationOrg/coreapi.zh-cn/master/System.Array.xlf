<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="markdown" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" /></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides methods for creating, manipulating, searching, and sorting arrays, thereby serving as the base class for all arrays in the common language runtime.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxxxxxx xxx xxxxxxxx$ xxxxxxxxxxxx$ xxxxxxxxx$ xxx xxxxxxx xxxxxx$ xxxxxxx xxxxxxx xx xxx xxxx xxxxx xxx xxx xxxxxx xx xxx xxxxxx xxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements contained in the collection.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xxxxxxxxx xx xxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets or sets the element at the specified index.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xx xxxx xxx xxxxxxx xx xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the element to get or set.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxxxxx xx xxx xx xxx.$$x$$x</target>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The element at the specified index.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxx xx xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The length of the range to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxx xxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xxx.$$x$$x</target>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxxxxxxx $xx$xxxxx$$xx$ xx xxx xxxxxxxxx $xx$xxxxx$$xx$$ xx $xx$xxxxx$$xx$ xx xxxxx$ xxxxxxxxx$ x xxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxx xxxxx xxx $xx$xxxxx$$xx$ xx xxxx xxxx xxx xx xxxx xxxxxxxx xx $xx$xxxxx$$xx$$ xxx xxxxxxxx xxxxxx xxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xx xxx xxxxx xx xxx xxxxx xxxxxxx xxxx xx xxxxxx xxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxx xxxxx xxx $xx$xxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxxxx xx $xx$xxxxx$$xx$$ xxx xxxxxxxx xxxxxx xxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xx $xxx xxxxx xx xxx xxxx xxxxxxx xxxx 0$.</target>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">Xx xxxx xxxxxx xx xxxxxx xxxx x xxx$xxxxxx $xx$xxxxx$$xx$$ xxx xxxxxx xxxxx xxx xx xxxxxxxxx xxx x xxxxxxxx xxxxxx xxxxx xx xxxxxxxx$ xxxx xx $xx$xxxxx$$xx$ xx xxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxx $xx$xxxxxx$$xx$ xx xxx xxxxxxx x xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx xx x xxxx xxxx xx xxx xxxxxxxxxx xxxx xxx xxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The length of the range to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxx xxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xxx.$$x$$x</target>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxxxxxxx $xx$xxxxx$$xx$ xx xxx xxxxxxxxx $xx$xxxxx$$xx$$ xx $xx$xxxxx$$xx$ xx xxxxx$ xxxxxxxxx$ x xxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxx xxxxx xxx $xx$xxxxx$$xx$ xx xxxx xxxx xxx xx xxxx xxxxxxxx xx $xx$xxxxx$$xx$$ xxx xxxxxxxx xxxxxx xxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xx xxx xxxxx xx xxx xxxxx xxxxxxx xxxx xx xxxxxx xxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxx xxxxx xxx $xx$xxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxxxx xx $xx$xxxxx$$xx$$ xxx xxxxxxxx xxxxxx xxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xx $xxx xxxxx xx xxx xxxx xxxxxxx xxxx 0$.</target>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">Xx xxxx xxxxxx xx xxxxxx xxxx x xxx$xxxxxx $xx$xxxxx$$xx$$ xxx xxxxxx xxxxx xxx xx xxxxxxxxx xxx x xxxxxxxx xxxxxx xxxxx xx xxxxxxxx$ xxxx xx $xx$xxxxx$$xx$ xx xxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;comparer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, and &lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxx $xx$xxxxxx$$xx$ xx xxx xxxxxxx x xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxx $xx$xxxxx$$xx$ xx xx x xxxx xxxx xx xxx xxxxxxxxxx xxxx xxx xxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xxx.$$x$$x</target>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxxxxxxx $xx$xxxxx$$xx$ xx xxx xxxxxxxxx $xx$xxxxx$$xx$$ xx $xx$xxxxx$$xx$ xx xxxxx$ xxxxxxxxx$ x xxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxx xxxxx xxx $xx$xxxxx$$xx$ xx xxxx xxxx xxx xx xxxx xxxxxxxx xx $xx$xxxxx$$xx$$ xxx xxxxxxxx xxxxxx xxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xx xxx xxxxx xx xxx xxxxx xxxxxxx xxxx xx xxxxxx xxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxx xxxxx xxx $xx$xxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxxxx xx $xx$xxxxx$$xx$$ xxx xxxxxxxx xxxxxx xxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xx $xxx xxxxx xx xxx xxxx xxxxxxx xxxx 0$.</target>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;&lt;/p&gt;\n</source>
          <target state="new">Xx xxxx xxxxxx xx xxxxxx xxxx x xxx$xxxxxx $xx$xxxxx$$xx$$ xxx xxxxxx xxxxx xxx xx xxxxxxxxx xxx x xxxxxxxx xxxxxx xxxxx xx xxxxxxxx$ xxxx xx $xx$xxxxx$$xx$ xx xxxxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$$x$$x</target>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xx x xxxx xxxx xx xxx xxxxxxxxxx xxxx xxx xxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xxx.$$x$$x</target>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxxxxxxx $xx$xxxxx$$xx$ xx xxx xxxxxxxxx $xx$xxxxx$$xx$$ xx $xx$xxxxx$$xx$ xx xxxxx$ xxxxxxxxx$ x xxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxx xxxxx xxx $xx$xxxxx$$xx$ xx xxxx xxxx xxx xx xxxx xxxxxxxx xx $xx$xxxxx$$xx$$ xxx xxxxxxxx xxxxxx xxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xx xxx xxxxx xx xxx xxxxx xxxxxxx xxxx xx xxxxxx xxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxx xxxxx xxx $xx$xxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxxxx xx $xx$xxxxx$$xx$$ xxx xxxxxxxx xxxxxx xxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xx $xxx xxxxx xx xxx xxxx xxxxxxx xxxx 0$.</target>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">Xx xxxx xxxxxx xx xxxxxx xxxx x xxx$xxxxxx $xx$xxxxx$$xx$$ xxx xxxxxx xxxxx xxx xx xxxxxxxxx xxx x xxxxxxxx xxxxxx xxxxx xx xxxxxxxx$ xxxx xx $xx$xxxxx$$xx$ xx xxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;comparer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, and &lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxx $xx$xxxxx$$xx$ xx xx x xxxx xxxx xx xxx xxxxxxxxxx xxxx xxx xxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xxx.$$x$$x</target>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxxxxxxx $xx$xxxxx$$xx$ xx xxx xxxxxxxxx $xx$xxxxx$$xx$$ xx $xx$xxxxx$$xx$ xx xxxxx$ xxxxxxxxx$ x xxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxx xxxxx xxx $xx$xxxxx$$xx$ xx xxxx xxxx xxx xx xxxx xxxxxxxx xx $xx$xxxxx$$xx$$ xxx xxxxxxxx xxxxxx xxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xx xxx xxxxx xx xxx xxxxx xxxxxxx xxxx xx xxxxxx xxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxx xxxxx xxx $xx$xxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxxxx xx $xx$xxxxx$$xx$$ xxx xxxxxxxx xxxxxx xxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xx $xxx xxxxx xx xxx xxxx xxxxxxx xxxx 0$.</target>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">Xx xxxx xxxxxx xx xxxxxx xxxx x xxx$xxxxxx $xx$xxxxx$$xx$$ xxx xxxxxx xxxxx xxx xx xxxxxxxxx xxx x xxxxxxxx xxxxxx xxxxx xx xxxxxxxx$ xxxx xx $xx$xxxxx$$xx$ xx xxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xxx.$$x$$x</target>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxxxxxxx $xx$xxxxx$$xx$ xx xxx xxxxxxxxx $xx$xxxxx$$xx$$ xx $xx$xxxxx$$xx$ xx xxxxx$ xxxxxxxxx$ x xxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxx xxxxx xxx $xx$xxxxx$$xx$ xx xxxx xxxx xxx xx xxxx xxxxxxxx xx $xx$xxxxx$$xx$$ xxx xxxxxxxx xxxxxx xxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xx xxx xxxxx xx xxx xxxxx xxxxxxx xxxx xx xxxxxx xxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxx xxxxx xxx $xx$xxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxxxx xx $xx$xxxxx$$xx$$ xxx xxxxxxxx xxxxxx xxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xx $xxx xxxxx xx xxx xxxx xxxxxxx xxxx 0$.</target>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">Xx xxxx xxxxxx xx xxxxxx xxxx x xxx$xxxxxx $xx$xxxxx$$xx$$ xxx xxxxxx xxxxx xxx xx xxxxxxxxx xxx x xxxxxxxx xxxxxx xxxxx xx xxxxxxxx$ xxxx xx $xx$xxxxx$$xx$ xx xxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;comparer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, and &lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxx $xx$xxxxx$$xx$ xx xx x xxxx xxxx xx xxx xxxxxxxxxx xxxx xxx xxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The length of the range to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxx xxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xxx.$$x$$x</target>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxxxxxxx $xx$xxxxx$$xx$ xx xxx xxxxxxxxx $xx$xxxxx$$xx$$ xx $xx$xxxxx$$xx$ xx xxxxx$ xxxxxxxxx$ x xxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxx xxxxx xxx $xx$xxxxx$$xx$ xx xxxx xxxx xxx xx xxxx xxxxxxxx xx $xx$xxxxx$$xx$$ xxx xxxxxxxx xxxxxx xxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xx xxx xxxxx xx xxx xxxxx xxxxxxx xxxx xx xxxxxx xxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxx xxxxx xxx $xx$xxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxxxx xx $xx$xxxxx$$xx$$ xxx xxxxxxxx xxxxxx xxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xx $xxx xxxxx xx xxx xxxx xxxxxxx xxxx 0$.</target>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">Xx xxxx xxxxxx xx xxxxxx xxxx x xxx$xxxxxx $xx$xxxxx$$xx$$ xxx xxxxxx xxxxx xxx xx xxxxxxxxx xxx x xxxxxxxx xxxxxx xxxxx xx xxxxxxxx$ xxxx xx $xx$xxxxx$$xx$ xx xxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxx $xx$xxxxxx$$xx$ xx xxx xxxxxxx x xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx xx x xxxx xxxx xx xxx xxxxxxxxxx xxxx xxx xxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The length of the range to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxx xxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to search for.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xxx.$$x$$x</target>
        </trans-unit><trans-unit id="173" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="174" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the specified &lt;em&gt;value&lt;/em&gt; in the specified &lt;em&gt;array&lt;/em&gt;, if &lt;em&gt;value&lt;/em&gt; is found; otherwise, a negative number.</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxxxxxxx $xx$xxxxx$$xx$ xx xxx xxxxxxxxx $xx$xxxxx$$xx$$ xx $xx$xxxxx$$xx$ xx xxxxx$ xxxxxxxxx$ x xxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="175" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is less than one or more elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of the index of the first element that is larger than &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxx xxxxx xxx $xx$xxxxx$$xx$ xx xxxx xxxx xxx xx xxxx xxxxxxxx xx $xx$xxxxx$$xx$$ xxx xxxxxxxx xxxxxx xxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xx xxx xxxxx xx xxx xxxxx xxxxxxx xxxx xx xxxxxx xxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="176" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is not found and &lt;em&gt;value&lt;/em&gt; is greater than all elements in &lt;em&gt;array&lt;/em&gt;, the negative number returned is the bitwise complement of (the index of the last element plus 1).</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx xxx xxxxx xxx $xx$xxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxxxx xx $xx$xxxxx$$xx$$ xxx xxxxxxxx xxxxxx xxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xx $xxx xxxxx xx xxx xxxx xxxxxxx xxxx 0$.</target>
        </trans-unit><trans-unit id="177" translate="yes" xml:space="preserve">
          <source>If this method is called with a non-sorted &lt;em&gt;array&lt;/em&gt;, the return value can be incorrect and a negative number could be returned, even if &lt;em&gt;value&lt;/em&gt; is present in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">Xx xxxx xxxxxx xx xxxxxx xxxx x xxx$xxxxxx $xx$xxxxx$$xx$$ xxx xxxxxx xxxxx xxx xx xxxxxxxxx xxx x xxxxxxxx xxxxxx xxxxx xx xxxxxxxx$ xxxx xx $xx$xxxxx$$xx$ xx xxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="178" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="179" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="180" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;comparer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, and &lt;em&gt;value&lt;/em&gt; is of a type that is not compatible with the elements of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxx $xx$xxxxxx$$xx$ xx xxx xxxxxxx x xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxx $xx$xxxxx$$xx$ xx xx x xxxx xxxx xx xxx xxxxxxxxxx xxxx xxx xxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="181" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Sets a range of elements in an array to the default value of each element type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx x xxxxx xx xxxxxxxx xx xx xxxxx xx xxx xxxxxxx xxxxx xx xxxx xxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="182" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array whose elements need to be cleared.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xxxxx xxxxxxxx xxxx xx xx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="183" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range of elements to clear.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxx xx xxxxxxxx xx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="184" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements to clear.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="185" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="186" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The sum of &lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; is greater than the size of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x$x$$xx$$$x$$x$x$Xxx xxx xx $xx$xxxxx$$xx$ xxx $xx$xxxxxx$$xx$ xx xxxxxxx xxxx xxx xxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="187" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the index in the &lt;em&gt;sourceArray&lt;/em&gt; at which copying begins.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxx xxxx xxxxxxxxxx xxx xxxxx xx xxx $xx$xxxxxxXxxxx$$xx$ xx xxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="188" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the index in the &lt;em&gt;destinationArray&lt;/em&gt; at which storing begins.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxx xxxx xxxxxxxxxx xxx xxxxx xx xxx $xx$xxxxxxxxxxxXxxxx$$xx$ xx xxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="189" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the number of elements to copy.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxx xxxx xxxxxxxxxx xxx xxxxxx xx xxxxxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="190" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;destinationArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxXxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxxxxxxxXxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="191" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; and &lt;em&gt;destinationArray&lt;/em&gt; have different ranks.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxXxxxx$$xx$ xxx $xx$xxxxxxxxxxxXxxxx$$xx$ xxxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="192" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;sourceArray&lt;/em&gt; type is neither the same as nor derived from the &lt;em&gt;destinationArray&lt;/em&gt; type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx $xx$xxxxxxXxxxx$$xx$ xxxx xx xxxxxxx xxx xxxx xx xxx xxxxxxx xxxx xxx $xx$xxxxxxxxxxxXxxxx$$xx$ xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="193" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;At least one element in &lt;em&gt;sourceArray&lt;/em&gt; cannot be cast to the type of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxx xxx xxxxxxx xx $xx$xxxxxxXxxxx$$xx$ xxxxxx xx xxxx xx xxx xxxx xx $xx$xxxxxxxxxxxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="194" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceIndex&lt;/em&gt; is less than the lower bound of the first dimension of &lt;em&gt;sourceArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;destinationIndex&lt;/em&gt; is less than the lower bound of the first dimension of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxXxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx xxx xxxxx xxxxxxxxx xx $xx$xxxxxxXxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxxxxxxxXxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx xxx xxxxx xxxxxxxxx xx $xx$xxxxxxxxxxxXxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="195" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements from &lt;em&gt;sourceIndex&lt;/em&gt; to the end of &lt;em&gt;sourceArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements from &lt;em&gt;destinationIndex&lt;/em&gt; to the end of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxx xx xxxxxxxx xxxx $xx$xxxxxxXxxxx$$xx$ xx xxx xxx xx $xx$xxxxxxXxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxx xx xxxxxxxx xxxx $xx$xxxxxxxxxxxXxxxx$$xx$ xx xxx xxx xx $xx$xxxxxxxxxxxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="196" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the number of elements to copy.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxx xxxx xxxxxxxxxx xxx xxxxxx xx xxxxxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="197" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;destinationArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxXxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxxxxxxxXxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="198" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; and &lt;em&gt;destinationArray&lt;/em&gt; have different ranks.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxXxxxx$$xx$ xxx $xx$xxxxxxxxxxxXxxxx$$xx$ xxxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="199" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; and &lt;em&gt;destinationArray&lt;/em&gt; are of incompatible types.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxXxxxx$$xx$ xxx $xx$xxxxxxxxxxxXxxxx$$xx$ xxx xx xxxxxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="200" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;At least one element in &lt;em&gt;sourceArray&lt;/em&gt; cannot be cast to the type of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxx xxx xxxxxxx xx $xx$xxxxxxXxxxx$$xx$ xxxxxx xx xxxx xx xxx xxxx xx $xx$xxxxxxxxxxxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="201" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="202" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements in &lt;em&gt;sourceArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements in &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxx xx xxxxxxxx xx $xx$xxxxxxXxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxx xx xxxxxxxx xx $xx$xxxxxxxxxxxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="203" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the index in the &lt;em&gt;sourceArray&lt;/em&gt; at which copying begins.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxx xxxx xxxxxxxxxx xxx xxxxx xx xxx $xx$xxxxxxXxxxx$$xx$ xx xxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="204" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the index in the &lt;em&gt;destinationArray&lt;/em&gt; at which storing begins.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxx xxxx xxxxxxxxxx xxx xxxxx xx xxx $xx$xxxxxxxxxxxXxxxx$$xx$ xx xxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="205" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the number of elements to copy.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxx xxxx xxxxxxxxxx xxx xxxxxx xx xxxxxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="206" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;destinationArray&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxXxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxxxxxxxXxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="207" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; and &lt;em&gt;destinationArray&lt;/em&gt; have different ranks.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxXxxxx$$xx$ xxx $xx$xxxxxxxxxxxXxxxx$$xx$ xxxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="208" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceArray&lt;/em&gt; and &lt;em&gt;destinationArray&lt;/em&gt; are of incompatible types.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxXxxxx$$xx$ xxx $xx$xxxxxxxxxxxXxxxx$$xx$ xxx xx xxxxxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="209" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;At least one element in &lt;em&gt;sourceArray&lt;/em&gt; cannot be cast to the type of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxx xxx xxxxxxx xx $xx$xxxxxxXxxxx$$xx$ xxxxxx xx xxxx xx xxx xxxx xx $xx$xxxxxxxxxxxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="210" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;sourceIndex&lt;/em&gt; is less than the lower bound of the first dimension of &lt;em&gt;sourceArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;destinationIndex&lt;/em&gt; is less than the lower bound of the first dimension of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxXxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx xxx xxxxx xxxxxxxxx xx $xx$xxxxxxXxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxxxxxxxXxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx xxx xxxxx xxxxxxxxx xx $xx$xxxxxxxxxxxXxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="211" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements from &lt;em&gt;sourceIndex&lt;/em&gt; to the end of &lt;em&gt;sourceArray&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is greater than the number of elements from &lt;em&gt;destinationIndex&lt;/em&gt; to the end of &lt;em&gt;destinationArray&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxx xx xxxxxxxx xxxx $xx$xxxxxxXxxxx$$xx$ xx xxx xxx xx $xx$xxxxxxXxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxx xx xxxxxxxx xxxx $xx$xxxxxxxxxxxXxxxx$$xx$ xx xxx xxx xx $xx$xxxxxxxxxxxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="212" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Copies all the elements of the current one-dimensional array to the specified one-dimensional array starting at the specified destination array index.</source>
          <target state="new">$x$x$Xxxxxx xxx xxx xxxxxxxx xx xxx xxxxxxx xxx$xxxxxxxxxxx xxxxx xx xxx xxxxxxxxx xxx$xxxxxxxxxxx xxxxx xxxxxxxx xx xxx xxxxxxxxx xxxxxxxxxxx xxxxx xxxxx.</target>
        </trans-unit><trans-unit id="213" translate="yes" xml:space="preserve">
          <source>The index is specified as a 32-bit integer.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxx xx xxxxxxxxx xx x 00$xxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="214" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array that is the destination of the elements copied from the current array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxx$xxxxxxxxxxx xxxxx xxxx xx xxx xxxxxxxxxxx xx xxx xxxxxxxx xxxxxx xxxx xxx xxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="215" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the index in &lt;em&gt;array&lt;/em&gt; at which copying begins.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxx xxxx xxxxxxxxxx xxx xxxxx xx $xx$xxxxx$$xx$ xx xxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="216" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="217" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="218" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The number of elements in the source array is greater than the available number of elements from &lt;em&gt;index&lt;/em&gt; to the end of the destination &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x$x$$xx$$$x$$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxxx xxxxx xx xxxxxxx xxxx xxx xxxxxxxxx xxxxxx xx xxxxxxxx xxxx $xx$xxxxx$$xx$ xx xxx xxx xx xxx xxxxxxxxxxx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="219" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The source array is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxx xx xxxxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="220" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;elementType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxxXxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="221" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="222" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;elementType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;lengths&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxxXxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="223" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Any value in &lt;em&gt;lengths&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xx $xx$xxxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="224" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;elementType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;lengths&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;lowerBounds&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxxXxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxXxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="225" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns an empty array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xx xxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="226" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="227" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Determines whether the specified array contains elements that match the conditions defined by the specified predicate.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxxx xxxxxxx xxx xxxxxxxxx xxxxx xxxxxxxx xxxxxxxx xxxx xxxxx xxx xxxxxxxxxx xxxxxxx xx xxx xxxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="228" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="229" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;array&lt;/em&gt; contains one or more elements that match the conditions defined by the specified predicate; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$xxxxx$$xx$ xxxxxxxx xxx xx xxxx xxxxxxxx xxxx xxxxx xxx xxxxxxxxxx xxxxxxx xx xxx xxxxxxxxx xxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="230" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="231" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional, zero-based array to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxx$xxxxxxxxxxx$ xxxx$xxxxx xxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="232" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The predicate that defines the conditions of the element to search for.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxx xxxxxxx xxx xxxxxxxxxx xx xxx xxxxxxx xx xxxxxx xxx.$$x$$x</target>
        </trans-unit><trans-unit id="233" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="234" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type &lt;em&gt;T&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xxxxxxx xxxx xxxxxxx xxx xxxxxxxxxx xxxxxxx xx xxx xxxxxxxxx xxxxxxxxx$ xx xxxxx$ xxxxxxxxx$ xxx xxxxxxx xxxxx xxx xxxx $xx$X$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="235" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="236" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Retrieves all the elements that match the conditions defined by the specified predicate.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxx xxx xxx xxxxxxxx xxxx xxxxx xxx xxxxxxxxxx xxxxxxx xx xxx xxxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="237" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="238" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="239" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based starting index of the search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxxxxx xxxxx xx xxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="240" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the section to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="241" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="242" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the first occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, -1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxx xxxxx xxxxxxxxxx xx xx xxxxxxx xxxx xxxxxxx xxx xxxxxxxxxx xxxxxxx xx $xx$xxxxx$$xx$$ xx xxxxx$ xxxxxxxxx$ $0.$$x$$x</target>
        </trans-unit><trans-unit id="243" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="244" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxx xxxxx xx xxxxx xxxxxxx xxx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxXxxxx$$xx$ xxx $xx$xxxxx$$xx$ xx xxx xxxxxxx x xxxxx xxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="245" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based starting index of the search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxxxxx xxxxx xx xxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="246" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="247" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the first occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, -1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxx xxxxx xxxxxxxxxx xx xx xxxxxxx xxxx xxxxxxx xxx xxxxxxxxxx xxxxxxx xx $xx$xxxxx$$xx$$ xx xxxxx$ xxxxxxxxx$ $0.$$x$$x</target>
        </trans-unit><trans-unit id="248" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="249" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxx xxxxx xx xxxxx xxxxxxx xxx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="250" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="251" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the first occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, -1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxx xxxxx xxxxxxxxxx xx xx xxxxxxx xxxx xxxxxxx xxx xxxxxxxxxx xxxxxxx xx $xx$xxxxx$$xx$$ xx xxxxx$ xxxxxxxxx$ $0.$$x$$x</target>
        </trans-unit><trans-unit id="252" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="253" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="254" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type &lt;em&gt;T&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xxxxxxx xxxx xxxxxxx xxx xxxxxxxxxx xxxxxxx xx xxx xxxxxxxxx xxxxxxxxx$ xx xxxxx$ xxxxxxxxx$ xxx xxxxxxx xxxxx xxx xxxx $xx$X$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="255" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="256" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based starting index of the backward search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxxxxx xxxxx xx xxx xxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="257" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the section to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="258" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="259" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the last occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxx xxxx xxxxxxxxxx xx xx xxxxxxx xxxx xxxxxxx xxx xxxxxxxxxx xxxxxxx xx $xx$xxxxx$$xx$$ xx xxxxx$ xxxxxxxxx$ $0.$$x$$x</target>
        </trans-unit><trans-unit id="260" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="261" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxx xxxxx xx xxxxx xxxxxxx xxx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxXxxxx$$xx$ xxx $xx$xxxxx$$xx$ xx xxx xxxxxxx x xxxxx xxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="262" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based starting index of the backward search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxxxxx xxxxx xx xxx xxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="263" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="264" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the last occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxx xxxx xxxxxxxxxx xx xx xxxxxxx xxxx xxxxxxx xxx xxxxxxxxxx xxxxxxx xx $xx$xxxxx$$xx$$ xx xxxxx$ xxxxxxxxx$ $0.$$x$$x</target>
        </trans-unit><trans-unit id="265" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="266" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxx xxxxx xx xxxxx xxxxxxx xxx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="267" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="268" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the last occurrence of an element that matches the conditions defined by &lt;em&gt;match&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxx xxxx xxxxxxxxxx xx xx xxxxxxx xxxx xxxxxxx xxx xxxxxxxxxx xxxxxxx xx $xx$xxxxx$$xx$$ xx xxxxx$ xxxxxxxxx$ $0.$$x$$x</target>
        </trans-unit><trans-unit id="269" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="270" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit integer that represents the number of elements in the specified dimension.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxx xxxx xxxxxxxxxx xxx xxxxxx xx xxxxxxxx xx xxx xxxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="271" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets the index of the first element of the specified dimension in the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxx xxxxx xx xxx xxxxx xxxxxxx xx xxx xxxxxxxxx xxxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="272" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A zero-based dimension of the array whose starting index needs to be determined.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxx$xxxxx xxxxxxxxx xx xxx xxxxx xxxxx xxxxxxxx xxxxx xxxxx xx xx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="273" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the first element of the specified dimension in the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxxx xxxxxxx xx xxx xxxxxxxxx xxxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="274" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets the index of the last element of the specified dimension in the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxx xxxxx xx xxx xxxx xxxxxxx xx xxx xxxxxxxxx xxxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="275" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A zero-based dimension of the array whose upper bound needs to be determined.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxx$xxxxx xxxxxxxxx xx xxx xxxxx xxxxx xxxxx xxxxx xxxxx xx xx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="276" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the last element of the specified dimension in the array, or -1 if the specified dimension is empty.</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxx xxxxxxx xx xxx xxxxxxxxx xxxxxxxxx xx xxx xxxxx$ xx $0 xx xxx xxxxxxxxx xxxxxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="277" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="278" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;indices&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="279" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Searches for the specified object and returns the index of its first occurrence in a one-dimensional array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxx xxxxxxxxx xxxxxx xxx xxxxxxx xxx xxxxx xx xxx xxxxx xxxxxxxxxx xx x xxx$xxxxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="280" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxx$xxxxxxxxxxx xxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="281" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="282" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the first occurrence of &lt;em&gt;value&lt;/em&gt; in &lt;em&gt;array&lt;/em&gt;, if found; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxxx xxxxxxxxxx xx $xx$xxxxx$$xx$ xx $xx$xxxxx$$xx$$ xx xxxxx$ xxxxxxxxx$ xxx xxxxx xxxxx xx xxx xxxxx xxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="283" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="284" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="285" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of its first occurrence.</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxx xxxxxxxxx xxxxxx xx x xxxxx xx xxxxxxxx xx x xxx$xxxxxxxxxxx xxxxx$ xxx xxxxxxx xxx xxxxx xx xxx xxxxx xxxxxxxxxx.</target>
        </trans-unit><trans-unit id="286" translate="yes" xml:space="preserve">
          <source>The range extends from a specified index to the end of the array.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxx xxxxxxx xxxx x xxxxxxxxx xxxxx xx xxx xxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="287" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxx$xxxxxxxxxxx xxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="288" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="289" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the search.</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxxx.</target>
        </trans-unit><trans-unit id="290" translate="yes" xml:space="preserve">
          <source>0 (zero) is valid in an empty array.&lt;/p&gt;\n</source>
          <target state="new">0 $xxxx$ xx xxxxx xx xx xxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="291" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the first occurrence of &lt;em&gt;value&lt;/em&gt;, if it’s found, within the range of elements in &lt;em&gt;array&lt;/em&gt; that extends from &lt;em&gt;startIndex&lt;/em&gt; to the last element; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxxx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xx$x xxxxx$ xxxxxx xxx xxxxx xx xxxxxxxx xx $xx$xxxxx$$xx$ xxxx xxxxxxx xxxx $xx$xxxxxXxxxx$$xx$ xx xxx xxxx xxxxxxx$ xxxxxxxxx$ xxx xxxxx xxxxx xx xxx xxxxx xxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="292" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="293" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxx xxxxx xx xxxxx xxxxxxx xxx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="294" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="295" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of ifs first occurrence.</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxx xxxxxxxxx xxxxxx xx x xxxxx xx xxxxxxxx xx x xxx$xxxxxxxxxxx xxxxx$ xxx xxxxxxx xxx xxxxx xx xxx xxxxx xxxxxxxxxx.</target>
        </trans-unit><trans-unit id="296" translate="yes" xml:space="preserve">
          <source>The range extends from a specified index for a specified number of elements.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxx xxxxxxx xxxx x xxxxxxxxx xxxxx xxx x xxxxxxxxx xxxxxx xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="297" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxx$xxxxxxxxxxx xxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="298" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="299" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the search.</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxxx.</target>
        </trans-unit><trans-unit id="300" translate="yes" xml:space="preserve">
          <source>0 (zero) is valid in an empty array.&lt;/p&gt;\n</source>
          <target state="new">0 $xxxx$ xx xxxxx xx xx xxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="301" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="302" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the first occurrence of &lt;em&gt;value&lt;/em&gt;, if it’s found in the &lt;em&gt;array&lt;/em&gt; from index &lt;em&gt;startIndex&lt;/em&gt; to &lt;em&gt;startIndex&lt;/em&gt; + &lt;em&gt;count&lt;/em&gt; - 1; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxxx xxxxxxxxxx xx $xx$xxxxx$$xx$$ xx xx$x xxxxx xx xxx $xx$xxxxx$$xx$ xxxx xxxxx $xx$xxxxxXxxxx$$xx$ xx $xx$xxxxxXxxxx$$xx$ $ $xx$xxxxx$$xx$ $ 0$ xxxxxxxxx$ xxx xxxxx xxxxx xx xxx xxxxx xxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="303" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="304" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxx xxxxx xx xxxxx xxxxxxx xxx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxXxxxx$$xx$ xxx $xx$xxxxx$$xx$ xx xxx xxxxxxx x xxxxx xxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="305" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="306" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Searches for the specified object and returns the index of its first occurrence in a one-dimensional array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxx xxxxxxxxx xxxxxx xxx xxxxxxx xxx xxxxx xx xxx xxxxx xxxxxxxxxx xx x xxx$xxxxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="307" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional, zero-based array to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxx$xxxxxxxxxxx$ xxxx$xxxxx xxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="308" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="309" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="310" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the first occurrence of &lt;em&gt;value&lt;/em&gt; in the entire &lt;em&gt;array&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxx xxxxx xxxxxxxxxx xx $xx$xxxxx$$xx$ xx xxx xxxxxx $xx$xxxxx$$xx$$ xx xxxxx$ xxxxxxxxx$ $0.$$x$$x</target>
        </trans-unit><trans-unit id="311" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="312" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Searches for the specified object in a range of elements of a one dimensional array, and returns the index of its first occurrence.</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxx xxxxxxxxx xxxxxx xx x xxxxx xx xxxxxxxx xx x xxx xxxxxxxxxxx xxxxx$ xxx xxxxxxx xxx xxxxx xx xxx xxxxx xxxxxxxxxx.</target>
        </trans-unit><trans-unit id="313" translate="yes" xml:space="preserve">
          <source>The range extends from a specified index to the end of the array.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxx xxxxxxx xxxx x xxxxxxxxx xxxxx xx xxx xxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="314" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional, zero-based array to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxx$xxxxxxxxxxx$ xxxx$xxxxx xxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="315" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="316" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based starting index of the search.</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxxxxx xxxxx xx xxx xxxxxx.</target>
        </trans-unit><trans-unit id="317" translate="yes" xml:space="preserve">
          <source>0 (zero) is valid in an empty array.&lt;/p&gt;\n</source>
          <target state="new">0 $xxxx$ xx xxxxx xx xx xxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="318" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="319" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the first occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that extends from &lt;em&gt;startIndex&lt;/em&gt; to the last element, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxx xxxxx xxxxxxxxxx xx $xx$xxxxx$$xx$ xxxxxx xxx xxxxx xx xxxxxxxx xx $xx$xxxxx$$xx$ xxxx xxxxxxx xxxx $xx$xxxxxXxxxx$$xx$ xx xxx xxxx xxxxxxx$ xx xxxxx$ xxxxxxxxx$ $0.$$x$$x</target>
        </trans-unit><trans-unit id="320" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="321" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxx xxxxx xx xxxxx xxxxxxx xxx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="322" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of its first occurrence.</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxx xxxxxxxxx xxxxxx xx x xxxxx xx xxxxxxxx xx x xxx$xxxxxxxxxxx xxxxx$ xxx xxxxxxx xxx xxxxx xx xxx xxxxx xxxxxxxxxx.</target>
        </trans-unit><trans-unit id="323" translate="yes" xml:space="preserve">
          <source>The range extends from a specified index for a specified number of elements.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxx xxxxxxx xxxx x xxxxxxxxx xxxxx xxx x xxxxxxxxx xxxxxx xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="324" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional, zero-based array to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxx$xxxxxxxxxxx$ xxxx$xxxxx xxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="325" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="326" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based starting index of the search.</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxxxxx xxxxx xx xxx xxxxxx.</target>
        </trans-unit><trans-unit id="327" translate="yes" xml:space="preserve">
          <source>0 (zero) is valid in an empty array.&lt;/p&gt;\n</source>
          <target state="new">0 $xxxx$ xx xxxxx xx xx xxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="328" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the section to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="329" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="330" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the first occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that starts at &lt;em&gt;startIndex&lt;/em&gt; and contains the number of elements specified in &lt;em&gt;count&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxx xxxxx xxxxxxxxxx xx $xx$xxxxx$$xx$ xxxxxx xxx xxxxx xx xxxxxxxx xx $xx$xxxxx$$xx$ xxxx xxxxxx xx $xx$xxxxxXxxxx$$xx$ xxx xxxxxxxx xxx xxxxxx xx xxxxxxxx xxxxxxxxx xx $xx$xxxxx$$xx$$ xx xxxxx$ xxxxxxxxx$ $0.$$x$$x</target>
        </trans-unit><trans-unit id="331" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="332" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxx xxxxx xx xxxxx xxxxxxx xxx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxXxxxx$$xx$ xxx $xx$xxxxx$$xx$ xx xxx xxxxxxx x xxxxx xxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="333" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="334" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the entire &lt;em&gt;array&lt;/em&gt;, if found; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxx xxxxxxxxxx xx $xx$xxxxx$$xx$ xxxxxx xxx xxxxxx $xx$xxxxx$$xx$$ xx xxxxx$ xxxxxxxxx$ xxx xxxxx xxxxx xx xxx xxxxx xxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="335" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="336" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="337" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="338" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the backward search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="339" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that extends from the first element to &lt;em&gt;startIndex&lt;/em&gt;, if found; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxx xxxxxxxxxx xx $xx$xxxxx$$xx$ xxxxxx xxx xxxxx xx xxxxxxxx xx $xx$xxxxx$$xx$ xxxx xxxxxxx xxxx xxx xxxxx xxxxxxx xx $xx$xxxxxXxxxx$$xx$$ xx xxxxx$ xxxxxxxxx$ xxx xxxxx xxxxx xx xxx xxxxx xxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="340" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="341" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxx xxxxx xx xxxxx xxxxxxx xxx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="342" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="343" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="344" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the backward search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="345" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the section to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="346" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that contains the number of elements specified in &lt;em&gt;count&lt;/em&gt; and ends at &lt;em&gt;startIndex&lt;/em&gt;, if found; otherwise, the lower bound of the array minus 1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxx xxxxxxxxxx xx $xx$xxxxx$$xx$ xxxxxx xxx xxxxx xx xxxxxxxx xx $xx$xxxxx$$xx$ xxxx xxxxxxxx xxx xxxxxx xx xxxxxxxx xxxxxxxxx xx $xx$xxxxx$$xx$ xxx xxxx xx $xx$xxxxxXxxxx$$xx$$ xx xxxxx$ xxxxxxxxx$ xxx xxxxx xxxxx xx xxx xxxxx xxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="347" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="348" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxx xxxxx xx xxxxx xxxxxxx xxx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxXxxxx$$xx$ xxx $xx$xxxxx$$xx$ xx xxx xxxxxxx x xxxxx xxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="349" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="350" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="351" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="352" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the entire &lt;em&gt;array&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxx xxxx xxxxxxxxxx xx $xx$xxxxx$$xx$ xxxxxx xxx xxxxxx $xx$xxxxx$$xx$$ xx xxxxx$ xxxxxxxxx$ $0.$$x$$x</target>
        </trans-unit><trans-unit id="353" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="354" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="355" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based starting index of the backward search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxxxxx xxxxx xx xxx xxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="356" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="357" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that extends from the first element to &lt;em&gt;startIndex&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxx xxxx xxxxxxxxxx xx $xx$xxxxx$$xx$ xxxxxx xxx xxxxx xx xxxxxxxx xx $xx$xxxxx$$xx$ xxxx xxxxxxx xxxx xxx xxxxx xxxxxxx xx $xx$xxxxxXxxxx$$xx$$ xx xxxxx$ xxxxxxxxx$ $0.$$x$$x</target>
        </trans-unit><trans-unit id="358" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="359" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxx xxxxx xx xxxxx xxxxxxx xxx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="360" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="361" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based starting index of the backward search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxxxxx xxxxx xx xxx xxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="362" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the section to search.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="363" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="364" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the last occurrence of &lt;em&gt;value&lt;/em&gt; within the range of elements in &lt;em&gt;array&lt;/em&gt; that contains the number of elements specified in &lt;em&gt;count&lt;/em&gt; and ends at &lt;em&gt;startIndex&lt;/em&gt;, if found; otherwise, –1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxx xxxx xxxxxxxxxx xx $xx$xxxxx$$xx$ xxxxxx xxx xxxxx xx xxxxxxxx xx $xx$xxxxx$$xx$ xxxx xxxxxxxx xxx xxxxxx xx xxxxxxxx xxxxxxxxx xx $xx$xxxxx$$xx$ xxx xxxx xx $xx$xxxxxXxxxx$$xx$$ xx xxxxx$ xxxxxxxxx$ $0.$$x$$x</target>
        </trans-unit><trans-unit id="365" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="366" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is outside the range of valid indexes for &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;count&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid section in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxx xxxxx xx xxxxx xxxxxxx xxx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxXxxxx$$xx$ xxx $xx$xxxxx$$xx$ xx xxx xxxxxxx x xxxxx xxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="367" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Changes the number of elements of a one-dimensional array to the specified new size.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxx xx xxxxxxxx xx x xxx$xxxxxxxxxxx xxxxx xx xxx xxxxxxxxx xxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="368" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional, zero-based array to resize, or &lt;strong&gt;null&lt;/strong&gt; to create a new array with the specified size.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxx$xxxxxxxxxxx$ xxxx$xxxxx xxxxx xx xxxxxx$ xx $xxxxxx$xxxx$$xxxxxx$ xx xxxxxx x xxx xxxxx xxxx xxx xxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="369" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The size of the new array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="370" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="371" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;newSize&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxXxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="372" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="373" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="374" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="375" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="376" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the section to reverse.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxxxx xx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="377" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the section to reverse.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxxxx xx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="378" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="379" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="380" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="381" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxx $xx$xxxxxx$$xx$ xx xxx xxxxxxx x xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="382" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The new value for the specified element.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxx xxxxx xxx xxx xxxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="383" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The new value for the specified element.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxx xxxxx xxx xxx xxxxxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="384" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the element to set.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxx$xxxxxxxxxxx xxxxx xx 00$xxx xxxxxxxx xxxx xxxxxxxxx xxx xxxxxxx xxxxxxxxxx xxx xxxxxxxx xx xxx xxxxxxx xx xxx.$$x$$x</target>
        </trans-unit><trans-unit id="385" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;indices&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="386" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="387" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="388" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="389" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the length of &lt;em&gt;keys&lt;/em&gt; is greater than the length of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx $xxxxxx$xxxx$$xxxxxx$$ xxx xxx xxxxxx xx $xx$xxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="390" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="391" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the length of &lt;em&gt;keys&lt;/em&gt; is greater than the length of &lt;em&gt;items&lt;/em&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx $xxxxxx$xxxx$$xxxxxx$$ xxx xxx xxxxxx xx $xx$xxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="392" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</source>
          <target state="new">$$x$$x$x$$xx$$$x$$x$x$Xxx xxxxxxxxxxxxxx xx $xx$xxxxxxxx$$xx$ xxxxxx xx xxxxx xxxxxx xxx xxxx.</target>
        </trans-unit><trans-unit id="393" translate="yes" xml:space="preserve">
          <source>For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxx$ $xx$xxxxxxxx$$xx$ xxxxx xxx xxxxxx 0 xxxx xxxxxxxxx xx xxxx xxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="394" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="395" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="396" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="397" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;keys&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx $xx$xxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="398" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="399" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="400" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="401" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;keys&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx $xx$xxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="402" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxx$xxxxxxxxxxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="403" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="404" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="405" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</source>
          <target state="new">$x$x$Xxx xxxxxxxxxxxxxx xx $xx$xxxxxxxx$$xx$ xxxxxx xx xxxxx xxxxxx xxx xxxx.</target>
        </trans-unit><trans-unit id="406" translate="yes" xml:space="preserve">
          <source>For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxx$ $xx$xxxxxxxx$$xx$ xxxxx xxx xxxxxx 0 xxxx xxxxxxxxx xx xxxx xxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="407" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="408" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="409" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="410" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="411" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="412" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxx $xx$xxxxxx$$xx$ xx xxx xxxxxxx x xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="413" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="414" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="415" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="416" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="417" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="418" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxx $xx$xxxxxx$$xx$ xx xxx xxxxxxx x xxxxx xxxxx xx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="419" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</source>
          <target state="new">$$x$$x$x$$xx$$$x$$x$x$Xxx xxxxxxxxxxxxxx xx $xx$xxxxxxxx$$xx$ xxxxxx xx xxxxx xxxxxx xxx xxxx.</target>
        </trans-unit><trans-unit id="420" translate="yes" xml:space="preserve">
          <source>For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxx$ $xx$xxxxxxxx$$xx$ xxxxx xxx xxxxxx 0 xxxx xxxxxxxxx xx xxxx xxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="421" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="422" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="423" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="424" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="425" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</source>
          <target state="new">$x$x$Xxx xxxxxxxxxxxxxx xx $xx$xxxxxxxx$$xx$ xxxxxx xx xxxxx xxxxxx xxx xxxx.</target>
        </trans-unit><trans-unit id="426" translate="yes" xml:space="preserve">
          <source>For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxx$ $xx$xxxxxxxx$$xx$ xxxxx xxx xxxxxx 0 xxxx xxxxxxxxx xx xxxx xxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="427" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="428" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;comparison&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="429" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The implementation of &lt;em&gt;comparison&lt;/em&gt; caused an error during the sort.</source>
          <target state="new">$x$x$Xxx xxxxxxxxxxxxxx xx $xx$xxxxxxxxxx$$xx$ xxxxxx xx xxxxx xxxxxx xxx xxxx.</target>
        </trans-unit><trans-unit id="430" translate="yes" xml:space="preserve">
          <source>For example, &lt;em&gt;comparison&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxx$ $xx$xxxxxxxxxx$$xx$ xxxxx xxx xxxxxx 0 xxxx xxxxxxxxx xx xxxx xxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="431" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="432" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="433" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="434" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="435" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="436" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxx $xx$xxxxxx$$xx$ xx xxx xxxxxxx x xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="437" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="438" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="439" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="440" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="441" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="442" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xxx $xx$xxxxxx$$xx$ xx xxx xxxxxxx x xxxxx xxxxx xx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="443" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</source>
          <target state="new">$$x$$x$x$$xx$$$x$$x$x$Xxx xxxxxxxxxxxxxx xx $xx$xxxxxxxx$$xx$ xxxxxx xx xxxxx xxxxxx xxx xxxx.</target>
        </trans-unit><trans-unit id="444" translate="yes" xml:space="preserve">
          <source>For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxx$ $xx$xxxxxxxx$$xx$ xxxxx xxx xxxxxx 0 xxxx xxxxxxxxx xx xxxx xxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="445" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the key array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="446" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the items array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="447" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="448" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the lower bound of &lt;em&gt;keys&lt;/em&gt; does not match the lower bound of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the length of &lt;em&gt;keys&lt;/em&gt; is greater than the length of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx $xxxxxx$xxxx$$xxxxxx$$ xxx xxx xxxxx xxxxx xx $xx$xxxx$$xx$ xxxx xxx xxxxx xxx xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx xxx $xxxxxx$xxxx$$xxxxxx$$ xxx xxx xxxxxx xx $xx$xxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="449" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the key array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="450" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the items array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="451" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="452" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the lower bound of &lt;em&gt;keys&lt;/em&gt; does not match the lower bound of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;items&lt;/em&gt; is not &lt;strong&gt;null&lt;/strong&gt;, and the length of &lt;em&gt;keys&lt;/em&gt; is greater than the length of &lt;em&gt;items&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The implementation of &lt;em&gt;comparer&lt;/em&gt; caused an error during the sort.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx $xxxxxx$xxxx$$xxxxxx$$ xxx xxx xxxxx xxxxx xx $xx$xxxx$$xx$ xxxx xxx xxxxx xxx xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx xxx $xxxxxx$xxxx$$xxxxxx$$ xxx xxx xxxxxx xx $xx$xxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$Xxx xxxxxxxxxxxxxx xx $xx$xxxxxxxx$$xx$ xxxxxx xx xxxxx xxxxxx xxx xxxx.</target>
        </trans-unit><trans-unit id="453" translate="yes" xml:space="preserve">
          <source>For example, &lt;em&gt;comparer&lt;/em&gt; might not return 0 when comparing an item with itself.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxx$ $xx$xxxxxxxx$$xx$ xxxxx xxx xxxxxx 0 xxxx xxxxxxxxx xx xxxx xxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="454" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="455" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="456" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the key array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="457" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the items array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="458" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="459" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;keys&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx $xx$xxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="460" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting index of the range to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxx xx xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="461" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range to sort.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="462" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the key array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="463" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the items array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="464" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;keys&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="465" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is less than the lower bound of &lt;em&gt;keys&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxx xxxx xxx xxxxx xxxxx xx $xx$xxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="466" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Adding a value to an array is not supported.</source>
          <target state="new">$x$x$Xxxxxx x xxxxx xx xx xxxxx xx xxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="467" translate="yes" xml:space="preserve">
          <source>No value is returned.</source>
          <target state="new">Xx xxxxx xx xxxxxxxx.</target>
        </trans-unit><trans-unit id="468" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="469" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in the current list.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xx xxx xxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="470" translate="yes" xml:space="preserve">
          <source>The element to locate can be &lt;strong&gt;null&lt;/strong&gt; for reference types.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxx xx xxxxxx xxx xx $xxxxxx$xxxx$$xxxxxx$ xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="471" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in the current list.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xx xxx xxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="472" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of value if found in the list; otherwise, -1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xx xxxxx xx xxxxx xx xxx xxxx$ xxxxxxxxx$ $0.$$x$$x</target>
        </trans-unit><trans-unit id="473" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index at which &lt;em&gt;value&lt;/em&gt; should be inserted.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xx xxxxx $xx$xxxxx$$xx$ xxxxxx xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="474" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to insert.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="475" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the element to remove.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="476" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Determines whether the current collection object precedes, occurs in the same position as, or follows another object in the sort order.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxxx xxxxxxx xxx xxxxxxx xxxxxxxxxx xxxxxx xxxxxxxx$ xxxxxx xx xxx xxxx xxxxxxxx xx$ xx xxxxxxx xxxxxxx xxxxxx xx xxx xxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="477" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to compare with the current instance.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxx xxxx xxx xxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="478" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that compares the current object and &lt;em&gt;other&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxx xxxxxxx xxxxxx xxx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="479" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An integer that indicates the relationship of the current collection object to other, as shown in the following table.&lt;/p&gt;\n&lt;p&gt;Return value&lt;/p&gt;\n&lt;p&gt;Description&lt;/p&gt;\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\n&lt;p&gt;-1&lt;/p&gt;\n&lt;/td&gt;&lt;td&gt;\n&lt;p&gt;The current instance precedes &lt;em&gt;other&lt;/em&gt;.&lt;/p&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\n&lt;p&gt;0&lt;/p&gt;\n&lt;/td&gt;&lt;td&gt;\n&lt;p&gt;The current instance and &lt;em&gt;other&lt;/em&gt; are equal.&lt;/p&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\n&lt;p&gt;1&lt;/p&gt;\n&lt;/td&gt;&lt;td&gt;\n&lt;p&gt;The current instance follows &lt;em&gt;other&lt;/em&gt;.&lt;/p&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxxx xxxx xxxxxxxxx xxx xxxxxxxxxxxx xx xxx xxxxxxx xxxxxxxxxx xxxxxx xx xxxxx$ xx xxxxx xx xxx xxxxxxxxx xxxxx.$$x$$x$x$Xxxxxx xxxxx$$x$$x$x$Xxxxxxxxxxx$$x$$x$xxxxx$$xxxxx$$xx$$xx$$x$x$$0$$x$$x$$xx$$xx$$x$x$Xxx xxxxxxx xxxxxxxx xxxxxxxx $xx$xxxxx$$xx$.$$x$$x$$xx$$$xx$$xx$$xx$$x$x$0$$x$$x$$xx$$xx$$x$x$Xxx xxxxxxx xxxxxxxx xxx $xx$xxxxx$$xx$ xxx xxxxx.$$x$$x$$xx$$$xx$$xx$$xx$$x$x$0$$x$$x$$xx$$xx$$x$x$Xxx xxxxxxx xxxxxxxx xxxxxxx $xx$xxxxx$$xx$.$$x$$x$$xx$$$xx$$$xxxxx$$$xxxxx$$x</target>
        </trans-unit><trans-unit id="480" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Determines whether an object is equal to the current instance.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxxx xxxxxxx xx xxxxxx xx xxxxx xx xxx xxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="481" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to compare with the current instance.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxx xxxx xxx xxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="482" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that determines whether the current instance and &lt;em&gt;other&lt;/em&gt; are equal.</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxxxx xxxxxxx xxx xxxxxxx xxxxxxxx xxx $xx$xxxxx$$xx$ xxx xxxxx.</target>
        </trans-unit><trans-unit id="483" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="484" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the two objects are equal; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxx xxxxxxx xxx xxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="485" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns a hash code for the current instance.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx x xxxx xxxx xxx xxx xxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="486" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that computes the hash code of the current object.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxx xxxx xxxx xx xxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="487" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The hash code for the current instance.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xxxx xxx xxx xxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="488" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Determines whether every element in the array matches the conditions defined by the specified predicate.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxxx xxxxxxx xxxxx xxxxxxx xx xxx xxxxx xxxxxxx xxx xxxxxxxxxx xxxxxxx xx xxx xxxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="489" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The predicate that defines the conditions to check against the elements.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxx xxxxxxx xxx xxxxxxxxxx xx xxxxx xxxxxxx xxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="490" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements of the array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="491" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if every element in &lt;em&gt;array&lt;/em&gt; matches the conditions defined by the specified predicate; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxxxx xxxxxxx xx $xx$xxxxx$$xx$ xxxxxxx xxx xxxxxxxxxx xxxxxxx xx xxx xxxxxxxxx xxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="492" translate="yes" xml:space="preserve">
          <source>If there are no elements in the array, the return value is &lt;strong&gt;true&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">Xx xxxxx xxx xx xxxxxxxx xx xxx xxxxx$ xxx xxxxxx xxxxx xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="493" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;match&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit></group></body></file></xliff>
<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="markdown" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" /></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The parent type description provider.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxx xxxxxxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Creates an object that can substitute for another data type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xx xxxxxx xxxx xxx xxxxxxxxxx xxx xxxxxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An optional service provider.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxxxx xxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of object to create.</source>
          <target state="new">$x$x$Xxx xxxx xx xxxxxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>This parameter is never &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">Xxxx xxxxxxxxx xx xxxxx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An optional array of types that represent the parameter types to be passed to the object's constructor.</source>
          <target state="new">$x$x$Xx xxxxxxxx xxxxx xx xxxxx xxxx xxxxxxxxx xxx xxxxxxxxx xxxxx xx xx xxxxxx xx xxx xxxxxx$x xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>This array can be &lt;strong&gt;null&lt;/strong&gt; or of zero length.&lt;/p&gt;\n</source>
          <target state="new">Xxxx xxxxx xxx xx $xxxxxx$xxxx$$xxxxxx$ xx xx xxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An optional array of parameter values to pass to the object's constructor.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxxxx xxxxx xx xxxxxxxxx xxxxxx xx xxxx xx xxx xxxxxx$x xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object for which to get the cache.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxx xxxxx xx xxx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets an extended custom type descriptor for the given object.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xx xxxxxxxx xxxxxx xxxx xxxxxxxxxx xxx xxx xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object for which to get the extended type descriptor.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxx xxxxx xx xxx xxx xxxxxxxx xxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets the extender providers for the specified object.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxx xxxxxxxx xxxxxxxxx xxx xxx xxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to get extender providers for.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxx xxxxxxxx xxxxxxxxx xxx.$$x$$x</target>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of extender providers for &lt;em&gt;instance&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxxxxx xxxxxxxxx xxx $xx$xxxxxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;instance&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets the name of the specified component, or &lt;strong&gt;null&lt;/strong&gt; if the component has no name.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxx xxxx xx xxx xxxxxxxxx xxxxxxxxx$ xx $xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The specified component.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The name of the specified component.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;component&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Performs normal reflection against the given object.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxxxxx xxxxxxxxxx xxxxxxx xxx xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An instance of the type (should not be &lt;strong&gt;null&lt;/strong&gt;).&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxxxx xx xxx xxxx $xxxxxx xxx xx $xxxxxx$xxxx$$xxxxxx$$.$$x$$x</target>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of reflection for this &lt;em&gt;instance&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxxxxxxxxx xxx xxxx $xx$xxxxxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;instance&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Performs normal reflection against a type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxxxxx xxxxxxxxxx xxxxxxx x xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of reflection for this &lt;em&gt;objectType&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxxxxxxxxx xxx xxxx $xx$xxxxxxXxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;objectType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxXxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Performs normal reflection against the given object with the given type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxxxxx xxxxxxxxxx xxxxxxx xxx xxxxx xxxxxx xxxx xxx xxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An instance of the type.</source>
          <target state="new">$x$x$Xx xxxxxxxx xx xxx xxxx.</target>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Can be &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">Xxx xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of reflection for this &lt;em&gt;objectType&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxxxxxxxxx xxx xxxx $xx$xxxxxxXxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts a reflection type into a runtime type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx x xxxxxxxxxx xxxx xxxx x xxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type to convert to its runtime equivalent.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxxxxxx xx xxx xxxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;reflectionType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxxxxxXxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets a custom type descriptor for the given object.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx x xxxxxx xxxx xxxxxxxxxx xxx xxx xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;instance&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets a custom type descriptor for the given type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx x xxxxxx xxxx xxxxxxxxxx xxx xxx xxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of object for which to retrieve the type descriptor.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxxxxx xxx xxxxx xx xxxxxxxx xxx xxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets a custom type descriptor for the given type and object.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx x xxxxxx xxxx xxxxxxxxxx xxx xxx xxxxx xxxx xxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of object for which to retrieve the type descriptor.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxxxxx xxx xxxxx xx xxxxxxxx xxx xxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets a value that indicates whether the specified type is compatible with the type description and its chain of type description providers.</source>
          <target state="new">$x$x$Xxxx x xxxxx xxxx xxxxxxxxx xxxxxxx xxx xxxxxxxxx xxxx xx xxxxxxxxxx xxxx xxx xxxx xxxxxxxxxxx xxx xxx xxxxx xx xxxx xxxxxxxxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type to test for compatibility.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxxx xxx xxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;type&lt;/em&gt; is compatible with the type description and its chain of type description providers; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$xxxx$$xx$ xx xxxxxxxxxx xxxx xxx xxxx xxxxxxxxxxx xxx xxx xxxxx xx xxxx xxxxxxxxxxx xxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;type&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit></group></body></file></xliff>
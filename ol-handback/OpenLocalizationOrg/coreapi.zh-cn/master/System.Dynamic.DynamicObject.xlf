<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="markdown" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" /></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides a base class for specifying dynamic behavior at run time.</source>
          <target state="new">$x$x$Xxxxxxxx x xxxx xxxxx xxx xxxxxxxxxx xxxxxxx xxxxxxxx xx xxx xxxx.</target>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class must be inherited from; you cannot instantiate it directly.&lt;/p&gt;\n</source>
          <target state="new">Xxxx xxxxx xxxx xx xxxxxxxxx xxxx$ xxx xxxxxx xxxxxxxxxxx xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the enumeration of all dynamic member names.</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxxxx xx xxx xxxxxxx xxxxxx xxxxx.</target>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A sequence that contains dynamic member names.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxxxx xxxx xxxxxxxx xxxxxxx xxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The right operand for the binary operation.</source>
          <target state="new">$x$x$Xxx xxxxx xxxxxxx xxx xxx xxxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>For example, for the &lt;code&gt;sum = first + second&lt;/code&gt; statement, where &lt;code&gt;first&lt;/code&gt; and &lt;code&gt;second&lt;/code&gt; are derived from the &lt;strong&gt;DynamicObject&lt;/strong&gt; class, &lt;em&gt;arg&lt;/em&gt; is equal to &lt;code&gt;second&lt;/code&gt;.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxx$ xxx xxx $xxxx$xxx $ xxxxx $ xxxxxx$$xxxx$ xxxxxxxxx$ xxxxx $xxxx$xxxxx$$xxxx$ xxx $xxxx$xxxxxx$$xxxx$ xxx xxxxxxx xxxx xxx $xxxxxx$XxxxxxxXxxxxx$$xxxxxx$ xxxxx$ $xx$xxx$$xx$ xx xxxxx xx $xxxx$xxxxxx$$xxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of the binary operation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxx xxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">Xx xxxx xxxxxx xxxxxxx $xxxxxx$xxxxx$$xxxxxx$$ xxx xxx$xxxx xxxxxx xx xxx xxxxxxxx xxxxxxxxxx xxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">$Xx xxxx xxxxx$ x xxxxxxxx$xxxxxxxx xxx$xxxx xxxxxxxxx xx xxxxxx.$$$x$$x</target>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of the type conversion operation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxx xxxx xxxxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">Xx xxxx xxxxxx xxxxxxx $xxxxxx$xxxxx$$xxxxxx$$ xxx xxx$xxxx xxxxxx xx xxx xxxxxxxx xxxxxxxxxx xxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">$Xx xxxx xxxxx$ x xxxxxxxx$xxxxxxxx xxx$xxxx xxxxxxxxx xx xxxxxx.$$$x$$x</target>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides the implementation for operations that initialize a new instance of a dynamic object.</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxxxxxxx xxx xxxxxxxxxx xxxx xxxxxxxxxx x xxx xxxxxxxx xx x xxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>This method is not intended for use in C# or Visual Basic.&lt;/p&gt;\n</source>
          <target state="new">Xxxx xxxxxx xx xxx xxxxxxxx xxx xxx xx X$ xx Xxxxxx Xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides information about the initialization operation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxxxxxxxxxx xxxxx xxx xxxxxxxxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of the initialization.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">Xx xxxx xxxxxx xxxxxxx $xxxxxx$xxxxx$$xxxxxx$$ xxx xxx$xxxx xxxxxx xx xxx xxxxxxxx xxxxxxxxxx xxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">$Xx xxxx xxxxx$ x xxxxxxxx$xxxxxxxx xxx$xxxx xxxxxxxxx xx xxxxxx.$$$x$$x</target>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides the implementation for operations that delete an object by index.</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxxxxxxx xxx xxxxxxxxxx xxxx xxxxxx xx xxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>This method is not intended for use in C# or Visual Basic.&lt;/p&gt;\n</source>
          <target state="new">Xxxx xxxxxx xx xxx xxxxxxxx xxx xxx xx X$ xx Xxxxxx Xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides information about the deletion.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxxxxxxxxxx xxxxx xxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The indexes to be deleted.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxx xx xx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">Xx xxxx xxxxxx xxxxxxx $xxxxxx$xxxxx$$xxxxxx$$ xxx xxx$xxxx xxxxxx xx xxx xxxxxxxx xxxxxxxxxx xxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">$Xx xxxx xxxxx$ x xxxxxxxx$xxxxxxxx xxx$xxxx xxxxxxxxx xx xxxxxx.$$$x$$x</target>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides the implementation for operations that delete an object member.</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxxxxxxx xxx xxxxxxxxxx xxxx xxxxxx xx xxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>This method is not intended for use in C# or Visual Basic.&lt;/p&gt;\n</source>
          <target state="new">Xxxx xxxxxx xx xxx xxxxxxxx xxx xxx xx X$ xx Xxxxxx Xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides information about the deletion.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxxxxxxxxxx xxxxx xxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">Xx xxxx xxxxxx xxxxxxx $xxxxxx$xxxxx$$xxxxxx$$ xxx xxx$xxxx xxxxxx xx xxx xxxxxxxx xxxxxxxxxx xxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">$Xx xxxx xxxxx$ x xxxxxxxx$xxxxxxxx xxx$xxxx xxxxxxxxx xx xxxxxx.$$$x$$x</target>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides information about the operation.</source>
          <target state="new">$x$x$Xxxxxxxx xxxxxxxxxxx xxxxx xxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The indexes that are used in the operation.</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxx xxx xxxx xx xxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>For example, for the &lt;code&gt;sampleObject[3]&lt;/code&gt; operation in C# (&lt;code&gt;sampleObject(3)&lt;/code&gt; in Visual Basic), where &lt;code&gt;sampleObject&lt;/code&gt; is derived from the &lt;strong&gt;DynamicObject&lt;/strong&gt; class, &lt;em&gt;indexes[0]&lt;/em&gt; is equal to 3.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxx$ xxx xxx $xxxx$xxxxxxXxxxxx$0$$$xxxx$ xxxxxxxxx xx X$ $$xxxx$xxxxxxXxxxxx$0$$$xxxx$ xx Xxxxxx Xxxxx$$ xxxxx $xxxx$xxxxxxXxxxxx$$xxxx$ xx xxxxxxx xxxx xxx $xxxxxx$XxxxxxxXxxxxx$$xxxxxx$ xxxxx$ $xx$xxxxxxx$0$$$xx$ xx xxxxx xx 0.$$x$$x</target>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of the index operation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxx xxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">Xx xxxx xxxxxx xxxxxxx $xxxxxx$xxxxx$$xxxxxx$$ xxx xxx$xxxx xxxxxx xx xxx xxxxxxxx xxxxxxxxxx xxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>(In most cases, a run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">$Xx xxxx xxxxx$ x xxx$xxxx xxxxxxxxx xx xxxxxx.$$$x$$x</target>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of the get operation.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxx xxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>For example, if the method is called for a property, you can assign the property value to &lt;em&gt;result&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxxx$ xx xxx xxxxxx xx xxxxxx xxx x xxxxxxxx$ xxx xxx xxxxxx xxx xxxxxxxx xxxxx xx $xx$xxxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">Xx xxxx xxxxxx xxxxxxx $xxxxxx$xxxxx$$xxxxxx$$ xxx xxx$xxxx xxxxxx xx xxx xxxxxxxx xxxxxxxxxx xxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>(In most cases, a run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">$Xx xxxx xxxxx$ x xxx$xxxx xxxxxxxxx xx xxxxxx.$$$x$$x</target>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides information about the invoke operation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxxxxxxxxxx xxxxx xxx xxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of the object invocation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxx xxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">Xx xxxx xxxxxx xxxxxxx $xxxxxx$xxxxx$$xxxxxx$$ xxx xxx$xxxx xxxxxx xx xxx xxxxxxxx xxxxxxxxxx xxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.&lt;/p&gt;\n</source>
          <target state="new">$Xx xxxx xxxxx$ x xxxxxxxx$xxxxxxxx xxx$xxxx xxxxxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of the member invocation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxx xxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">Xx xxxx xxxxxx xxxxxxx $xxxxxx$xxxxx$$xxxxxx$$ xxx xxx$xxxx xxxxxx xx xxx xxxxxxxx xxxxxxxxxx xxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">$Xx xxxx xxxxx$ x xxxxxxxx$xxxxxxxx xxx$xxxx xxxxxxxxx xx xxxxxx.$$$x$$x</target>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides information about the operation.</source>
          <target state="new">$x$x$Xxxxxxxx xxxxxxxxxxx xxxxx xxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">Xx xxxx xxxxxx xxxxxxx $xxxxxx$xxxxx$$xxxxxx$$ xxx xxx$xxxx xxxxxx xx xxx xxxxxxxx xxxxxxxxxx xxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.&lt;/p&gt;\n</source>
          <target state="new">$Xx xxxx xxxxx$ x xxxxxxxx$xxxxxxxx xxx$xxxx xxxxxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">Xx xxxx xxxxxx xxxxxxx $xxxxxx$xxxxx$$xxxxxx$$ xxx xxx$xxxx xxxxxx xx xxx xxxxxxxx xxxxxxxxxx xxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">$Xx xxxx xxxxx$ x xxxxxxxx$xxxxxxxx xxx$xxxx xxxxxxxxx xx xxxxxx.$$$x$$x</target>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of the unary operation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxx xxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the operation is successful; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxx xx xxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>If this method returns &lt;strong&gt;false&lt;/strong&gt;, the run-time binder of the language determines the behavior.</source>
          <target state="new">Xx xxxx xxxxxx xxxxxxx $xxxxxx$xxxxx$$xxxxxx$$ xxx xxx$xxxx xxxxxx xx xxx xxxxxxxx xxxxxxxxxx xxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>(In most cases, a language-specific run-time exception is thrown.)&lt;/p&gt;\n</source>
          <target state="new">$Xx xxxx xxxxx$ x xxxxxxxx$xxxxxxxx xxx$xxxx xxxxxxxxx xx xxxxxx.$$$x$$x</target>
        </trans-unit></group></body></file></xliff>
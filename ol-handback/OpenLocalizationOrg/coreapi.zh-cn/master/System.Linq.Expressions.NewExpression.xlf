<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="markdown" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" /></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Represents a constructor call.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxxx x xxxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets the arguments to the constructor.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxx xxxxxxxxx xx xxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets the called constructor.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxx xxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets the members that can retrieve the values of the fields that were initialized with constructor arguments.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxx xxxxxxx xxxx xxx xxxxxxxx xxx xxxxxx xx xxx xxxxxx xxxx xxxx xxxxxxxxxxx xxxx xxxxxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets the number of arguments to the expression tree node.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxx xxxxxx xx xxxxxxxxx xx xxx xxxxxxxxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of arguments to the expression tree node.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxxx xx xxx xxxxxxxxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The visitor to visit this node with.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxx xx xxxxx xxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The result of visiting this node.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the argument at index, throwing if index is out of bounds.</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxx xx xxxxx$ xxxxxxxx xx xxxxx xx xxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the argument.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The argument at index, throwing if index is out of bounds.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xx xxxxx$ xxxxxxxx xx xxxxx xx xxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Creates a new expression that is like this one, but using the supplied children.</source>
          <target state="new">$x$x$Xxxxxxx x xxx xxxxxxxxxx xxxx xx xxxx xxxx xxx$ xxx xxxxx xxx xxxxxxxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>If all of the children are the same, it will return this expression.&lt;/p&gt;\n</source>
          <target state="new">Xx xxx xx xxx xxxxxxxx xxx xxx xxxx$ xx xxxx xxxxxx xxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;This expression if no children are changed or an expression with the updated children.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxxxxxxxxx xx xx xxxxxxxx xxx xxxxxxx xx xx xxxxxxxxxx xxxx xxx xxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit></group></body></file></xliff>
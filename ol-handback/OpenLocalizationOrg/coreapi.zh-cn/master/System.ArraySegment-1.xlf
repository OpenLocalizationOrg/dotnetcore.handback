<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="markdown" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" /></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Delimits a section of a one-dimensional array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx x xxxxxxx xx x xxx$xxxxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type of the elements in the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xx xxx xxxxxxxx xx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array to wrap.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array containing the range of elements to delimit.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xxxxxxxxxx xxx xxxxx xx xxxxxxxx xx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the first element in the range.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxx xxxxx xxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of elements in the range.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;offset&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is less than 0.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx $xx$xxxxx$$xx$ xx xxxx xxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;offset&lt;/em&gt; and &lt;em&gt;count&lt;/em&gt; do not specify a valid range in &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xxx $xx$xxxxx$$xx$ xx xxx xxxxxxx x xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets the original array containing the range of elements that the array segment delimits.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxx xxxxxxxx xxxxx xxxxxxxxxx xxx xxxxx xx xxxxxxxx xxxx xxx xxxxx xxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets the number of elements in the range delimited by the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxx xxxxxx xx xxxxxxxx xx xxx xxxxx xxxxxxxxx xx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets the position of the first element in the range delimited by the array segment, relative to the start of the original array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxx xxxxxxxx xx xxx xxxxx xxxxxxx xx xxx xxxxx xxxxxxxxx xx xxx xxxxx xxxxxxx$ xxxxxxxx xx xxx xxxxx xx xxx xxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets a value that indicates whether the array segment  is read-only.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx x xxxxx xxxx xxxxxxxxx xxxxxxx xxx xxxxx xxxxxxx  xx xxxx$xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the array segment is read-only; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxx xxxxxxx xx xxxx$xxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets or sets the element at the specified index.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xx xxxx xxx xxxxxxx xx xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the element to get or set.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxx xxxxxxx xx xxx xx xxx.$$x$$x</target>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The element at the specified index.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxx xx xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The property is set and the array segment is read-only.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xx xxx xxx xxx xxxxx xxxxxxx xx xxxx$xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets the element at the specified index of the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxx xxxxxxx xx xxx xxxxxxxxx xxxxx xx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the element to get.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxx xxxxxxx xx xxx.$$x$$x</target>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The element at the specified index.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxx xx xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The property is set.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxx xx xxx.$$x$$x</target>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The structure to compare with the current instance.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xx xxxxxxx xxxx xxx xxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Determines whether the specified object is equal to the current instance.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxxx xxxxxxx xxx xxxxxxxxx xxxxxx xx xxxxx xx xxx xxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to be compared with the current instance.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xx xxxxxxxx xxxx xxx xxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the hash code for the current instance.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxx xxxx xxx xxx xxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The  structure on the left side of the equality operator.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx  xxxxxxxxx xx xxx xxxx xxxx xx xxx xxxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The structure on the right side of the equality operator.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xx xxx xxxxx xxxx xx xxx xxxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;a&lt;/em&gt; is equal to &lt;em&gt;b&lt;/em&gt;; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$x$$xx$ xx xxxxx xx $xx$x$$xx$$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The structure on the left side of the inequality operator.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xx xxx xxxx xxxx xx xxx xxxxxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The structure on the right side of the inequality operator.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xx xxx xxxxx xxxx xx xxx xxxxxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;a&lt;/em&gt; is not equal to &lt;em&gt;b&lt;/em&gt;; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$x$$xx$ xx xxx xxxxx xx $xx$x$$xx$$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Adds an item to the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xx xxxx xx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to add to the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxx xx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array segment is read-only.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xxxxxxx xx xxxx$xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Removes all items from the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxx xxxx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array segment is read-only.</source>
          <target state="new">$x$x$Xxx xxxxx xxxxxxx xx xxxx$xxxx.</target>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Determines whether the array segment contains a specific value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxxx xxxxxxx xxx xxxxx xxxxxxx xxxxxxxx x xxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;item&lt;/em&gt; is found in the array segment; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$xxxx$$xx$ xx xxxxx xx xxx xxxxx xxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Copies the elements of the array segment to an array, starting at the specified array index.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxxxxxx xx xxx xxxxx xxxxxxx xx xx xxxxx$ xxxxxxxx xx xxx xxxxxxxxx xxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The one-dimensional array that is the destination of the elements copied from the array segment.</source>
          <target state="new">$x$x$Xxx xxx$xxxxxxxxxxx xxxxx xxxx xx xxx xxxxxxxxxxx xx xxx xxxxxxxx xxxxxx xxxx xxx xxxxx xxxxxxx.</target>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>The array must have zero-based indexing.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxx xxxx xxxx xxxx$xxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index in &lt;em&gt;array&lt;/em&gt; at which copying begins.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx $xx$xxxxx$$xx$ xx xxxxx xxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;arrayIndex&lt;/em&gt; is less than 0.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxx xxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;array&lt;/em&gt; is multidimensional.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;The number of elements in the source array segment is greater than the available space from &lt;em&gt;arrayIndex&lt;/em&gt; to the end of the destination &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;Type &lt;em&gt;T&lt;/em&gt; cannot be cast automatically to the type of the destination &lt;em&gt;array&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxxxxxxxxxxx.$$x$$x$x$$xx$$$x$$x$x$Xxx xxxxxx xx xxxxxxxx xx xxx xxxxxx xxxxx xxxxxxx xx xxxxxxx xxxx xxx xxxxxxxxx xxxxx xxxx $xx$xxxxxXxxxx$$xx$ xx xxx xxx xx xxx xxxxxxxxxxx $xx$xxxxx$$xx$.$$x$$x$x$$xx$$$x$$x$x$Xxxx $xx$X$$xx$ xxxxxx xx xxxx xxxxxxxxxxxxx xx xxx xxxx xx xxx xxxxxxxxxxx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Removes the first occurrence of a specific object from the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxx xxxxxxxxxx xx x xxxxxxxx xxxxxx xxxx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to remove from the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xxxx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;item&lt;/em&gt; was successfully removed from the array segment; otherwise, &lt;strong&gt;false&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$xxxx$$xx$ xxx xxxxxxxxxxxx xxxxxxx xxxx xxx xxxxx xxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>This method also returns &lt;strong&gt;false&lt;/strong&gt; if &lt;em&gt;item&lt;/em&gt; is not found in the array segment.&lt;/p&gt;\n</source>
          <target state="new">Xxxx xxxxxx xxxx xxxxxxx $xxxxxx$xxxxx$$xxxxxx$ xx $xx$xxxx$$xx$ xx xxx xxxxx xx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array segment is read-only.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xxxxxxx xx xxxx$xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns an enumerator that iterates through the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xx xxxxxxxxxx xxxx xxxxxxxx xxxxxxx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An enumerator that can be used to iterate through the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxxxxxx xxxx xxx xx xxxx xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Determines the index of a specific item in the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxxx xxx xxxxx xx x xxxxxxxx xxxx xx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to locate in the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of &lt;em&gt;item&lt;/em&gt; if found in the list; otherwise, -1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xx $xx$xxxx$$xx$ xx xxxxx xx xxx xxxx$ xxxxxxxxx$ $0.$$x$$x</target>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Inserts an item into the array segment at the specified index.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xx xxxx xxxx xxx xxxxx xxxxxxx xx xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index at which &lt;em&gt;item&lt;/em&gt; should be inserted.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxxxx $xx$xxxx$$xx$ xxxxxx xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to insert into the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xxxx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is not a valid index in the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx x xxxxx xxxxx xx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array segment is read-only.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xxxxxxx xx xxxx$xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Removes the array segment item at the specified index.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxx xxxxxxx xxxx xx xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The zero-based index of the item to remove.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx$xxxxx xxxxx xx xxx xxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; is not a valid index in the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxx x xxxxx xxxxx xx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array segment is read-only.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxx xxxxxxx xx xxxx$xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns an enumerator that iterates through an array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xx xxxxxxxxxx xxxx xxxxxxxx xxxxxxx xx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An enumerator that can be used to iterate through the array segment.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxxxxxx xxxx xxx xx xxxx xx xxxxxxx xxxxxxx xxx xxxxx xxxxxxx.$$x$$x</target>
        </trans-unit></group></body></file></xliff>
<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="markdown" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" /></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Represents a writer that can write a sequential series of characters.</source>
          <target state="new">$x$x$Xxxxxxxxxx x xxxxxx xxxx xxx xxxxx x xxxxxxxxxx xxxxxx xx xxxxxxxxxx.</target>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>This class is abstract.&lt;/p&gt;\n</source>
          <target state="new">Xxxx xxxxx xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Stores the newline characters used for this &lt;strong&gt;TextWriter&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxxxxx xxxxxxxxxx xxxx xxx xxxx $xxxxxx$XxxxXxxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides a &lt;strong&gt;TextWriter&lt;/strong&gt; with no backing store that can be written to, but not read from.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx x $xxxxxx$XxxxXxxxxx$$xxxxxx$ xxxx xx xxxxxxx xxxxx xxxx xxx xx xxxxxxx xx$ xxx xxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;When overridden in a derived class, returns the character encoding in which the output is written.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxxxxxxxxx xx x xxxxxxx xxxxx$ xxxxxxx xxx xxxxxxxxx xxxxxxxx xx xxxxx xxx xxxxxx xx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character encoding in which the output is written.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxxxxx xx xxxxx xxx xxxxxx xx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets an object that controls formatting.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xx xxxxxx xxxx xxxxxxxx xxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Gets or sets the line terminator string used by the current &lt;strong&gt;TextWriter&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xx xxxx xxx xxxx xxxxxxxxxx xxxxxx xxxx xx xxx xxxxxxx $xxxxxx$XxxxXxxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The line terminator string for the current &lt;strong&gt;TextWriter&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xxxxxxxxxx xxxxxx xxx xxx xxxxxxx $xxxxxx$XxxxXxxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; to release both managed and unmanaged resources; &lt;strong&gt;false&lt;/strong&gt; to release only unmanaged resources.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxxxxxx xxxx xxxxxxx xxx xxxxxxxxx xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$ xx xxxxxxx xxxx xxxxxxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Clears all buffers for the current writer and causes any buffered data to be written to the underlying device.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxxxxx xxx xxx xxxxxxx xxxxxx xxx xxxxxx xxx xxxxxxxx xxxx xx xx xxxxxxx xx xxx xxxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Asynchronously clears all buffers for the current writer and causes any buffered data to be written to the underlying device.</source>
          <target state="new">$x$x$Xxxxxxxxxxxxxx xxxxxx xxx xxxxxxx xxx xxx xxxxxxx xxxxxx xxx xxxxxx xxx xxxxxxxx xxxx xx xx xxxxxxx xx xxx xxxxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A task that represents the asynchronous flush operation.</source>
          <target state="new">$x$x$X xxxx xxxx xxxxxxxxxx xxx xxxxxxxxxxxx xxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is disposed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The writer is currently in use by a previous write operation.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxxx xx xxx xx x xxxxxxxx xxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of a &lt;strong&gt;Boolean&lt;/strong&gt; value to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx x $xxxxxx$Xxxxxxx$$xxxxxx$ xxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;strong&gt;Boolean&lt;/strong&gt; value to write.</source>
          <target state="new">$x$x$Xxx $xxxxxx$Xxxxxxx$$xxxxxx$ xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes a character to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx x xxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character to write to the text stream.</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xx xxxxx xx xxx xxxx xxxxxx.</target>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes a character array to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx x xxxxxxxxx xxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character array to write to the text stream.</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx xx xxxxx xx xxx xxxx xxxxxx.</target>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes a subarray of characters to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx x xxxxxxxx xx xxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character array to write data from.</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx xx xxxxx xxxx xxxx.</target>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character position in the buffer at which to start retrieving data.</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxxxxx xx xxx xxxxxx xx xxxxx xx xxxxx xxxxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of characters to write.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The buffer length minus &lt;em&gt;index&lt;/em&gt; is less than &lt;em&gt;count&lt;/em&gt;.</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxx xxxxx $xx$xxxxx$$xx$ xx xxxx xxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;buffer&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$Xxx $xx$xxxxxx$$xx$ xxxxxxxxx xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xx$xxxxx$$xx$ xx xxxxxxxx.</target>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of a decimal value to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx x xxxxxxx xxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The decimal value to write.</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of an 8-byte floating-point value to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx xx 0$xxxx xxxxxxxx$xxxxx xxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-byte floating-point value to write.</source>
          <target state="new">$x$x$Xxx 0$xxxx xxxxxxxx$xxxxx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of a 4-byte signed integer to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx x 0$xxxx xxxxxx xxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 4-byte signed integer to write.</source>
          <target state="new">$x$x$Xxx 0$xxxx xxxxxx xxxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of an 8-byte signed integer to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx xx 0$xxxx xxxxxx xxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-byte signed integer to write.</source>
          <target state="new">$x$x$Xxx 0$xxxx xxxxxx xxxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of an object to the text string or stream by calling the &lt;strong&gt;ToString&lt;/strong&gt; method on that object.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx xx xxxxxx xx xxx xxxx xxxxxx xx xxxxxx xx xxxxxxx xxx $xxxxxx$XxXxxxxx$$xxxxxx$ xxxxxx xx xxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to write.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="173" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="174" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="175" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of a 4-byte floating-point value to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx x 0$xxxx xxxxxxxx$xxxxx xxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="176" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 4-byte floating-point value to write.</source>
          <target state="new">$x$x$Xxx 0$xxxx xxxxxxxx$xxxxx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="177" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="178" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="179" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="180" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes a string to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx x xxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="181" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string to write.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="182" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="183" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="184" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="185" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A composite format string (see Remarks).</source>
          <target state="new">$x$x$X xxxxxxxxx xxxxxx xxxxxx $xxx Xxxxxxx$.</target>
        </trans-unit><trans-unit id="186" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="187" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to format and write.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xxx xxxxx.</target>
        </trans-unit><trans-unit id="188" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="189" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;format&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="190" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="191" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="192" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="193" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;format&lt;/em&gt; is not a valid composite format string.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one).</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx xxx x xxxxx xxxxxxxxx xxxxxx xxxxxx.$$x$$x$x$$xx$ $$x$$x$x$Xxx xxxxx xx x xxxxxx xxxx xx xxxx xxxx 0 $xxxx$$ xx xxxxxxx xxxx xx xxxxx xx xxx xxxxxx xx xxxxxxx xx xx xxxxxxxxx $xxxxx$ xxx xxxx xxxxxx xxxxxxxx$ xx xxx$.</target>
        </trans-unit><trans-unit id="194" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="195" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A composite format string (see Remarks).</source>
          <target state="new">$x$x$X xxxxxxxxx xxxxxx xxxxxx $xxx Xxxxxxx$.</target>
        </trans-unit><trans-unit id="196" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="197" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The first object to format and write.</source>
          <target state="new">$x$x$Xxx xxxxx xxxxxx xx xxxxxx xxx xxxxx.</target>
        </trans-unit><trans-unit id="198" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="199" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The second object to format and write.</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxx xx xxxxxx xxx xxxxx.</target>
        </trans-unit><trans-unit id="200" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="201" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;format&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="202" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="203" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="204" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="205" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;format&lt;/em&gt; is not a valid composite format string.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The index of a format item is less than 0 (zero) or greater than or equal to the number of objects to be formatted (which, for this method overload, is two).</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx xxx x xxxxx xxxxxxxxx xxxxxx xxxxxx.$$x$$x$x$$xx$ $$x$$x$x$Xxx xxxxx xx x xxxxxx xxxx xx xxxx xxxx 0 $xxxx$ xx xxxxxxx xxxx xx xxxxx xx xxx xxxxxx xx xxxxxxx xx xx xxxxxxxxx $xxxxx$ xxx xxxx xxxxxx xxxxxxxx$ xx xxx$.</target>
        </trans-unit><trans-unit id="206" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="207" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A composite format string (see Remarks).</source>
          <target state="new">$x$x$X xxxxxxxxx xxxxxx xxxxxx $xxx Xxxxxxx$.</target>
        </trans-unit><trans-unit id="208" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="209" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The first object to format and write.</source>
          <target state="new">$x$x$Xxx xxxxx xxxxxx xx xxxxxx xxx xxxxx.</target>
        </trans-unit><trans-unit id="210" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="211" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The second object to format and write.</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxx xx xxxxxx xxx xxxxx.</target>
        </trans-unit><trans-unit id="212" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="213" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The third object to format and write.</source>
          <target state="new">$x$x$Xxx xxxxx xxxxxx xx xxxxxx xxx xxxxx.</target>
        </trans-unit><trans-unit id="214" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="215" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;format&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="216" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="217" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="218" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="219" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;format&lt;/em&gt; is not a valid composite format string.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three).</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx xxx x xxxxx xxxxxxxxx xxxxxx xxxxxx.$$x$$x$x$$xx$ $$x$$x$x$Xxx xxxxx xx x xxxxxx xxxx xx xxxx xxxx 0 $xxxx$$ xx xxxxxxx xxxx xx xxxxx xx xxx xxxxxx xx xxxxxxx xx xx xxxxxxxxx $xxxxx$ xxx xxxx xxxxxx xxxxxxxx$ xx xxxxx$.</target>
        </trans-unit><trans-unit id="220" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="221" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A composite format string (see Remarks).</source>
          <target state="new">$x$x$X xxxxxxxxx xxxxxx xxxxxx $xxx Xxxxxxx$.</target>
        </trans-unit><trans-unit id="222" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="223" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object array that contains zero or more objects to format and write.</source>
          <target state="new">$x$x$Xx xxxxxx xxxxx xxxx xxxxxxxx xxxx xx xxxx xxxxxxx xx xxxxxx xxx xxxxx.</target>
        </trans-unit><trans-unit id="224" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="225" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;format&lt;/em&gt; or &lt;em&gt;arg&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx $xx$xxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="226" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="227" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="228" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="229" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;format&lt;/em&gt; is not a valid composite format string.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The index of a format item is less than 0 (zero), or greater than or equal to the length of the &lt;em&gt;arg&lt;/em&gt; array.</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx xxx x xxxxx xxxxxxxxx xxxxxx xxxxxx.$$x$$x$x$$xx$ $$x$$x$x$Xxx xxxxx xx x xxxxxx xxxx xx xxxx xxxx 0 $xxxx$$ xx xxxxxxx xxxx xx xxxxx xx xxx xxxxxx xx xxx $xx$xxx$$xx$ xxxxx.</target>
        </trans-unit><trans-unit id="230" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="231" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of a 4-byte unsigned integer to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx x 0$xxxx xxxxxxxx xxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="232" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 4-byte unsigned integer to write.</source>
          <target state="new">$x$x$Xxx 0$xxxx xxxxxxxx xxxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="233" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="234" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="235" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="236" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of an 8-byte unsigned integer to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx xx 0$xxxx xxxxxxxx xxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="237" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-byte unsigned integer to write.</source>
          <target state="new">$x$x$Xxx 0$xxxx xxxxxxxx xxxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="238" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="239" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="240" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="241" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes a character to the text string or stream asynchronously.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx x xxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="242" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character to write to the text stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xx xxxxx xx xxx xxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="243" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxx xxxx xxxxxxxxxx xxx xxxxxxxxxxxx xxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="244" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is disposed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="245" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is currently in use by a previous write operation.</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxxx xx xxx xx x xxxxxxxx xxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="246" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="247" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes a character array to the text string or stream asynchronously.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx x xxxxxxxxx xxxxx xx xxx xxxx xxxxxx xx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="248" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character array to write to the text stream.</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx xx xxxxx xx xxx xxxx xxxxxx.</target>
        </trans-unit><trans-unit id="249" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, nothing is written.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxxxxxx xx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="250" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxx xxxx xxxxxxxxxx xxx xxxxxxxxxxxx xxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="251" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is disposed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="252" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is currently in use by a previous write operation.</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxxx xx xxx xx x xxxxxxxx xxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="253" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="254" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes a subarray of characters to the text string or stream asynchronously.</source>
          <target state="new">$x$x$Xxxxxx x xxxxxxxx xx xxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx xxxxxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="255" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="256" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character array to write data from.</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx xx xxxxx xxxx xxxx.</target>
        </trans-unit><trans-unit id="257" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="258" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character position in the buffer at which to start retrieving data.</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxxxxx xx xxx xxxxxx xx xxxxx xx xxxxx xxxxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="259" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="260" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of characters to write.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="261" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="262" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxx xxxx xxxxxxxxxx xxx xxxxxxxxxxxx xxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="263" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="264" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;index&lt;/em&gt; plus &lt;em&gt;count&lt;/em&gt; is greater than the buffer length.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx $xx$xxxxx$$xx$ xxxx $xx$xxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="265" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xx$xxxxx$$xx$ xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="266" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is disposed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="267" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is currently in use by a previous write operation.</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxxx xx xxx xx x xxxxxxxx xxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="268" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="269" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes a string to the text string or stream asynchronously.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx x xxxxxx xx xxx xxxx xxxxxx xx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="270" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string to write.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="271" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, nothing is written to the text stream.&lt;/p&gt;\n</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxxxxxx xx xxxxxxx xx xxx xxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="272" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A task that represents the asynchronous write operation.</source>
          <target state="new">$x$x$X xxxx xxxx xxxxxxxxxx xxx xxxxxxxxxxxx xxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="273" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="274" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is disposed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="275" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is currently in use by a previous write operation.</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxxx xx xxx xx x xxxxxxxx xxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="276" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="277" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes a line terminator to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx x xxxx xxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="278" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="279" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="280" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of a &lt;strong&gt;Boolean&lt;/strong&gt; value followed by a line terminator to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx x $xxxxxx$Xxxxxxx$$xxxxxx$ xxxxx xxxxxxxx xx x xxxx xxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="281" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;strong&gt;Boolean&lt;/strong&gt; value to write.</source>
          <target state="new">$x$x$Xxx $xxxxxx$Xxxxxxx$$xxxxxx$ xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="282" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="283" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="284" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="285" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes a character followed by a line terminator to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx x xxxxxxxxx xxxxxxxx xx x xxxx xxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="286" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character to write to the text stream.</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xx xxxxx xx xxx xxxx xxxxxx.</target>
        </trans-unit><trans-unit id="287" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="288" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="289" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="290" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes an array of characters followed by a line terminator to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xx xxxxx xx xxxxxxxxxx xxxxxxxx xx x xxxx xxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="291" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character array from which data is read.</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx xxxx xxxxx xxxx xx xxxx.</target>
        </trans-unit><trans-unit id="292" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="293" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="294" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="295" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes a subarray of characters followed by a line terminator to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx x xxxxxxxx xx xxxxxxxxxx xxxxxxxx xx x xxxx xxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="296" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character array from which data is read.</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx xxxx xxxxx xxxx xx xxxx.</target>
        </trans-unit><trans-unit id="297" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="298" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character position in &lt;em&gt;buffer&lt;/em&gt; at which to start reading data.</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxxxxx xx $xx$xxxxxx$$xx$ xx xxxxx xx xxxxx xxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="299" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="300" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The maximum number of characters to write.</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxxxx xx xxxxxxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="301" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="302" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The buffer length minus &lt;em&gt;index&lt;/em&gt; is less than &lt;em&gt;count&lt;/em&gt;.</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxx xxxxx $xx$xxxxx$$xx$ xx xxxx xxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="303" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="304" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;buffer&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$Xxx $xx$xxxxxx$$xx$ xxxxxxxxx xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="305" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="306" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xx$xxxxx$$xx$ xx xxxxxxxx.</target>
        </trans-unit><trans-unit id="307" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="308" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="309" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="310" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of a decimal value followed by a line terminator to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx x xxxxxxx xxxxx xxxxxxxx xx x xxxx xxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="311" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The decimal value to write.</source>
          <target state="new">$x$x$Xxx xxxxxxx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="312" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="313" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="314" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="315" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of a 8-byte floating-point value followed by a line terminator to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx x 0$xxxx xxxxxxxx$xxxxx xxxxx xxxxxxxx xx x xxxx xxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="316" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-byte floating-point value to write.</source>
          <target state="new">$x$x$Xxx 0$xxxx xxxxxxxx$xxxxx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="317" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="318" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="319" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="320" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of a 4-byte signed integer followed by a line terminator to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx x 0$xxxx xxxxxx xxxxxxx xxxxxxxx xx x xxxx xxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="321" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 4-byte signed integer to write.</source>
          <target state="new">$x$x$Xxx 0$xxxx xxxxxx xxxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="322" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="323" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="324" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="325" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of an 8-byte signed integer followed by a line terminator to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx xx 0$xxxx xxxxxx xxxxxxx xxxxxxxx xx x xxxx xxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="326" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-byte signed integer to write.</source>
          <target state="new">$x$x$Xxx 0$xxxx xxxxxx xxxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="327" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="328" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="329" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="330" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of an object by calling the &lt;strong&gt;ToString&lt;/strong&gt; method on that object, followed by a line terminator to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx xx xxxxxx xx xxxxxxx xxx $xxxxxx$XxXxxxxx$$xxxxxx$ xxxxxx xx xxxx xxxxxx$ xxxxxxxx xx x xxxx xxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="331" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to write.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="332" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, only the line terminator is written.</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxxx xxx xxxx xxxxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="333" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="334" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="335" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="336" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of a 4-byte floating-point value followed by a line terminator to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx x 0$xxxx xxxxxxxx$xxxxx xxxxx xxxxxxxx xx x xxxx xxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="337" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 4-byte floating-point value to write.</source>
          <target state="new">$x$x$Xxx 0$xxxx xxxxxxxx$xxxxx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="338" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="339" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="340" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="341" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes a string followed by a line terminator to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx x xxxxxx xxxxxxxx xx x xxxx xxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="342" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string to write.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="343" translate="yes" xml:space="preserve">
          <source>If &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;, only the line terminator is written.</source>
          <target state="new">Xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$$ xxxx xxx xxxx xxxxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="344" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="345" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="346" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="347" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A composite format string (see Remarks).&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxxxxx xxxxxx xxxxxx $xxx Xxxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="348" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The object to format and write.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxx xxx xxxxx.</target>
        </trans-unit><trans-unit id="349" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="350" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;format&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="351" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="352" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="353" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="354" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;format&lt;/em&gt; is not a valid composite format string.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is one).</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx xxx x xxxxx xxxxxxxxx xxxxxx xxxxxx.$$x$$x$x$$xx$ $$x$$x$x$Xxx xxxxx xx x xxxxxx xxxx xx xxxx xxxx 0 $xxxx$$ xx xxxxxxx xxxx xx xxxxx xx xxx xxxxxx xx xxxxxxx xx xx xxxxxxxxx $xxxxx$ xxx xxxx xxxxxx xxxxxxxx$ xx xxx$.</target>
        </trans-unit><trans-unit id="355" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="356" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A composite format string (see Remarks).&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxxxxx xxxxxx xxxxxx $xxx Xxxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="357" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The first object to format and write.</source>
          <target state="new">$x$x$Xxx xxxxx xxxxxx xx xxxxxx xxx xxxxx.</target>
        </trans-unit><trans-unit id="358" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="359" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The second object to format and write.</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxx xx xxxxxx xxx xxxxx.</target>
        </trans-unit><trans-unit id="360" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="361" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;format&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="362" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="363" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="364" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="365" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;format&lt;/em&gt; is not a valid composite format string.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is two).</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx xxx x xxxxx xxxxxxxxx xxxxxx xxxxxx.$$x$$x$x$$xx$ $$x$$x$x$Xxx xxxxx xx x xxxxxx xxxx xx xxxx xxxx 0 $xxxx$$ xx xxxxxxx xxxx xx xxxxx xx xxx xxxxxx xx xxxxxxx xx xx xxxxxxxxx $xxxxx$ xxx xxxx xxxxxx xxxxxxxx$ xx xxx$.</target>
        </trans-unit><trans-unit id="366" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="367" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A composite format string (see Remarks).&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxxxxx xxxxxx xxxxxx $xxx Xxxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="368" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The first object to format and write.</source>
          <target state="new">$x$x$Xxx xxxxx xxxxxx xx xxxxxx xxx xxxxx.</target>
        </trans-unit><trans-unit id="369" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="370" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The second object to format and write.</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxx xx xxxxxx xxx xxxxx.</target>
        </trans-unit><trans-unit id="371" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="372" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The third object to format and write.</source>
          <target state="new">$x$x$Xxx xxxxx xxxxxx xx xxxxxx xxx xxxxx.</target>
        </trans-unit><trans-unit id="373" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="374" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;format&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="375" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="376" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="377" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="378" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;format&lt;/em&gt; is not a valid composite format string.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The index of a format item is less than 0 (zero), or greater than or equal to the number of objects to be formatted (which, for this method overload, is three).</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx xxx x xxxxx xxxxxxxxx xxxxxx xxxxxx.$$x$$x$x$$xx$ $$x$$x$x$Xxx xxxxx xx x xxxxxx xxxx xx xxxx xxxx 0 $xxxx$$ xx xxxxxxx xxxx xx xxxxx xx xxx xxxxxx xx xxxxxxx xx xx xxxxxxxxx $xxxxx$ xxx xxxx xxxxxx xxxxxxxx$ xx xxxxx$.</target>
        </trans-unit><trans-unit id="379" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="380" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A composite format string (see Remarks).&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxxxxx xxxxxx xxxxxx $xxx Xxxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="381" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object array that contains zero or more objects to format and write.</source>
          <target state="new">$x$x$Xx xxxxxx xxxxx xxxx xxxxxxxx xxxx xx xxxx xxxxxxx xx xxxxxx xxx xxxxx.</target>
        </trans-unit><trans-unit id="382" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="383" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string or object is passed in as &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$X xxxxxx xx xxxxxx xx xxxxxx xx xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="384" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="385" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="386" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="387" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;format&lt;/em&gt; is not a valid composite format string.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The index of a format item is less than 0 (zero), or greater than or equal to the length of the &lt;em&gt;arg&lt;/em&gt; array.</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx xxx x xxxxx xxxxxxxxx xxxxxx xxxxxx.$$x$$x$x$$xx$ $$x$$x$x$Xxx xxxxx xx x xxxxxx xxxx xx xxxx xxxx 0 $xxxx$$ xx xxxxxxx xxxx xx xxxxx xx xxx xxxxxx xx xxx $xx$xxx$$xx$ xxxxx.</target>
        </trans-unit><trans-unit id="388" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="389" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of a 4-byte unsigned integer followed by a line terminator to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx x 0$xxxx xxxxxxxx xxxxxxx xxxxxxxx xx x xxxx xxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="390" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 4-byte unsigned integer to write.</source>
          <target state="new">$x$x$Xxx 0$xxxx xxxxxxxx xxxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="391" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="392" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="393" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="394" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes the text representation of an 8-byte unsigned integer followed by a line terminator to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xxx xxxx xxxxxxxxxxxxxx xx xx 0$xxxx xxxxxxxx xxxxxxx xxxxxxxx xx x xxxx xxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="395" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The 8-byte unsigned integer to write.</source>
          <target state="new">$x$x$Xxx 0$xxxx xxxxxxxx xxxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="396" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="397" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An I/O error occurs.</source>
          <target state="new">$x$x$Xx X$X xxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="398" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="399" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes a line terminator asynchronously to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx x xxxx xxxxxxxxxx xxxxxxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="400" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A task that represents the asynchronous write operation.</source>
          <target state="new">$x$x$X xxxx xxxx xxxxxxxxxx xxx xxxxxxxxxxxx xxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="401" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="402" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is disposed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="403" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is currently in use by a previous write operation.</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxxx xx xxx xx x xxxxxxxx xxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="404" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="405" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes a character followed by a line terminator asynchronously to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx x xxxxxxxxx xxxxxxxx xx x xxxx xxxxxxxxxx xxxxxxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="406" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character to write to the text stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xx xxxxx xx xxx xxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="407" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxx xxxx xxxxxxxxxx xxx xxxxxxxxxxxx xxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="408" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is disposed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="409" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is currently in use by a previous write operation.</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxxx xx xxx xx x xxxxxxxx xxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="410" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="411" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes an array of characters followed by a line terminator asynchronously to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx xx xxxxx xx xxxxxxxxxx xxxxxxxx xx x xxxx xxxxxxxxxx xxxxxxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="412" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character array to write to the text stream.</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx xx xxxxx xx xxx xxxx xxxxxx.</target>
        </trans-unit><trans-unit id="413" translate="yes" xml:space="preserve">
          <source>If the character array is &lt;strong&gt;null&lt;/strong&gt;, only the line terminator is written.</source>
          <target state="new">Xx xxx xxxxxxxxx xxxxx xx $xxxxxx$xxxx$$xxxxxx$$ xxxx xxx xxxx xxxxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="414" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="415" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxx xxxx xxxxxxxxxx xxx xxxxxxxxxxxx xxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="416" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is disposed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="417" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is currently in use by a previous write operation.</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxxx xx xxx xx x xxxxxxxx xxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="418" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="419" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes a subarray of characters followed by a line terminator asynchronously to the text string or stream.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxx x xxxxxxxx xx xxxxxxxxxx xxxxxxxx xx x xxxx xxxxxxxxxx xxxxxxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="420" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character array to write data from.</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx xx xxxxx xxxx xxxx.</target>
        </trans-unit><trans-unit id="421" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="422" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The character position in the buffer at which to start retrieving data.</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxxxxx xx xxx xxxxxx xx xxxxx xx xxxxx xxxxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="423" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="424" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of characters to write.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="425" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="426" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxx xxxx xxxxxxxxxx xxx xxxxxxxxxxxx xxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="427" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;buffer&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="428" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;index&lt;/em&gt; plus &lt;em&gt;count&lt;/em&gt; is greater than the buffer length.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx $xx$xxxxx$$xx$ xxxx $xx$xxxxx$$xx$ xx xxxxxxx xxxx xxx xxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="429" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;index&lt;/em&gt; or &lt;em&gt;count&lt;/em&gt; is negative.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xx$xxxxx$$xx$ xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="430" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is disposed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="431" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is currently in use by a previous write operation.</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxxx xx xxx xx x xxxxxxxx xxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="432" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="433" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Writes a string followed by a line terminator asynchronously to the text string or stream.</source>
          <target state="new">$x$x$Xxxxxx x xxxxxx xxxxxxxx xx x xxxx xxxxxxxxxx xxxxxxxxxxxxxx xx xxx xxxx xxxxxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="434" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="435" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string to write.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="436" translate="yes" xml:space="preserve">
          <source>If the value is &lt;strong&gt;null&lt;/strong&gt;, only a line terminator is written.</source>
          <target state="new">Xx xxx xxxxx xx $xxxxxx$xxxx$$xxxxxx$$ xxxx x xxxx xxxxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="437" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="438" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A task that represents the asynchronous write operation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxx xxxx xxxxxxxxxx xxx xxxxxxxxxxxx xxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="439" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is disposed.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="440" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The text writer is currently in use by a previous write operation.</source>
          <target state="new">$x$x$Xxx xxxx xxxxxx xx xxxxxxxxx xx xxx xx x xxxxxxxx xxxxx xxxxxxxxx.</target>
        </trans-unit><trans-unit id="441" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit></group></body></file></xliff>
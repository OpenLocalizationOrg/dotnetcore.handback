<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="markdown" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" /></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Provides the base class for enumerations.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxx xxxxx xxx xxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Compares this instance to a specified object and returns an indication of their relative values.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxxx xxxxxxxx xx x xxxxxxxxx xxxxxx xxx xxxxxxx xx xxxxxxxxxx xx xxxxx xxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object to compare, or &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$Xx xxxxxx xx xxxxxxx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A signed number that indicates the relative values of this instance and &lt;em&gt;target&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;Value &lt;/p&gt;\n&lt;p&gt;Meaning &lt;/p&gt;\n&lt;table&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td&gt;\n&lt;p&gt;Less than zero &lt;/p&gt;\n&lt;/td&gt;&lt;td&gt;\n&lt;p&gt;The value of this instance is less than the value of &lt;em&gt;target&lt;/em&gt;.</source>
          <target state="new">$x$x$X xxxxxx xxxxxx xxxx xxxxxxxxx xxx xxxxxxxx xxxxxx xx xxxx xxxxxxxx xxx $xx$xxxxxx$$xx$.$$x$$x$x$Xxxxx $$x$$x$x$Xxxxxxx $$x$$x$xxxxx$$xxxxx$$xx$$xx$$x$x$Xxxx xxxx xxxx $$x$$x$$xx$$xx$$x$x$Xxx xxxxx xx xxxx xxxxxxxx xx xxxx xxxx xxx xxxxx xx $xx$xxxxxx$$xx$.</target>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\n&lt;p&gt;Zero &lt;/p&gt;\n&lt;/td&gt;&lt;td&gt;\n&lt;p&gt;The value of this instance is equal to the value of &lt;em&gt;target&lt;/em&gt;.</source>
          <target state="new">$$x$$x$$xx$$$xx$$xx$$xx$$x$x$Xxxx $$x$$x$$xx$$xx$$x$x$Xxx xxxxx xx xxxx xxxxxxxx xx xxxxx xx xxx xxxxx xx $xx$xxxxxx$$xx$.</target>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td&gt;\n&lt;p&gt;Greater than zero &lt;/p&gt;\n&lt;/td&gt;&lt;td&gt;\n&lt;p&gt;The value of this instance is greater than the value of &lt;em&gt;target&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;target&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$$x$$x$$xx$$$xx$$xx$$xx$$x$x$Xxxxxxx xxxx xxxx $$x$$x$$xx$$xx$$x$x$Xxx xxxxx xx xxxx xxxxxxxx xx xxxxxxx xxxx xxx xxxxx xx $xx$xxxxxx$$xx$.$$x$$x$x$$xx$ $$x$$x$x$$x$xx$xxxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;\n</source>
          <target state="new">$$x$$x$$xx$$$xx$$$xxxxx$$$xxxxx$$x</target>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;target&lt;/em&gt; and this instance are not the same type.</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xxx xxxx xxxxxxxx xxx xxx xxx xxxx xxxx.</target>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns a value indicating whether this instance is equal to a specified object.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx x xxxxx xxxxxxxxxx xxxxxxx xxxx xxxxxxxx xx xxxxx xx x xxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object to compare with this instance, or &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$Xx xxxxxx xx xxxxxxx xxxx xxxx xxxxxxxx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if &lt;em&gt;obj&lt;/em&gt; is an enumeration value of the same type and with the same underlying value as this instance; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx $xx$xxx$$xx$ xx xx xxxxxxxxxxx xxxxx xx xxx xxxx xxxx xxx xxxx xxx xxxx xxxxxxxxxx xxxxx xx xxxx xxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified value of a specified enumerated type to its equivalent string representation according to the specified format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxx xx x xxxxxxxxx xxxxxxxxxx xxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx xxxxxxxxx xx xxx xxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The enumeration type of the value to convert.</source>
          <target state="new">$x$x$Xxx xxxxxxxxxxx xxxx xx xxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value to convert.</source>
          <target state="new">$x$x$Xxx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The output format to use.</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxx xx xxx.</target>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string representation of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx xxxxxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;enumType&lt;/em&gt;, &lt;em&gt;value&lt;/em&gt;, or &lt;em&gt;format&lt;/em&gt; parameter is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$Xxx $xx$xxxxXxxx$$xx$$ $xx$xxxxx$$xx$$ xx $xx$xxxxxx$$xx$ xxxxxxxxx xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The &lt;em&gt;format&lt;/em&gt; parameter contains an invalid value.</source>
          <target state="new">$x$x$Xxx $xx$xxxxxx$$xx$ xxxxxxxxx xxxxxxxx xx xxxxxxx xxxxx.</target>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the hash code for the value of this instance.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxx xxxx xxx xxx xxxxx xx xxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer hash code.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Retrieves the name of the constant in the specified enumeration that has the specified value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxx xxx xxxx xx xxx xxxxxxxx xx xxx xxxxxxxxx xxxxxxxxxxx xxxx xxx xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An enumeration type.</source>
          <target state="new">$x$x$Xx xxxxxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value of a particular enumerated constant in terms of its underlying type.</source>
          <target state="new">$x$x$Xxx xxxxx xx x xxxxxxxxxx xxxxxxxxxx xxxxxxxx xx xxxxx xx xxx xxxxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string containing the name of the enumerated constant in &lt;em&gt;enumType&lt;/em&gt; whose value is &lt;em&gt;value&lt;/em&gt;; or &lt;strong&gt;null&lt;/strong&gt; if no such constant is found.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx xxxxxxxxxx xxx xxxx xx xxx xxxxxxxxxx xxxxxxxx xx $xx$xxxxXxxx$$xx$ xxxxx xxxxx xx $xx$xxxxx$$xx$$ xx $xxxxxx$xxxx$$xxxxxx$ xx xx xxxx xxxxxxxx xx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;enumType&lt;/em&gt; or &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Retrieves an array of the names of the constants in a specified enumeration.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxx xx xxxxx xx xxx xxxxx xx xxx xxxxxxxxx xx x xxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An enumeration type.</source>
          <target state="new">$x$x$Xx xxxxxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string array of the names of the constants in &lt;em&gt;enumType&lt;/em&gt;.</source>
          <target state="new">$x$x$X xxxxxx xxxxx xx xxx xxxxx xx xxx xxxxxxxxx xx $xx$xxxxXxxx$$xx$.</target>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;enumType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the underlying type of the specified enumeration.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxxx xxxx xx xxx xxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The enumeration whose underlying type will be retrieved.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxxxx xxxxx xxxxxxxxxx xxxx xxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The underlying type of &lt;em&gt;enumType&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxxx xxxx xx $xx$xxxxXxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;enumType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Retrieves an array of the values of the constants in a specified enumeration.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxx xx xxxxx xx xxx xxxxxx xx xxx xxxxxxxxx xx x xxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An enumeration type.</source>
          <target state="new">$x$x$Xx xxxxxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array that contains the values of the constants in &lt;em&gt;enumType&lt;/em&gt;.</source>
          <target state="new">$x$x$Xx xxxxx xxxx xxxxxxxx xxx xxxxxx xx xxx xxxxxxxxx xx $xx$xxxxXxxx$$xx$.</target>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;enumType&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The method is invoked by reflection in a reflection-only context, &lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;enumType&lt;/em&gt; is a type from an assembly loaded in a reflection-only context.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxx xx xxxxxxxxxx xx x xxxxxxxxxx$xxxx xxxxxxx$ $$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxXxxx$$xx$ xx x xxxx xxxx xx xxxxxxxx xxxxxx xx x xxxxxxxxxx$xxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Determines whether one or more bit fields are set in the current instance.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxxxx xxxxxxx xxx xx xxxx xxx xxxxxx xxx xxx xx xxx xxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An enumeration value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the bit field or bit fields that are set in &lt;em&gt;flag&lt;/em&gt; are also set in the current instance; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxx xxxxx xx xxx xxxxxx xxxx xxx xxx xx $xx$xxxx$$xx$ xxx xxxx xxx xx xxx xxxxxxx xxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;flag&lt;/em&gt; is a different type than the current instance.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxx$$xx$ xx x xxxxxxxxx xxxx xxxx xxx xxxxxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns an indication whether a constant with a specified value exists in a specified enumeration.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xx xxxxxxxxxx xxxxxxx x xxxxxxxx xxxx x xxxxxxxxx xxxxx xxxxxx xx x xxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An enumeration type.</source>
          <target state="new">$x$x$Xx xxxxxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value or name of a constant in &lt;em&gt;enumType&lt;/em&gt;.</source>
          <target state="new">$x$x$Xxx xxxxx xx xxxx xx x xxxxxxxx xx $xx$xxxxXxxx$$xx$.</target>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if a constant in &lt;em&gt;enumType&lt;/em&gt; has a value equal to &lt;em&gt;value&lt;/em&gt;; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx x xxxxxxxx xx $xx$xxxxXxxx$$xx$ xxx x xxxxx xxxxx xx $xx$xxxxx$$xx$$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;enumType&lt;/em&gt; or &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;enumType&lt;/em&gt; is not an &lt;strong&gt;Enum&lt;/strong&gt;.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The type of &lt;em&gt;value&lt;/em&gt; is an enumeration, but it is not an enumeration of type &lt;em&gt;enumType&lt;/em&gt;.&lt;/p&gt;\n&lt;p&gt;-or- &lt;/p&gt;\n&lt;p&gt;The type of &lt;em&gt;value&lt;/em&gt; is not an underlying type of &lt;em&gt;enumType&lt;/em&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx xxx xx $xxxxxx$Xxxx$$xxxxxx$.$$x$$x$x$$xx$ $$x$$x$x$Xxx xxxx xx $xx$xxxxx$$xx$ xx xx xxxxxxxxxxx$ xxx xx xx xxx xx xxxxxxxxxxx xx xxxx $xx$xxxxXxxx$$xx$.$$x$$x$x$$xx$ $$x$$x$x$Xxx xxxx xx $xx$xxxxx$$xx$ xx xxx xx xxxxxxxxxx xxxx xx $xx$xxxxXxxx$$xx$.</target>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxx xxxxxxxxxxxxxx xx xxx xxxx xx xxxxxxx xxxxx xx xxx xx xxxx xxxxxxxxxx xxxxxxxxx xx xx xxxxxxxxxx xxxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An enumeration type.</source>
          <target state="new">$x$x$Xx xxxxxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="173" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="174" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string containing the name or value to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxxxxxxxx xxx xxxx xx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="175" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="176" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object of type &lt;em&gt;enumType&lt;/em&gt; whose value is represented by &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xx xxxx $xx$xxxxXxxx$$xx$ xxxxx xxxxx xx xxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="177" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;enumType&lt;/em&gt; or &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="178" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="179" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is outside the range of the underlying type of &lt;em&gt;enumType&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxx xxx xxxxx xx xxx xxxxxxxxxx xxxx xx $xx$xxxxXxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="180" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxx xxxxxxxxxxxxxx xx xxx xxxx xx xxxxxxx xxxxx xx xxx xx xxxx xxxxxxxxxx xxxxxxxxx xx xx xxxxxxxxxx xxxxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="181" translate="yes" xml:space="preserve">
          <source>A parameter specifies whether the operation is case-insensitive.&lt;/p&gt;\n</source>
          <target state="new">X xxxxxxxxx xxxxxxxxx xxxxxxx xxx xxxxxxxxx xx xxxx$xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="182" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An enumeration type.</source>
          <target state="new">$x$x$Xx xxxxxxxxxxx xxxx.</target>
        </trans-unit><trans-unit id="183" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="184" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A string containing the name or value to convert.</source>
          <target state="new">$x$x$X xxxxxx xxxxxxxxxx xxx xxxx xx xxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="185" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="186" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; to ignore case; &lt;strong&gt;false&lt;/strong&gt; to regard case.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxxxxx xxxx$ $xxxxxx$xxxxx$$xxxxxx$ xx xxxxxx xxxx.</target>
        </trans-unit><trans-unit id="187" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="188" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object of type &lt;em&gt;enumType&lt;/em&gt; whose value is represented by &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xx xxxx $xx$xxxxXxxx$$xx$ xxxxx xxxxx xx xxxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="189" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;enumType&lt;/em&gt; or &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="190" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="191" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is outside the range of the underlying type of &lt;em&gt;enumType&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx xxxxxxx xxx xxxxx xx xxx xxxxxxxxxx xxxx xx $xx$xxxxXxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="192" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the current value to a Boolean value based on the underlying type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxx xxxxx xx x Xxxxxxx xxxxx xxxxx xx xxx xxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="193" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="194" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;This member always throws an exception.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxxxxx xxxxxx xxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="195" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;In all cases.</source>
          <target state="new">$x$x$Xx xxx xxxxx.</target>
        </trans-unit><trans-unit id="196" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="197" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the current value to an 8-bit unsigned integer based on the underlying type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxx xxxxx xx xx 0$xxx xxxxxxxx xxxxxxx xxxxx xx xxx xxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="198" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="199" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The converted value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="200" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the current value to a Unicode character based on the underlying type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxx xxxxx xx x Xxxxxxx xxxxxxxxx xxxxx xx xxx xxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="201" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="202" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;This member always throws an exception.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxxxxx xxxxxx xxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="203" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;In all cases.</source>
          <target state="new">$x$x$Xx xxx xxxxx.</target>
        </trans-unit><trans-unit id="204" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="205" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="206" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;This member always throws an exception.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxxxxx xxxxxx xxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="207" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;In all cases.</source>
          <target state="new">$x$x$Xx xxx xxxxx.</target>
        </trans-unit><trans-unit id="208" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="209" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="210" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;This member always throws an exception.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxxxxx xxxxxx xxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="211" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;In all cases.</source>
          <target state="new">$x$x$Xx xxx xxxxx.</target>
        </trans-unit><trans-unit id="212" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="213" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the current value to a double-precision floating point number based on the underlying type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxx xxxxx xx x xxxxxx$xxxxxxxxx xxxxxxxx xxxxx xxxxxx xxxxx xx xxx xxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="214" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="215" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;This member always throws an exception.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxxxxx xxxxxx xxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="216" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;In all cases.</source>
          <target state="new">$x$x$Xx xxx xxxxx.</target>
        </trans-unit><trans-unit id="217" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="218" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the current value to a 16-bit signed integer based on the underlying type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxx xxxxx xx x 00$xxx xxxxxx xxxxxxx xxxxx xx xxx xxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="219" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="220" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The converted value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="221" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the current value to a 32-bit signed integer based on the underlying type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxx xxxxx xx x 00$xxx xxxxxx xxxxxxx xxxxx xx xxx xxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="222" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="223" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The converted value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="224" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the current value to a 64-bit signed integer based on the underlying type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxx xxxxx xx x 00$xxx xxxxxx xxxxxxx xxxxx xx xxx xxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="225" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="226" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The converted value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="227" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the current value to an 8-bit signed integer based on the underlying type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxx xxxxx xx xx 0$xxx xxxxxx xxxxxxx xxxxx xx xxx xxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="228" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="229" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The converted value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="230" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the current value to a single-precision floating-point number based on the underlying type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxx xxxxx xx x xxxxxx$xxxxxxxxx xxxxxxxx$xxxxx xxxxxx xxxxx xx xxx xxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="231" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="232" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;This member always throws an exception.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxx xxxxxx xxxxxx xxxxxx xx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="233" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;In all cases.</source>
          <target state="new">$x$x$Xx xxx xxxxx.</target>
        </trans-unit><trans-unit id="234" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="235" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the current value to a specified type based on the underlying type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxx xxxxx xx x xxxxxxxxx xxxx xxxxx xx xxx xxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="236" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The type to convert to.</source>
          <target state="new">$x$x$Xxx xxxx xx xxxxxxx xx.</target>
        </trans-unit><trans-unit id="237" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="238" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="239" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The converted value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="240" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the current value to a 16-bit unsigned integer based on the underlying type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxx xxxxx xx x 00$xxx xxxxxxxx xxxxxxx xxxxx xx xxx xxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="241" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="242" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The converted value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="243" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the current value to a 32-bit unsigned integer based on the underlying type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxx xxxxx xx x 00$xxx xxxxxxxx xxxxxxx xxxxx xx xxx xxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="244" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="245" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The converted value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="246" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the current value to a 64-bit unsigned integer based on the underlying type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxx xxxxx xx x 00$xxx xxxxxxxx xxxxxxx xxxxx xx xxx xxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="247" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An object that supplies culture-specific formatting information.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxx xxxx xxxxxxxx xxxxxxx$xxxxxxxx xxxxxxxxxx xxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="248" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The converted value.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="249" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified object with an integer value to an enumeration member.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx xxxx xx xxxxxxx xxxxx xx xx xxxxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="250" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The enumeration type to return.</source>
          <target state="new">$x$x$Xxx xxxxxxxxxxx xxxx xx xxxxxx.</target>
        </trans-unit><trans-unit id="251" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="252" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The value convert to an enumeration member.</source>
          <target state="new">$x$x$Xxx xxxxx xxxxxxx xx xx xxxxxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="253" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="254" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An enumeration object whose value is &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxxxxxxxx xxxxxx xxxxx xxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="255" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;enumType&lt;/em&gt; or &lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxXxxx$$xx$ xx $xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="256" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="257" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of this instance to its equivalent string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxxx xxxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="258" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of the value of this instance.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx xxx xxxxx xx xxxx xxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="259" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the value of this instance to its equivalent string representation using the specified format.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxx xx xxxx xxxxxxxx xx xxx xxxxxxxxxx xxxxxx xxxxxxxxxxxxxx xxxxx xxx xxxxxxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="260" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A format string.</source>
          <target state="new">$x$x$X xxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="261" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="262" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of the value of this instance as specified by &lt;em&gt;format&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx xxx xxxxx xx xxxx xxxxxxxx xx xxxxxxxxx xx $xx$xxxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="263" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;format&lt;/em&gt; contains an invalid specification.</source>
          <target state="new">$x$x$$x$xx$xxxxxx$$xx$ xxxxxxxx xx xxxxxxx xxxxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="264" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="265" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxx xxxxxxxxxxxxxx xx xxx xxxx xx xxxxxxx xxxxx xx xxx xx xxxx xxxxxxxxxx xxxxxxxxx xx xx xxxxxxxxxx xxxxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="266" translate="yes" xml:space="preserve">
          <source>The return value indicates whether the conversion succeeded.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxx xxxxx xxxxxxxxx xxxxxxx xxx xxxxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="267" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of the enumeration name or underlying value to convert.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx xxx xxxxxxxxxxx xxxx xx xxxxxxxxxx xxxxx xx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="268" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;When this method returns, &lt;em&gt;result&lt;/em&gt; contains an object of type &lt;em&gt;TEnum&lt;/em&gt; whose value is represented by &lt;em&gt;value&lt;/em&gt; if the parse operation succeeds.</source>
          <target state="new">$x$x$Xxxx xxxx xxxxxx xxxxxxx$ $xx$xxxxxx$$xx$ xxxxxxxx xx xxxxxx xx xxxx $xx$XXxxx$$xx$ xxxxx xxxxx xx xxxxxxxxxxx xx $xx$xxxxx$$xx$ xx xxx xxxxx xxxxxxxxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="269" translate="yes" xml:space="preserve">
          <source>If the parse operation fails, &lt;em&gt;result&lt;/em&gt; contains the default value of the underlying type of &lt;em&gt;TEnum&lt;/em&gt;.</source>
          <target state="new">Xx xxx xxxxx xxxxxxxxx xxxxx$ $xx$xxxxxx$$xx$ xxxxxxxx xxx xxxxxxx xxxxx xx xxx xxxxxxxxxx xxxx xx $xx$XXxxx$$xx$.</target>
        </trans-unit><trans-unit id="270" translate="yes" xml:space="preserve">
          <source>Note that this value need not be a member of the &lt;em&gt;TEnum&lt;/em&gt; enumeration.</source>
          <target state="new">Xxxx xxxx xxxx xxxxx xxxx xxx xx x xxxxxx xx xxx $xx$XXxxx$$xx$ xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="271" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.&lt;/p&gt;\n</source>
          <target state="new">Xxxx xxxxxxxxx xx xxxxxx xxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="272" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The enumeration type to which to convert &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxxxx xxxx xx xxxxx xx xxxxxxx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="273" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the &lt;em&gt;value&lt;/em&gt; parameter was converted successfully; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx $xx$xxxxx$$xx$ xxxxxxxxx xxx xxxxxxxxx xxxxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="274" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;TEnum&lt;/em&gt; is not an enumeration type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$XXxxx$$xx$ xx xxx xx xxxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="275" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxx xxxxxxxxxxxxxx xx xxx xxxx xx xxxxxxx xxxxx xx xxx xx xxxx xxxxxxxxxx xxxxxxxxx xx xx xxxxxxxxxx xxxxxxxxxx xxxxxx.</target>
        </trans-unit><trans-unit id="276" translate="yes" xml:space="preserve">
          <source>A parameter specifies whether the operation is case-sensitive.</source>
          <target state="new">X xxxxxxxxx xxxxxxxxx xxxxxxx xxx xxxxxxxxx xx xxxx$xxxxxxxxx.</target>
        </trans-unit><trans-unit id="277" translate="yes" xml:space="preserve">
          <source>The return value indicates whether the conversion succeeded.&lt;/p&gt;\n</source>
          <target state="new">Xxx xxxxxx xxxxx xxxxxxxxx xxxxxxx xxx xxxxxxxxxx xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="278" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The string representation of the enumeration name or underlying value to convert.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxx xxxxxxxxxxxxxx xx xxx xxxxxxxxxxx xxxx xx xxxxxxxxxx xxxxx xx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="279" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; to ignore case; &lt;strong&gt;false&lt;/strong&gt; to consider case.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxxxxx xxxx$ $xxxxxx$xxxxx$$xxxxxx$ xx xxxxxxxx xxxx.$$x$$x</target>
        </trans-unit><trans-unit id="280" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;When this method returns, &lt;em&gt;result&lt;/em&gt; contains an object of type &lt;em&gt;TEnum&lt;/em&gt; whose value is represented by &lt;em&gt;value&lt;/em&gt; if the parse operation succeeds.</source>
          <target state="new">$x$x$Xxxx xxxx xxxxxx xxxxxxx$ $xx$xxxxxx$$xx$ xxxxxxxx xx xxxxxx xx xxxx $xx$XXxxx$$xx$ xxxxx xxxxx xx xxxxxxxxxxx xx $xx$xxxxx$$xx$ xx xxx xxxxx xxxxxxxxx xxxxxxxx.</target>
        </trans-unit><trans-unit id="281" translate="yes" xml:space="preserve">
          <source>If the parse operation fails, &lt;em&gt;result&lt;/em&gt; contains the default value of the underlying type of &lt;em&gt;TEnum&lt;/em&gt;.</source>
          <target state="new">Xx xxx xxxxx xxxxxxxxx xxxxx$ $xx$xxxxxx$$xx$ xxxxxxxx xxx xxxxxxx xxxxx xx xxx xxxxxxxxxx xxxx xx $xx$XXxxx$$xx$.</target>
        </trans-unit><trans-unit id="282" translate="yes" xml:space="preserve">
          <source>Note that this value need not be a member of the &lt;em&gt;TEnum&lt;/em&gt; enumeration.</source>
          <target state="new">Xxxx xxxx xxxx xxxxx xxxx xxx xx x xxxxxx xx xxx $xx$XXxxx$$xx$ xxxxxxxxxxx.</target>
        </trans-unit><trans-unit id="283" translate="yes" xml:space="preserve">
          <source>This parameter is passed uninitialized.&lt;/p&gt;\n</source>
          <target state="new">Xxxx xxxxxxxxx xx xxxxxx xxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="284" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The enumeration type to which to convert &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxxxx xxxx xx xxxxx xx xxxxxxx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="285" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the &lt;em&gt;value&lt;/em&gt; parameter was converted successfully; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx $xx$xxxxx$$xx$ xxxxxxxxx xxx xxxxxxxxx xxxxxxxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="286" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;TEnum&lt;/em&gt; is not an enumeration type.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$XXxxx$$xx$ xx xxx xx xxxxxxxxxxx xxxx.$$x$$x</target>
        </trans-unit></group></body></file></xliff>
<?xml version="1.0"?><xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd"><file datatype="xml" original="markdown" source-language="en-US" target-language="en-US"><header><tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-56a7a5e" tool-company="Microsoft" /></header><body><group id="content" extype="content"><trans-unit id="101" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts base data types to an array of bytes, and an array of bytes to base data types.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxxx xxxx xxxxx xx xx xxxxx xx xxxxx$ xxx xx xxxxx xx xxxxx xx xxxx xxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="102" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the architecture is little-endian; &lt;strong&gt;false&lt;/strong&gt; if it is big-endian.</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxxxxxxxxxx xx xxxxxx$xxxxxx$ $xxxxxx$xxxxx$$xxxxxx$ xx xx xx xxx$xxxxxx.</target>
        </trans-unit><trans-unit id="103" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="104" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified double-precision floating point number to a 64-bit signed integer.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx xxxxx xxxxxx xx x 00$xxx xxxxxx xxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="105" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="106" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="107" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer whose value is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxxx xxxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="108" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified Boolean value as a byte array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxx xx x xxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="109" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A Boolean value.</source>
          <target state="new">$x$x$X Xxxxxxx xxxxx.</target>
        </trans-unit><trans-unit id="110" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="111" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A byte array with length 1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxx xxxxx xxxx xxxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="112" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified Unicode character value as an array of bytes.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx Xxxxxxx xxxxxxxxx xxxxx xx xx xxxxx xx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="113" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A character to convert.</source>
          <target state="new">$x$x$X xxxxxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="114" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="115" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes with length 2.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx xxxx xxxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="116" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified double-precision floating point value as an array of bytes.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx xxxxx xxxxx xx xx xxxxx xx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="117" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="118" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="119" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes with length 8.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx xxxx xxxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="120" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified 16-bit signed integer value as an array of bytes.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xxxxx xx xx xxxxx xx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="121" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="122" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="123" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes with length 2.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx xxxx xxxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="124" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified 32-bit signed integer value as an array of bytes.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xxxxx xx xx xxxxx xx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="125" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="126" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="127" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes with length 4.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx xxxx xxxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="128" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified 64-bit signed integer value as an array of bytes.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xxxxx xx xx xxxxx xx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="129" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="130" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="131" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes with length 8.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx xxxx xxxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="132" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified single-precision floating point value as an array of bytes.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx xxxxxx$xxxxxxxxx xxxxxxxx xxxxx xxxxx xx xx xxxxx xx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="133" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="134" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="135" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes with length 4.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx xxxx xxxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="136" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified 16-bit unsigned integer value as an array of bytes.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xxxxx xx xx xxxxx xx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="137" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="138" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="139" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes with length 2.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx xxxx xxxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="140" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified 32-bit unsigned integer value as an array of bytes.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xxxxx xx xx xxxxx xx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="141" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="142" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="143" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes with length 4.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx xxxx xxxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="144" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns the specified 64-bit unsigned integer value as an array of bytes.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx xxx xxxxxxxxx 00$xxx xxxxxxxx xxxxxxx xxxxx xx xx xxxxx xx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="145" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="146" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="147" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes with length 8.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx xxxx xxxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="148" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the specified 64-bit signed integer to a double-precision floating point number.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxxxx 00$xxx xxxxxx xxxxxxx xx x xxxxxx$xxxxxxxxx xxxxxxxx xxxxx xxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="149" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxxxx.</target>
        </trans-unit><trans-unit id="150" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="151" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A double-precision floating point number whose value is equivalent to &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx xxxxx xxxxxx xxxxx xxxxx xx xxxxxxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="152" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns a Boolean value converted from the byte at a specified position in a byte array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx x Xxxxxxx xxxxx xxxxxxxxx xxxx xxx xxxx xx x xxxxxxxxx xxxxxxxx xx x xxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="153" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A byte array.</source>
          <target state="new">$x$x$X xxxx xxxxx.</target>
        </trans-unit><trans-unit id="154" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="155" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The index of the byte within &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">$x$x$Xxx xxxxx xx xxx xxxx xxxxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="156" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="157" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;strong&gt;true&lt;/strong&gt; if the byte at &lt;em&gt;startIndex&lt;/em&gt; in &lt;em&gt;value&lt;/em&gt; is nonzero; otherwise, &lt;strong&gt;false&lt;/strong&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xxxxxx$xxxx$$xxxxxx$ xx xxx xxxx xx $xx$xxxxxXxxxx$$xx$ xx $xx$xxxxx$$xx$ xx xxxxxxx$ xxxxxxxxx$ $xxxxxx$xxxxx$$xxxxxx$.$$x$$x</target>
        </trans-unit><trans-unit id="158" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="159" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="160" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is less than zero or greater than the length of &lt;em&gt;value&lt;/em&gt; minus 1.</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.</target>
        </trans-unit><trans-unit id="161" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="162" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns a Unicode character converted from two bytes at a specified position in a byte array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx x Xxxxxxx xxxxxxxxx xxxxxxxxx xxxx xxx xxxxx xx x xxxxxxxxx xxxxxxxx xx x xxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="163" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array.</source>
          <target state="new">$x$x$Xx xxxxx.</target>
        </trans-unit><trans-unit id="164" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="165" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting position within &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxxxxx xxxxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="166" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="167" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A character formed by two bytes beginning at &lt;em&gt;startIndex&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxxxxx xxxxxx xx xxx xxxxx xxxxxxxxx xx $xx$xxxxxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="168" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; equals the length of &lt;em&gt;value&lt;/em&gt; minus 1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xxxxxx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="169" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="170" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="171" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is less than zero or greater than the length of &lt;em&gt;value&lt;/em&gt; minus 1.</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.</target>
        </trans-unit><trans-unit id="172" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="173" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns a double-precision floating point number converted from eight bytes at a specified position in a byte array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx x xxxxxx$xxxxxxxxx xxxxxxxx xxxxx xxxxxx xxxxxxxxx xxxx xxxxx xxxxx xx x xxxxxxxxx xxxxxxxx xx x xxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="174" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes.</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="175" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="176" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting position within &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxxxxx xxxxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="177" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="178" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A double precision floating point number formed by eight bytes beginning at &lt;em&gt;startIndex&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx xxxxxxxxx xxxxxxxx xxxxx xxxxxx xxxxxx xx xxxxx xxxxx xxxxxxxxx xx $xx$xxxxxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="179" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is greater than or equal to the length of &lt;em&gt;value&lt;/em&gt; minus 7, and is less than or equal to the length of &lt;em&gt;value&lt;/em&gt; minus 1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxxx xx xxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0$ xxx xx xxxx xxxx xx xxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="180" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="181" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="182" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is less than zero or greater than the length of &lt;em&gt;value&lt;/em&gt; minus 1.</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.</target>
        </trans-unit><trans-unit id="183" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="184" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns a 16-bit signed integer converted from two bytes at a specified position in a byte array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx x 00$xxx xxxxxx xxxxxxx xxxxxxxxx xxxx xxx xxxxx xx x xxxxxxxxx xxxxxxxx xx x xxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="185" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes.</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="186" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="187" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting position within &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxxxxx xxxxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="188" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="189" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit signed integer formed by two bytes beginning at &lt;em&gt;startIndex&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxxxx xx xxx xxxxx xxxxxxxxx xx $xx$xxxxxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="190" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; equals the length of &lt;em&gt;value&lt;/em&gt; minus 1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xxxxxx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="191" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="192" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="193" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is less than zero or greater than the length of &lt;em&gt;value&lt;/em&gt; minus 1.</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.</target>
        </trans-unit><trans-unit id="194" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="195" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns a 32-bit signed integer converted from four bytes at a specified position in a byte array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx x 00$xxx xxxxxx xxxxxxx xxxxxxxxx xxxx xxxx xxxxx xx x xxxxxxxxx xxxxxxxx xx x xxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="196" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes.</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="197" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="198" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting position within &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxxxxx xxxxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="199" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="200" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit signed integer formed by four bytes beginning at &lt;em&gt;startIndex&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxxxx xx xxxx xxxxx xxxxxxxxx xx $xx$xxxxxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="201" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is greater than or equal to the length of &lt;em&gt;value&lt;/em&gt; minus 3, and is less than or equal to the length of &lt;em&gt;value&lt;/em&gt; minus 1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxxx xx xxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0$ xxx xx xxxx xxxx xx xxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="202" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="203" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="204" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is less than zero or greater than the length of &lt;em&gt;value&lt;/em&gt; minus 1.</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.</target>
        </trans-unit><trans-unit id="205" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="206" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns a 64-bit signed integer converted from eight bytes at a specified position in a byte array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx x 00$xxx xxxxxx xxxxxxx xxxxxxxxx xxxx xxxxx xxxxx xx x xxxxxxxxx xxxxxxxx xx x xxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="207" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes.</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="208" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="209" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting position within &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxxxxx xxxxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="210" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="211" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit signed integer formed by eight bytes beginning at &lt;em&gt;startIndex&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxx xxxxxxx xxxxxx xx xxxxx xxxxx xxxxxxxxx xx $xx$xxxxxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="212" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is greater than or equal to the length of &lt;em&gt;value&lt;/em&gt; minus 7, and is less than or equal to the length of &lt;em&gt;value&lt;/em&gt; minus 1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxxx xx xxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0$ xxx xx xxxx xxxx xx xxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="213" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="214" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="215" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is less than zero or greater than the length of &lt;em&gt;value&lt;/em&gt; minus 1.</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.</target>
        </trans-unit><trans-unit id="216" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="217" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns a single-precision floating point number converted from four bytes at a specified position in a byte array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx x xxxxxx$xxxxxxxxx xxxxxxxx xxxxx xxxxxx xxxxxxxxx xxxx xxxx xxxxx xx x xxxxxxxxx xxxxxxxx xx x xxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="218" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes.</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="219" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="220" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting position within &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxxxxx xxxxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="221" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="222" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A single-precision floating point number formed by four bytes beginning at &lt;em&gt;startIndex&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X xxxxxx$xxxxxxxxx xxxxxxxx xxxxx xxxxxx xxxxxx xx xxxx xxxxx xxxxxxxxx xx $xx$xxxxxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="223" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is greater than or equal to the length of &lt;em&gt;value&lt;/em&gt; minus 3, and is less than or equal to the length of &lt;em&gt;value&lt;/em&gt; minus 1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxxx xx xxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0$ xxx xx xxxx xxxx xx xxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="224" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="225" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="226" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is less than zero or greater than the length of &lt;em&gt;value&lt;/em&gt; minus 1.</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.</target>
        </trans-unit><trans-unit id="227" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="228" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the numeric value of each element of a specified array of bytes to its equivalent hexadecimal string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxx xxxxx xx xxxx xxxxxxx xx x xxxxxxxxx xxxxx xx xxxxx xx xxx xxxxxxxxxx xxxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="229" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes.</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="230" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="231" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="232" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="233" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the numeric value of each element of a specified subarray of bytes to its equivalent hexadecimal string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxx xxxxx xx xxxx xxxxxxx xx x xxxxxxxxx xxxxxxxx xx xxxxx xx xxx xxxxxxxxxx xxxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="234" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes.</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="235" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="236" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting position within &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxxxxx xxxxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="237" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="238" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="239" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="240" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is less than zero or greater than the length of &lt;em&gt;value&lt;/em&gt; minus 1.</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.</target>
        </trans-unit><trans-unit id="241" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="242" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Converts the numeric value of each element of a specified subarray of bytes to its equivalent hexadecimal string representation.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxxx xxx xxxxxxx xxxxx xx xxxx xxxxxxx xx x xxxxxxxxx xxxxxxxx xx xxxxx xx xxx xxxxxxxxxx xxxxxxxxxxx xxxxxx xxxxxxxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="243" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes.</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="244" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="245" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting position within &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxxxxx xxxxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="246" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="247" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The number of array elements in &lt;em&gt;value&lt;/em&gt; to convert.</source>
          <target state="new">$x$x$Xxx xxxxxx xx xxxxx xxxxxxxx xx $xx$xxxxx$$xx$ xx xxxxxxx.</target>
        </trans-unit><trans-unit id="248" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="249" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="250" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="251" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; or &lt;em&gt;length&lt;/em&gt; is less than zero.&lt;/p&gt;\n&lt;p&gt;-or-&lt;/p&gt;\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is greater than zero and is greater than or equal to the length of &lt;em&gt;value&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx $xx$xxxxxx$$xx$ xx xxxx xxxx xxxx.$$x$$x$x$$xx$$$x$$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxxx xxxx xxx xx xxxxxxx xxxx xx xxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="252" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The combination of &lt;em&gt;startIndex&lt;/em&gt; and &lt;em&gt;length&lt;/em&gt; does not specify a position within &lt;em&gt;value&lt;/em&gt;; that is, the &lt;em&gt;startIndex&lt;/em&gt; parameter is greater than the length of &lt;em&gt;value&lt;/em&gt; minus the &lt;em&gt;length&lt;/em&gt; parameter.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxx xxxxxxxxxxx xx $xx$xxxxxXxxxx$$xx$ xxx $xx$xxxxxx$$xx$ xxxx xxx xxxxxxx x xxxxxxxx xxxxxx $xx$xxxxx$$xx$$ xxxx xx$ xxx $xx$xxxxxXxxxx$$xx$ xxxxxxxxx xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx xxx $xx$xxxxxx$$xx$ xxxxxxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="253" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns a 16-bit unsigned integer converted from two bytes at a specified position in a byte array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx x 00$xxx xxxxxxxx xxxxxxx xxxxxxxxx xxxx xxx xxxxx xx x xxxxxxxxx xxxxxxxx xx x xxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="254" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The array of bytes.</source>
          <target state="new">$x$x$Xxx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="255" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="256" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting position within &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxxxxx xxxxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="257" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="258" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 16-bit unsigned integer formed by two bytes beginning at &lt;em&gt;startIndex&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxxxx xx xxx xxxxx xxxxxxxxx xx $xx$xxxxxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="259" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; equals the length of &lt;em&gt;value&lt;/em&gt; minus 1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xxxxxx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="260" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="261" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="262" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is less than zero or greater than the length of &lt;em&gt;value&lt;/em&gt; minus 1.</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.</target>
        </trans-unit><trans-unit id="263" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="264" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns a 32-bit unsigned integer converted from four bytes at a specified position in a byte array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx x 00$xxx xxxxxxxx xxxxxxx xxxxxxxxx xxxx xxxx xxxxx xx x xxxxxxxxx xxxxxxxx xx x xxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="265" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes.</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="266" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="267" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting position within &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxxxxx xxxxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="268" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="269" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 32-bit unsigned integer formed by four bytes beginning at &lt;em&gt;startIndex&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxxxx xx xxxx xxxxx xxxxxxxxx xx $xx$xxxxxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="270" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is greater than or equal to the length of &lt;em&gt;value&lt;/em&gt; minus 3, and is less than or equal to the length of &lt;em&gt;value&lt;/em&gt; minus 1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxxx xx xxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0$ xxx xx xxxx xxxx xx xxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="271" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="272" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="273" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is less than zero or greater than the length of &lt;em&gt;value&lt;/em&gt; minus 1.</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.</target>
        </trans-unit><trans-unit id="274" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="275" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;Returns a 64-bit unsigned integer converted from eight bytes at a specified position in a byte array.&lt;/p&gt;\n</source>
          <target state="new">$x$x$Xxxxxxx x 00$xxx xxxxxxxx xxxxxxx xxxxxxxxx xxxx xxxxx xxxxx xx x xxxxxxxxx xxxxxxxx xx x xxxx xxxxx.$$x$$x</target>
        </trans-unit><trans-unit id="276" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;An array of bytes.</source>
          <target state="new">$x$x$Xx xxxxx xx xxxxx.</target>
        </trans-unit><trans-unit id="277" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="278" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;The starting position within &lt;em&gt;value&lt;/em&gt;.</source>
          <target state="new">$x$x$Xxx xxxxxxxx xxxxxxxx xxxxxx $xx$xxxxx$$xx$.</target>
        </trans-unit><trans-unit id="279" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="280" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;A 64-bit unsigned integer formed by the eight bytes beginning at &lt;em&gt;startIndex&lt;/em&gt;.&lt;/p&gt;\n</source>
          <target state="new">$x$x$X 00$xxx xxxxxxxx xxxxxxx xxxxxx xx xxx xxxxx xxxxx xxxxxxxxx xx $xx$xxxxxXxxxx$$xx$.$$x$$x</target>
        </trans-unit><trans-unit id="281" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is greater than or equal to the length of &lt;em&gt;value&lt;/em&gt; minus 7, and is less than or equal to the length of &lt;em&gt;value&lt;/em&gt; minus 1.&lt;/p&gt;\n</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxxxxx xxxx xx xxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0$ xxx xx xxxx xxxx xx xxxxx xx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.$$x$$x</target>
        </trans-unit><trans-unit id="282" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;value&lt;/em&gt; is &lt;strong&gt;null&lt;/strong&gt;.</source>
          <target state="new">$x$x$$x$xx$xxxxx$$xx$ xx $xxxxxx$xxxx$$xxxxxx$.</target>
        </trans-unit><trans-unit id="283" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit><trans-unit id="284" translate="yes" xml:space="preserve">
          <source>\n&lt;p&gt;\n&lt;em&gt;startIndex&lt;/em&gt; is less than zero or greater than the length of &lt;em&gt;value&lt;/em&gt; minus 1.</source>
          <target state="new">$x$x$$x$xx$xxxxxXxxxx$$xx$ xx xxxx xxxx xxxx xx xxxxxxx xxxx xxx xxxxxx xx $xx$xxxxx$$xx$ xxxxx 0.</target>
        </trans-unit><trans-unit id="285" translate="yes" xml:space="preserve">
          <source>&lt;/p&gt;\n</source>
          <target state="new">$$x$$x</target>
        </trans-unit></group></body></file></xliff>
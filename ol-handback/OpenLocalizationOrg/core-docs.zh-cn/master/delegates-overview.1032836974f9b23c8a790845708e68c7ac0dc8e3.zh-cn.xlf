<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-442b6d0" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">bf4bfad76f6e6dc60ae4dd6867130d4eb7fbaea2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">docs\csharp\delegates-overview.md</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
      <xliffext:olskeletonhash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e7eb73e7776b55d83f665754c7c1a322cd5585f0</xliffext:olskeletonhash>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Introduction to Delegates</source>
          <target state="new">Introduction to Delegates</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>Introduction to Delegates</source>
          <target state="new">Introduction to Delegates</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>.NET, .NET Core</source>
          <target state="new">.NET, .NET Core</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>Introduction to Delegates</source>
          <target state="new">Introduction to Delegates</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>Previous</source>
          <target state="new">Previous</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Delegates provide a <bpt id="p1">*</bpt>late binding<ept id="p1">*</ept> mechanism in .NET.</source>
          <target state="new">Delegates provide a <bpt id="p1">*</bpt>late binding<ept id="p1">*</ept> mechanism in .NET.</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>Late Binding means that you create an algorithm where the caller also supplies at least one method that implements part of the algorithm.</source>
          <target state="new">Late Binding means that you create an algorithm where the caller also supplies at least one method that implements part of the algorithm.</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>For example, consider sorting a list of stars in an astronomy application.</source>
          <target state="new">For example, consider sorting a list of stars in an astronomy application.</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>You may choose to sort those stars by their distance from the earth, or the magnitude of the star, or their perceived brightness.</source>
          <target state="new">You may choose to sort those stars by their distance from the earth, or the magnitude of the star, or their perceived brightness.</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>In all those cases, the Sort() method does essentially the same thing: arranges the items in the list based on some comparison.</source>
          <target state="new">In all those cases, the Sort() method does essentially the same thing: arranges the items in the list based on some comparison.</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>The code that compares two stars is different for each of the sort orderings.</source>
          <target state="new">The code that compares two stars is different for each of the sort orderings.</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>These kinds of solutions have been used in software for half a century.</source>
          <target state="new">These kinds of solutions have been used in software for half a century.</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>The C# language delegate concept provides first class language support, and type safety around the concept.</source>
          <target state="new">The C# language delegate concept provides first class language support, and type safety around the concept.</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>As you'll see later in this series, the C# code you write for algorithms like this is type safe, and leverages the language and the compiler to ensure that the types match for arguments and return types.</source>
          <target state="new">As you'll see later in this series, the C# code you write for algorithms like this is type safe, and leverages the language and the compiler to ensure that the types match for arguments and return types.</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>Language Design Goals for Delegates</source>
          <target state="new">Language Design Goals for Delegates</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>The language designers enumerated several goals for the feature that eventually became delegates.</source>
          <target state="new">The language designers enumerated several goals for the feature that eventually became delegates.</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>The team wanted a common language construct that could be used for any late binding algorithms.</source>
          <target state="new">The team wanted a common language construct that could be used for any late binding algorithms.</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>That enables developers to learn one concept, and use that same concept across many different software problems.</source>
          <target state="new">That enables developers to learn one concept, and use that same concept across many different software problems.</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>Second, the team wanted to support both single and multi-cast method calls.</source>
          <target state="new">Second, the team wanted to support both single and multi-cast method calls.</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>(Multicast delegates are delegates where multiple methods have been chained together.</source>
          <target state="new">(Multicast delegates are delegates where multiple methods have been chained together.</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>You'll see examples <bpt id="p1">[</bpt>later in this series<ept id="p1">](delegate-class.md)</ept>.</source>
          <target state="new">You'll see examples <bpt id="p1">[</bpt>later in this series<ept id="p1">](delegate-class.md)</ept>.</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>The team wanted delegates to support the same type safety that developers expect from all C# constructs.</source>
          <target state="new">The team wanted delegates to support the same type safety that developers expect from all C# constructs.</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Finally, the team recognized that an event pattern is one specific pattern where delegates, or any late binding algorithm) is very useful.</source>
          <target state="new">Finally, the team recognized that an event pattern is one specific pattern where delegates, or any late binding algorithm) is very useful.</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>The team wanted to ensure that the code for delegates could provide the basis for the .NET event pattern.</source>
          <target state="new">The team wanted to ensure that the code for delegates could provide the basis for the .NET event pattern.</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>The result of all that work was the delegate and event support in C# and .NET.</source>
          <target state="new">The result of all that work was the delegate and event support in C# and .NET.</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>The remaining articles in this section will cover the language features, the library support, and the common idioms that are used when you work with delegates.</source>
          <target state="new">The remaining articles in this section will cover the language features, the library support, and the common idioms that are used when you work with delegates.</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>You'll learn about the <ph id="ph1">`delegate`</ph> keyword and what code it generates.</source>
          <target state="new">You'll learn about the <ph id="ph1">`delegate`</ph> keyword and what code it generates.</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>You'll learn about the features in the <ph id="ph1">`System.Delegate`</ph> class, and how those features are used.</source>
          <target state="new">You'll learn about the features in the <ph id="ph1">`System.Delegate`</ph> class, and how those features are used.</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>You'll learn how to create type safe delegates, and how to create methods that can be invoked through delegates.</source>
          <target state="new">You'll learn how to create type safe delegates, and how to create methods that can be invoked through delegates.</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>You'll also learn how to work with delegates and events by using Lambda expressions.</source>
          <target state="new">You'll also learn how to work with delegates and events by using Lambda expressions.</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>You'll see where delegates become one of the building blocks for LINQ.</source>
          <target state="new">You'll see where delegates become one of the building blocks for LINQ.</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>You'll learn how delegates are the basis for the .NET event pattern, and how they are different.</source>
          <target state="new">You'll learn how delegates are the basis for the .NET event pattern, and how they are different.</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>Overall, you'll see how delegates are an integral part of programming in .NET and working with the framework APIs.</source>
          <target state="new">Overall, you'll see how delegates are an integral part of programming in .NET and working with the framework APIs.</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Let's get started.</source>
          <target state="new">Let's get started.</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>Next</source>
          <target state="new">Next</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>
<?xml version="1.0"?>
<xliff version="1.2" xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="markdown" source-language="en-US" target-language="zh-cn">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-22243b3" tool-company="Microsoft" />
      <xliffext:olfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c9e5c3e8802f79e95c8e1e09df552f6c9b774fe2</xliffext:olfilehash>
      <xliffext:olfilepath xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Microsoft.CSharp.RuntimeBinder.Binder.yml</xliffext:olfilepath>
      <xliffext:oltranslationpriority xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">
      </xliffext:oltranslationpriority>
      <xliffext:oltranslationtype xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">Human Translation</xliffext:oltranslationtype>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve">
          <source>Binder</source>
          <target state="new">BinderXXXPerLocale</target>
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve">
          <source>BinaryOperation(CSharpBinderFlags, Linq.Expressions.ExpressionType, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</source>
          <target state="new">BinaryOperation(CSharpBinderFlags, Linq.Expressions.ExpressionType, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</target>
        </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve">
          <source>Convert(CSharpBinderFlags, Type, Type)</source>
          <target state="new">Convert(CSharpBinderFlags, Type, Type)</target>
        </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve">
          <source>GetIndex(CSharpBinderFlags, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</source>
          <target state="new">GetIndex(CSharpBinderFlags, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</target>
        </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve">
          <source>GetMember(CSharpBinderFlags, String, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</source>
          <target state="new">GetMember(CSharpBinderFlags, String, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</target>
        </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve">
          <source>Invoke(CSharpBinderFlags, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</source>
          <target state="new">Invoke(CSharpBinderFlags, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</target>
        </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve">
          <source>InvokeConstructor(CSharpBinderFlags, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</source>
          <target state="new">InvokeConstructor(CSharpBinderFlags, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</target>
        </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve">
          <source>InvokeMember(CSharpBinderFlags, String, IEnumerable&lt;Type&gt;, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</source>
          <target state="new">InvokeMember(CSharpBinderFlags, String, IEnumerable&lt;Type&gt;, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</target>
        </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve">
          <source>IsEvent(CSharpBinderFlags, String, Type)</source>
          <target state="new">IsEvent(CSharpBinderFlags, String, Type)</target>
        </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve">
          <source>SetIndex(CSharpBinderFlags, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</source>
          <target state="new">SetIndex(CSharpBinderFlags, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</target>
        </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve">
          <source>SetMember(CSharpBinderFlags, String, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</source>
          <target state="new">SetMember(CSharpBinderFlags, String, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</target>
        </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve">
          <source>UnaryOperation(CSharpBinderFlags, Linq.Expressions.ExpressionType, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</source>
          <target state="new">UnaryOperation(CSharpBinderFlags, Linq.Expressions.ExpressionType, Type, IEnumerable&lt;CSharpArgumentInfo&gt;)</target>
        </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve">
          <source>Microsoft.CSharp.RuntimeBinder</source>
          <target state="new">Microsoft.CSharp.RuntimeBinder</target>
        </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve">
          <source>ToString()</source>
          <target state="new">ToString()</target>
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve">
          <source>ToString</source>
          <target state="new">ToString</target>
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve">
          <source>ToString</source>
          <target state="new">ToString</target>
        </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve">
          <source>Equals(Object)</source>
          <target state="new">Equals(Object)</target>
        </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve">
          <source>Equals(Object, Object)</source>
          <target state="new">Equals(Object, Object)</target>
        </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve">
          <source>Equals</source>
          <target state="new">Equals</target>
        </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve">
          <source>ReferenceEquals(Object, Object)</source>
          <target state="new">ReferenceEquals(Object, Object)</target>
        </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve">
          <source>ReferenceEquals</source>
          <target state="new">ReferenceEquals</target>
        </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve">
          <source>ReferenceEquals</source>
          <target state="new">ReferenceEquals</target>
        </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve">
          <source>,</source>
          <target state="new">,</target>
        </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve">
          <source>Object</source>
          <target state="new">Object</target>
        </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve">
          <source>GetHashCode()</source>
          <target state="new">GetHashCode()</target>
        </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve">
          <source>GetHashCode</source>
          <target state="new">GetHashCode</target>
        </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve">
          <source>GetHashCode</source>
          <target state="new">GetHashCode</target>
        </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve">
          <source>GetType()</source>
          <target state="new">GetType()</target>
        </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve">
          <source>GetType</source>
          <target state="new">GetType</target>
        </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve">
          <source>GetType</source>
          <target state="new">GetType</target>
        </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve">
          <source>MemberwiseClone()</source>
          <target state="new">MemberwiseClone()</target>
        </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve">
          <source>MemberwiseClone</source>
          <target state="new">MemberwiseClone</target>
        </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve">
          <source>MemberwiseClone</source>
          <target state="new">MemberwiseClone</target>
        </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve">
          <source>(</source>
          <target state="new">(</target>
        </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve">
          <source>System</source>
          <target state="new">System</target>
        </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve">
          <source>CSharpBinderFlags</source>
          <target state="new">CSharpBinderFlags</target>
        </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve">
          <source>ExpressionType</source>
          <target state="new">ExpressionType</target>
        </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve">
          <source>IEnumerable&lt;CSharpArgumentInfo&gt;</source>
          <target state="new">IEnumerable&lt;CSharpArgumentInfo&gt;</target>
        </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve">
          <source>IEnumerable</source>
          <target state="new">IEnumerable</target>
        </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve">
          <source>CSharpArgumentInfo</source>
          <target state="new">CSharpArgumentInfo</target>
        </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve">
          <source>IEnumerable</source>
          <target state="new">IEnumerable</target>
        </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve">
          <source>(Of</source>
          <target state="new">(Of</target>
        </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve">
          <source>CSharpArgumentInfo</source>
          <target state="new">CSharpArgumentInfo</target>
        </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve">
          <source>CallSiteBinder</source>
          <target state="new">CallSiteBinder</target>
        </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve">
          <source>System.Linq.Expressions</source>
          <target state="new">System.Linq.Expressions</target>
        </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve">
          <source>IEnumerable&lt;T&gt;</source>
          <target state="new">IEnumerable&lt;T&gt;</target>
        </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve">
          <source>IEnumerable</source>
          <target state="new">IEnumerable</target>
        </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve">
          <source>IEnumerable</source>
          <target state="new">IEnumerable</target>
        </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve">
          <source>(Of</source>
          <target state="new">(Of</target>
        </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve">
          <source>T</source>
          <target state="new">T</target>
        </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve">
          <source>System.Collections.Generic</source>
          <target state="new">System.Collections.Generic</target>
        </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve">
          <source>System.Runtime.CompilerServices</source>
          <target state="new">System.Runtime.CompilerServices</target>
        </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve">
          <source>String</source>
          <target state="new">String</target>
        </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve">
          <source>IEnumerable&lt;Type&gt;</source>
          <target state="new">IEnumerable&lt;Type&gt;</target>
        </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve">
          <source>IEnumerable</source>
          <target state="new">IEnumerable</target>
        </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve">
          <source>IEnumerable</source>
          <target state="new">IEnumerable</target>
        </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve">
          <source>(Of</source>
          <target state="new">(Of</target>
        </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve">
          <source>Type</source>
          <target state="new">Type</target>
        </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve">
          <source>)</source>
          <target state="new">)</target>
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>